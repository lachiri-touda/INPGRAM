{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/home/sanata/Desktop/InpGram/InstaClone/src/Screens/LogIn/Register.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { connect } from 'react-redux';\n\nvar axios = require('axios');\n\nimport AuthStyle from \"./AuthStyle\";\nvar styles = StyleSheet.create(_objectSpread({}, AuthStyle));\nimport { signup as _signup } from \"../../actions/signupActions\";\n\nfunction Register(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      name = _useState6[0],\n      setName = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      email = _useState8[0],\n      setEmail = _useState8[1];\n\n  var didMountRef = useRef(false);\n  useEffect(function () {\n    if (didMountRef.current) {\n      if (props.isAuth) {\n        props.navigation.navigate('LogIn');\n        Alert.alert('User is saved');\n      } else if (!props.isAuth && !props.isLoading) {\n        Alert.alert(props.errMsg);\n      }\n    } else {\n      didMountRef.current = true;\n    }\n  }, [props.isAuth, props.isLoading]);\n\n  var signupHandler = function signupHandler() {\n    var signupData = {\n      email: email,\n      name: name,\n      username: username,\n      password: password\n    };\n    props.signup(signupData);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, \"INPGRAM \"), React.createElement(Text, {\n    style: styles.titleText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, \"SignUp \"), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    style: styles.TextInput,\n    placeholder: \"email\",\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    value: email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }), React.createElement(TextInput, {\n    style: styles.TextInput,\n    placeholder: \"username\",\n    onChangeText: function onChangeText(text) {\n      return setUsername(text);\n    },\n    value: username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  }), React.createElement(TextInput, {\n    style: styles.TextInput,\n    placeholder: \"name\",\n    onChangeText: function onChangeText(text) {\n      return setName(text);\n    },\n    value: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    style: styles.TextInput,\n    placeholder: \"password\",\n    secureTextEntry: true,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    value: password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }), React.createElement(Button, {\n    style: styles.TextInput,\n    onPress: signupHandler,\n    title: \"Sign Up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }), React.createElement(Button, {\n    style: styles.TextInput,\n    onPress: function onPress() {\n      return props.navigation.navigate(\"LogIn\");\n    },\n    title: \"LogIn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  })));\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isLoading: state.signupReducer.isLoading,\n    isAuth: state.signupReducer.isAuth,\n    errMsg: state.signupReducer.errMsg\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    signup: function signup(signupData) {\n      return dispatch(_signup(signupData));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);","map":{"version":3,"sources":["/home/sanata/Desktop/InpGram/InstaClone/src/Screens/LogIn/Register.js"],"names":["React","useState","useRef","useEffect","connect","axios","require","AuthStyle","styles","StyleSheet","create","signup","Register","props","username","setUsername","password","setPassword","name","setName","email","setEmail","didMountRef","current","isAuth","navigation","navigate","Alert","alert","isLoading","errMsg","signupHandler","signupData","container","title","titleText","TextInput","text","mapStateToProps","state","signupReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport {View,Button,Text,TextInput,Alert, StyleSheet } from 'react-native'\nimport { connect } from 'react-redux';\nconst axios = require('axios');\n\nimport AuthStyle from './AuthStyle'\nconst styles = StyleSheet.create({ ...AuthStyle})\n\nimport {signup} from '../../actions/signupActions';\n\n\nfunction Register(props) {\n\n   \n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n\n    // useRef hook to check whether the component has just mounted or updated\n  \n    const didMountRef = useRef(false);\n  // useEffect() to check if states have changed\n  // 2nd argument is the list of states you want to watch for\n  useEffect(() => {\n    if (didMountRef.current) {\n      // if signup success, go to login screen\n      if (props.isAuth) {\n        props.navigation.navigate('LogIn');\n        Alert.alert('User is saved');\n      } else if (!props.isAuth && !props.isLoading) {\n        Alert.alert(props.errMsg);\n      }\n    } else {\n      didMountRef.current = true;\n    }\n  }, [props.isAuth, props.isLoading]);\n\n    /*SignUp(){\n        const { email, password, username } = this.state;\n        const navigation=this.props.navigation;\n        axios({\n            method: 'post',\n            url: '/register',\n            baseURL: 'http://localhost:3000',\n            data: {\n              name: username,\n              email: email,\n              password: password\n            }\n            })\n\n        .then(function (reponse) {\n                //On traite la suite une fois la réponse obtenue \n                console.log(reponse);\n                navigation.navigate('LogIn');\n\n                Alert.alert(\"User is saved\");\n                \n        })\n        .catch(function (error) {\n                //On traite ici les erreurs éventuellement survenues\n                console.log(error[\"data\"]);\n                Alert.alert(\"Error!\");\n        });\n        //navigation.navigate('LogIn');\n\n    }*/\n    \n    const signupHandler = () => {\n\n        const signupData = {\n          email: email,\n          name: name, \n          username: username,        \n          password: password\n          \n        }\n        // calling signup() dispatch\n        \n        props.signup(signupData);\n      }\n\n  \n        return (\n          <View style={styles.container}>\n            <Text style={styles.title}>INPGRAM </Text>\n            <Text style={styles.titleText}>SignUp </Text>\n            <View>\n              <TextInput\n                style={styles.TextInput}\n                placeholder=\"email\"\n                onChangeText={(text) => setEmail(text)}\n                value={email}\n              />\n              <TextInput\n                style={styles.TextInput}\n                placeholder=\"username\"\n                onChangeText={(text) => setUsername(text)}\n                value={username}\n              />\n                <TextInput\n                style={styles.TextInput}\n                placeholder=\"name\"\n                onChangeText={(text) => setName(text)}\n                value={name}\n              />\n              <TextInput\n                style={styles.TextInput}\n                placeholder=\"password\"\n                secureTextEntry={true}\n                onChangeText={(text) => setPassword(text)}\n                value={password}\n              />\n              <Button\n                style={styles.TextInput}\n                onPress={signupHandler}\n                title=\"Sign Up\"\n              />\n              <Button\n                style={styles.TextInput}\n                onPress={() => props.navigation.navigate(\"LogIn\")}\n                title=\"LogIn\"\n              />\n            </View>\n          </View>\n        );\n    \n}\n\nconst mapStateToProps = state => {\n    return {\n      // only map needed states here\n      isLoading: state.signupReducer.isLoading,\n      isAuth: state.signupReducer.isAuth,\n      errMsg: state.signupReducer.errMsg,\n    }\n  }\n  const mapDispatchToProps = dispatch => {\n    return {\n      // only map needed dispatches here\n      signup: signupData => dispatch(signup(signupData)),\n    }\n  }\n\n  export default connect(mapStateToProps, mapDispatchToProps)(Register);\n\n"]},"metadata":{},"sourceType":"module"}