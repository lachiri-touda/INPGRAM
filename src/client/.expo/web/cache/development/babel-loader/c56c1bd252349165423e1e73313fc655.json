{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport { LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAILURE, SET_AUTH_TOKEN, SET_CURRENT_USER, LOGOUT_USER } from \"../actions/loginActions\";\nvar initState = {\n  isLoading: false,\n  isAuth: false,\n  loginData: {},\n  errMsg: \"\",\n  authToken: AsyncStorage.getItem(\"token\"),\n  userDetails: \"\"\n};\n\nvar loginReducer = function loginReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOGIN_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoading: true\n      });\n\n    case LOGIN_SUCCESS:\n      AsyncStorage.setItem(\"token\", action.payload.token);\n      return {\n        isAuth: true,\n        isLoading: false,\n        loginData: action.payload,\n        errMsg: \"\",\n        userDetails: action.payload.id\n      };\n\n    case LOGIN_FAILURE:\n      AsyncStorage.removeItem(\"token\");\n      return {\n        isLoading: false,\n        isAuth: false,\n        loginData: {},\n        errMsg: action.payload\n      };\n\n    case SET_CURRENT_USER:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        userDetails: action.payload,\n        isAuth: true\n      });\n\n    case LOGOUT_USER:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isAuth: false\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default loginReducer;","map":{"version":3,"sources":["/home/sanata/Desktop/InpGram/InstaClone/src/reducers/loginReducer.js"],"names":["AsyncStorage","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","SET_AUTH_TOKEN","SET_CURRENT_USER","LOGOUT_USER","initState","isLoading","isAuth","loginData","errMsg","authToken","getItem","userDetails","loginReducer","state","action","type","setItem","payload","token","id","removeItem"],"mappings":";;;;;;AACA,OAAOA,YAAP,MAAyB,uCAAzB;AACA,SACEC,aADF,EAEEC,aAFF,EAGEC,aAHF,EAIEC,cAJF,EAKEC,gBALF,EAMEC,WANF;AAUA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,SAAS,EAAE,KADK;AAEhBC,EAAAA,MAAM,EAAE,KAFQ;AAGhBC,EAAAA,SAAS,EAAE,EAHK;AAIhBC,EAAAA,MAAM,EAAE,EAJQ;AAKhBC,EAAAA,SAAS,EAAEZ,YAAY,CAACa,OAAb,CAAqB,OAArB,CALK;AAMhBC,EAAAA,WAAW,EAAE;AANG,CAAlB;;AASA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAA+B;AAAA,MAA9BC,KAA8B,uEAAtBT,SAAsB;AAAA,MAAXU,MAAW;;AAClD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKjB,aAAL;AACE,6CACKe,KADL;AAEER,QAAAA,SAAS,EAAE;AAFb;;AAIF,SAAKN,aAAL;AACEF,MAAAA,YAAY,CAACmB,OAAb,CAAqB,OAArB,EAA8BF,MAAM,CAACG,OAAP,CAAeC,KAA7C;AACA,aAAO;AACLZ,QAAAA,MAAM,EAAE,IADH;AAELD,QAAAA,SAAS,EAAE,KAFN;AAGLE,QAAAA,SAAS,EAAEO,MAAM,CAACG,OAHb;AAILT,QAAAA,MAAM,EAAE,EAJH;AAMLG,QAAAA,WAAW,EAAEG,MAAM,CAACG,OAAP,CAAeE;AANvB,OAAP;;AAQF,SAAKnB,aAAL;AACEH,MAAAA,YAAY,CAACuB,UAAb,CAAwB,OAAxB;AACA,aAAO;AACLf,QAAAA,SAAS,EAAE,KADN;AAELC,QAAAA,MAAM,EAAE,KAFH;AAGLC,QAAAA,SAAS,EAAE,EAHN;AAILC,QAAAA,MAAM,EAAEM,MAAM,CAACG;AAJV,OAAP;;AAMF,SAAKf,gBAAL;AACE,6CACKW,KADL;AAEEF,QAAAA,WAAW,EAAEG,MAAM,CAACG,OAFtB;AAGEX,QAAAA,MAAM,EAAE;AAHV;;AAKF,SAAKH,WAAL;AACE,6CACKU,KADL;AAEEP,QAAAA,MAAM,EAAE;AAFV;;AAIF;AACE,aAAOO,KAAP;AApCJ;AAsCD,CAvCD;;AAyCA,eAAeD,YAAf","sourcesContent":["// import {Alert} from 'react-native';\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport {\n  LOGIN_REQUEST,\n  LOGIN_SUCCESS,\n  LOGIN_FAILURE,\n  SET_AUTH_TOKEN,\n  SET_CURRENT_USER,\n  LOGOUT_USER,\n} from \"../actions/loginActions\";\n\n// init state for login\nconst initState = {\n  isLoading: false,\n  isAuth: false,\n  loginData: {},\n  errMsg: \"\",\n  authToken: AsyncStorage.getItem(\"token\"),\n  userDetails: \"\",\n};\n\nconst loginReducer = (state = initState, action) => {\n  switch (action.type) {\n    case LOGIN_REQUEST:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case LOGIN_SUCCESS:\n      AsyncStorage.setItem(\"token\", action.payload.token);\n      return {\n        isAuth: true,\n        isLoading: false,\n        loginData: action.payload,\n        errMsg: \"\",\n        // authToken: action.payload.token,\n        userDetails: action.payload.id,\n      };\n    case LOGIN_FAILURE:\n      AsyncStorage.removeItem(\"token\");\n      return {\n        isLoading: false,\n        isAuth: false,\n        loginData: {},\n        errMsg: action.payload,\n      };\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        userDetails: action.payload,\n        isAuth: true,\n      };\n    case LOGOUT_USER:\n      return {\n        ...state,\n        isAuth: false,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default loginReducer;\n"]},"metadata":{},"sourceType":"module"}