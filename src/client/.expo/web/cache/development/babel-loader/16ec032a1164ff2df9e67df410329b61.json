{"ast":null,"code":"import axios from \"axios\";\nimport { baseURL } from \"../constants\";\nexport var UPLOAD_REQUEST = \"UPLOAD_REQUEST\";\nexport var UPLOAD_SUCCESS = \"UPLOAD_SUCCESS\";\nexport var UPLOAD_FAILURE = \"UPLOAD_FAILURE\";\nexport var uploadRequest = function uploadRequest() {\n  return {\n    type: UPLOAD_REQUEST\n  };\n};\nexport var uploadSuccess = function uploadSuccess(signupData) {\n  return {\n    type: UPLOAD_SUCCESS,\n    payload: signupData\n  };\n};\nexport var uploadFailure = function uploadFailure(errMsg) {\n  return {\n    type: UPLOAD_FAILURE,\n    payload: errMsg\n  };\n};\nexport var uploadprofilephoto = function uploadprofilephoto(Data) {\n  return function (dispatch) {\n    dispatch(uploadRequest());\n    axios({\n      method: \"post\",\n      url: \"/uploadprofilephoto\",\n      baseURL: baseURL,\n      data: {\n        id: Data.id,\n        url: Data.url\n      }\n    }).then(function (res) {\n      var message = res.data.message;\n\n      if (message === \"POST UPLOADED\") {\n        dispatch(uploadSuccess(Data));\n      } else {\n        dispatch(uploadFailure(message));\n      }\n    }).catch(function (err) {\n      console.log(\"postsActions.js, upload Request Error: \", err.message);\n      dispatch(uploadFailure(\"Fail to Upload\"));\n    });\n  };\n};\nexport var uploadpost = function uploadpost(Data) {\n  return function (dispatch) {\n    dispatch(uploadRequest());\n    axios({\n      method: \"post\",\n      url: \"/uploadpost\",\n      baseURL: baseURL,\n      data: {\n        id: Data.id,\n        urlpost: Data.urlpost,\n        description: Data.description,\n        date: Data.date\n      }\n    }).then(function (res) {\n      var message = res.data.message;\n\n      if (message === \"POST UPLOADED\") {\n        dispatch(uploadSuccess(Data));\n      } else {\n        dispatch(uploadFailure(message));\n      }\n    }).catch(function (err) {\n      console.log(\"postsActions.js, upload Request Error: \", err.message);\n      dispatch(uploadFailure(\"Fail to Upload\"));\n    });\n  };\n};","map":{"version":3,"sources":["/home/sanata/Desktop/InpGram/InstaClone/src/client/actions/postsActions.js"],"names":["axios","baseURL","UPLOAD_REQUEST","UPLOAD_SUCCESS","UPLOAD_FAILURE","uploadRequest","type","uploadSuccess","signupData","payload","uploadFailure","errMsg","uploadprofilephoto","Data","dispatch","method","url","data","id","then","res","message","catch","err","console","log","uploadpost","urlpost","description","date"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { baseURL } from \"../constants\";\n\n// action types\nexport const UPLOAD_REQUEST = \"UPLOAD_REQUEST\";\nexport const UPLOAD_SUCCESS = \"UPLOAD_SUCCESS\";\nexport const UPLOAD_FAILURE = \"UPLOAD_FAILURE\";\n\n// action creators\nexport const uploadRequest = () => {\n  return {\n    type: UPLOAD_REQUEST,\n  };\n};\nexport const uploadSuccess = (signupData) => {\n  return {\n    type: UPLOAD_SUCCESS,\n    payload: signupData,\n  };\n};\nexport const uploadFailure = (errMsg) => {\n  return {\n    type: UPLOAD_FAILURE,\n    payload: errMsg,\n  };\n};\n\n// async impure action creator enabled by redux-thunk\nexport const uploadprofilephoto = (Data) => {\n  return (dispatch) => {\n    dispatch(uploadRequest());\n    //const signupUri = 'http://localhost:3000/register';\n    axios({\n      method: \"post\",\n      url: \"/uploadprofilephoto\",\n      baseURL: baseURL,\n      data: {\n        id: Data.id,\n        url: Data.url,\n      },\n    })\n      .then((res) => {\n        const message = res.data.message;\n        if (message === \"POST UPLOADED\") {\n          dispatch(uploadSuccess(Data));\n        } else {\n          dispatch(uploadFailure(message));\n        }\n      })\n      .catch((err) => {\n        console.log(\"postsActions.js, upload Request Error: \", err.message);\n        dispatch(uploadFailure(\"Fail to Upload\"));\n      });\n  };\n};\nexport const uploadpost = (Data) => {\n  return (dispatch) => {\n    dispatch(uploadRequest());\n    //const signupUri = 'http://localhost:3000/register';\n    axios({\n      method: \"post\",\n      url: \"/uploadpost\",\n      baseURL: baseURL,\n      data: {\n        id: Data.id,\n        urlpost: Data.urlpost,\n        description: Data.description,\n        date: Data.date,\n      },\n    })\n      .then((res) => {\n        const message = res.data.message;\n        if (message === \"POST UPLOADED\") {\n          dispatch(uploadSuccess(Data));\n        } else {\n          dispatch(uploadFailure(message));\n        }\n      })\n      .catch((err) => {\n        console.log(\"postsActions.js, upload Request Error: \", err.message);\n        dispatch(uploadFailure(\"Fail to Upload\"));\n      });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}