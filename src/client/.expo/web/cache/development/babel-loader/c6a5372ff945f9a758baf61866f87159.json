{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/home/sanata/Desktop/InpGram/InstaClone/src/client/Screens/Profile/EditPost.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport EditStyle from \"./EditStyle\";\nimport { Item, Input } from 'native-base';\nimport { connect } from 'react-redux';\nvar styles = StyleSheet.create(_objectSpread({}, EditStyle));\nimport axios from 'axios';\nimport { modifypost as _modifypost } from \"../../actions/postsActions\";\nimport { baseURL } from \"../../constants\";\nimport { Icon } from 'native-base';\n\nfunction EditPost(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      Description = _useState2[0],\n      putDescription = _useState2[1];\n\n  var didMountRef = useRef(false);\n  useEffect(function () {\n    putDescription(props.postdata.description);\n\n    if (didMountRef.current) {\n      if (props.isModified) {\n        props.navigation.navigate('Profile');\n      }\n    } else {\n      didMountRef.current = true;\n    }\n  }, [props.isModified]);\n\n  var ModifyPost = function ModifyPost() {\n    var data = {\n      urlpost: props.postdata.urlpost,\n      userid: props.postdata.userid,\n      postid: props.postdata.Id,\n      description: Description\n    };\n    props.modifypost(data);\n  };\n\n  var DeletePost = function DeletePost() {\n    axios({\n      method: \"post\",\n      url: \"/DeletePost\",\n      baseURL: baseURL,\n      data: {\n        userid: props.postdata.userid,\n        postid: props.postdata.Id\n      }\n    }).then(function (res) {\n      var message = res.data.message;\n\n      if (res.data.value) {\n        console.log(message);\n        props.navigation.navigate('Profile');\n      }\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.headerContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.userRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    style: styles.userImage,\n    source: {\n      uri: props.postdata.urlpost\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  }), React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  }, React.createElement(View, {\n    style: styles.item1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 28\n    }\n  }, \"Description\")), React.createElement(View, {\n    regular: true,\n    style: styles.item2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  }, React.createElement(TextInput, {\n    style: styles.TextBioInput,\n    onChangeText: function onChangeText(text) {\n      return putDescription(text);\n    },\n    value: Description,\n    autoCapitalize: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 25\n    }\n  }))), React.createElement(Button, {\n    title: \"Modify Post\",\n    onPress: ModifyPost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  }), React.createElement(Button, {\n    title: \"Delete Post\",\n    onPress: DeletePost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  })));\n}\n\nvar mapStatetoProps = function mapStatetoProps(state) {\n  return {\n    isModified: state.postsReducer.isModified,\n    postdata: state.postsReducer.postdata\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    modifypost: function modifypost(data) {\n      return dispatch(_modifypost(data));\n    }\n  };\n};\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(EditPost);","map":{"version":3,"sources":["/home/sanata/Desktop/InpGram/InstaClone/src/client/Screens/Profile/EditPost.js"],"names":["React","useState","useRef","useEffect","AsyncStorage","EditStyle","Item","Input","connect","styles","StyleSheet","create","axios","modifypost","baseURL","Icon","EditPost","props","Description","putDescription","didMountRef","postdata","description","current","isModified","navigation","navigate","ModifyPost","data","urlpost","userid","postid","Id","DeletePost","method","url","then","res","message","value","console","log","catch","err","headerContainer","userRow","userImage","uri","container","item1","item2","TextBioInput","text","mapStatetoProps","state","postsReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["\n\n\nimport React, { useState, useRef, useEffect } from \"react\";\n\nimport {View, Text,Image, Button,TextInput, StyleSheet,Alert,AsyncStorage} from 'react-native';\n//import { launchImageLibrary} from 'react-native-image-picker';\n//import {AsyncStorage} from \"@react-native-async-storage/async-storage\"\n//import {AsyncStorage} from \"@react-native-community/async-storage\"\n//var ImagePicker = require('react-native-image-picker');\nimport EditStyle from './EditStyle'\n//mport { Item } from 'react-native-paper/lib/typescript/src/components/List/List';\nimport {Item,Input} from 'native-base'\nimport { connect } from 'react-redux';\n//export const ImageProfil = require('./imagea.jpeg'); \nconst styles = StyleSheet.create({ ...EditStyle})\nimport axios from'axios'\nimport {modifypost} from '../../actions/postsActions';\nimport { baseURL } from \"../../constants\";\n\nimport {Icon } from 'native-base'\n\n\n\nfunction EditPost(props) {\n\n  const [Description, putDescription] = useState(\"\");\n\n  /*static navigationOptions = {\n\n    tabBarIcon: ({ tintColor }) => (\n      <Icon name=\"ios-pencil\" style={{ color: tintColor }} />\n    )\n  }*/\n\n  const didMountRef = useRef(false);\n  // useEffect()to check if states have changed\n  // 2nd argument is the list of states you want to watch for\n  useEffect(() => {\n    putDescription(props.postdata.description);\n    if (didMountRef.current) {\n      // if login success, go to home screen\n      if (props.isModified) {\n        props.navigation.navigate('Profile');\n      } \n    } else {\n      didMountRef.current = true;\n    }\n   },[props.isModified]);\n    \n \n const ModifyPost = () => {\n  const data = {\n    urlpost:props.postdata.urlpost,\n    userid: props.postdata.userid,\n    postid: props.postdata.Id,\n    description: Description,\n  };\n\n  // calling login() dispatch function\n  props.modifypost(data);\n};\n\nconst DeletePost = () => {\n\n  axios({\n    method: \"post\",\n    url: \"/DeletePost\",\n    baseURL: baseURL,\n    data: {\n      userid: props.postdata.userid,\n    postid: props.postdata.Id,\n    },\n  })\n    .then((res) => {\n      //console.log(res)\n      const message = res.data.message;\n      \n      if (res.data.value) {\n        console.log(message);\n        props.navigation.navigate('Profile');\n      }\n    })\n    .catch((err) => console.log(err));\n};\n  \n\n   \n\n      return (\n\n      <View style={styles.headerContainer}>\n        \n       \n        <View style={styles.userRow}>\n              <Image\n                style={styles.userImage}\n                source={{uri:props.postdata.urlpost}}\n              />\n\n              <View style={styles.container}>\n              \n                   \n                    <View style={styles.item1}>\n                           <Text >Description</Text>\n                           \n                    </View>  \n                    <View regular style={styles.item2}>\n                        <TextInput style={styles.TextBioInput}                         \n                         onChangeText={(text) => putDescription(text)}\n                         value={Description}  \n                            autoCapitalize='none' />\n                    </View>\n                    \n                     \n                       \n                    \n                    \n              </View>\n             \n              <Button  title=\"Modify Post\" onPress={ModifyPost} />    \n              <Button  title=\"Delete Post\" onPress={DeletePost} />    \n              </View> \n\n              \n      </View>\n          \n\n\n      )\n    \n\n}\nconst mapStatetoProps=(state)=>{\n  return{\n    isModified: state.postsReducer.isModified,\n    postdata: state.postsReducer.postdata,\n   \n  }\n }\n \n\n const mapDispatchToProps = dispatch => {\n  return {\n    // only map needed dispatches here\n    modifypost: data => dispatch(modifypost(data)),\n  }\n}\n\n\n\n \nexport default connect(mapStatetoProps, mapDispatchToProps)(EditPost);"]},"metadata":{},"sourceType":"module"}