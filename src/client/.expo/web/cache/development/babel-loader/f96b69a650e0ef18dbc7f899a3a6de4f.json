{"ast":null,"code":"import axios from 'axios';\n\nvar jwt = require('jsonwebtoken');\n\nexport var LOGIN_REQUEST = 'LOGIN_REQUEST';\nexport var LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport var LOGIN_FAILURE = 'LOGIN_FAILURE';\nexport var SET_AUTH_TOKEN = 'SET_AUTH_TOKEN';\nexport var SET_CURRENT_USER = 'SET_CURRENT_USER';\nexport var LOGOUT_USER = 'LOGOUT_USER';\nexport var loginRequest = function loginRequest() {\n  return {\n    type: LOGIN_REQUEST\n  };\n};\nexport var loginSuccess = function loginSuccess(loginData) {\n  return {\n    type: LOGIN_SUCCESS,\n    payload: loginData\n  };\n};\nexport var loginFailure = function loginFailure(errMsg) {\n  return {\n    type: LOGIN_FAILURE,\n    payload: errMsg\n  };\n};\nexport var setAuthToken = function setAuthToken(authToken) {\n  return {\n    type: SET_AUTH_TOKEN,\n    payload: authToken\n  };\n};\nexport var setCurrentUser = function setCurrentUser(userId) {\n  return {\n    type: SET_CURRENT_USER,\n    payload: userId\n  };\n};\nexport var logout = function logout() {\n  return function (dispatch) {\n    localStorage.removeItem('jwtToken');\n    delete axios.defaults.headers.common['Authorization'];\n    dispatch(setCurrentUser({}));\n    dispatch({\n      type: LOGOUT_USER\n    });\n    window.location.href = \"/\";\n  };\n};\nexport var login = function login(loginData) {\n  return function (dispatch) {\n    dispatch(loginRequest());\n    axios({\n      method: 'post',\n      url: '/login',\n      baseURL: 'http://localhost:3000',\n      data: {\n        email: loginData.email,\n        password: loginData.password\n      }\n    }).then(function (res) {\n      console.log(\"loginAction.js, Status: \", res.status);\n      console.log(res.data);\n      var message = res.data.message;\n\n      if (message === 'User Found') {\n        swal({\n          title: res.data,\n          icon: \"warning\"\n        });\n        dispatch(loginSuccess(loginData));\n        dispatch(setCurrentUser(res.data.id));\n        dispatch(setAuthToken(res.data.token));\n      } else {\n        console.log(message);\n        dispatch(loginFailure(message));\n      }\n    }).catch(function (err) {\n      dispatch(loginFailure(\"User Not Found!\"));\n      console.log(\"loginAction.js, Request Error: \", err.message);\n    });\n  };\n};","map":{"version":3,"sources":["/home/sanata/Desktop/InpGram/InstaClone/src/actions/loginActions.js"],"names":["axios","jwt","require","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","SET_AUTH_TOKEN","SET_CURRENT_USER","LOGOUT_USER","loginRequest","type","loginSuccess","loginData","payload","loginFailure","errMsg","setAuthToken","authToken","setCurrentUser","userId","logout","dispatch","localStorage","removeItem","defaults","headers","common","window","location","href","login","method","url","baseURL","data","email","password","then","res","console","log","status","message","swal","title","icon","id","token","catch","err"],"mappings":"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","sourcesContent":["import axios from 'axios';\n//import store from '../../../Store';\nconst jwt = require('jsonwebtoken');\n// action types\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\nexport const SET_AUTH_TOKEN = 'SET_AUTH_TOKEN';\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\nexport const LOGOUT_USER ='LOGOUT_USER';\n\n// action creators\nexport const loginRequest = () => {\n  return {\n    type: LOGIN_REQUEST,\n  }\n}\nexport const loginSuccess = loginData => {\n  return {\n    type: LOGIN_SUCCESS,\n    payload: loginData,\n  }\n}\n\nexport const loginFailure = errMsg => {\n  return {\n    type: LOGIN_FAILURE,\n    payload: errMsg,\n  }\n}\n\n// save the auth token to redux store\nexport const setAuthToken = authToken => {\n  return {\n    type: SET_AUTH_TOKEN,\n    payload: authToken,\n  }\n}\nexport const setCurrentUser =(userId)=>{\n\n  return{\n      type:SET_CURRENT_USER,\n      payload:userId\n  }\n\n}\n\nexport const logout=()=>{\n\n  return function(dispatch){\n       localStorage.removeItem('jwtToken');\n      // setAuthenticationToken(false);\n      delete axios.defaults.headers.common['Authorization'];\n       dispatch(setCurrentUser({}))\n\n       dispatch({\n           type:LOGOUT_USER\n          })\n     window.location.href=\"/\";\n  }\n}\n\n\n// async impure action creator enabled by redux-thunk\nexport const login = loginData => {\n  return dispatch => {\n    dispatch(loginRequest());\n    //const loginUri = 'http://localhost:3000/login';\n    axios({\n        method: 'post',\n        url: '/login',\n        baseURL: 'http://localhost:3000',\n        data: { \n          email: loginData.email,\n          password:loginData.password,        \n          }\n      })\n    \n      .then(res => {\n        console.log(\"loginAction.js, Status: \", res.status);\n        console.log(res.data);\n        const message=res.data.message;\n        if(message==='User Found'){\n          swal({\n            title: res.data,\n            //text: ,\n            icon: \"warning\",\n          });\n          /*var token =res.data.token;\n          localStorage.setItem(\"jwtToken\",token);\n          if(token){\n            axios.defaults.headers.common['Authorization']=`Bearer ${token}`;\n          }else{\n              delete axios.defaults.headers.common['Authorization'];\n          }*/\n        //setAuthenticationToken(token);\n       // console.log(jwt.decode(token));\n         \n            dispatch(loginSuccess(loginData));\n            dispatch(setCurrentUser(res.data.id));\n             //save the auth token\n            // const authToken = res.headers['auth-token'];\n             dispatch(setAuthToken(res.data.token));\n          }\n          else{\n            console.log(message);\n            dispatch(loginFailure (message));\n  \n  \n          }\n          \n        })\n        \n      .catch(err => {\n        dispatch(loginFailure(\"User Not Found!\"));\n        console.log(\"loginAction.js, Request Error: \", err.message);\n      });\n  }\n}"]},"metadata":{},"sourceType":"module"}