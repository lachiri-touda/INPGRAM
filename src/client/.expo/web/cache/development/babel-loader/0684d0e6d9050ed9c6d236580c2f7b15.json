{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/home/sanata/Desktop/InpGram/InstaClone/src/Screens/LogIn/LogIn.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\n\nvar axios = require(\"axios\");\n\nimport { connect } from \"react-redux\";\nimport AuthStyle from \"./AuthStyle\";\nvar styles = StyleSheet.create(_objectSpread({}, AuthStyle));\nimport { isLogedIn } from \"../../actions/AuthActions\";\nimport { login as _login } from \"../../actions/loginActions\";\n\nfunction LogIn(props) {\n  var isLogedIn, _useState, _useState2, email, putEmail, _useState3, _useState4, password, putPassword, didMountRef, loginHandler;\n\n  return _regeneratorRuntime.async(function LogIn$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(isLogedIn());\n\n        case 2:\n          isLogedIn = _context2.sent;\n\n          if (isLogedIn) {\n            props.navigation.navigate(\"Profile\");\n          }\n\n          _useState = useState(\"\"), _useState2 = _slicedToArray(_useState, 2), email = _useState2[0], putEmail = _useState2[1];\n          _useState3 = useState(\"\"), _useState4 = _slicedToArray(_useState3, 2), password = _useState4[0], putPassword = _useState4[1];\n          didMountRef = useRef(false);\n          useEffect(function _callee() {\n            return _regeneratorRuntime.async(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    console.log(\"loginScreen.js, props.isAuth: \", props.isAuth);\n                    console.log(\"loginScreen.js, props.isLoading: \", props.isLoading);\n\n                    if (didMountRef.current) {\n                      if (props.isAuth) {\n                        props.navigation.navigate(\"Home\");\n                      } else if (!props.isAuth && !props.isLoading) {\n                        Alert.alert(props.errMsg);\n                      }\n                    } else {\n                      didMountRef.current = true;\n                    }\n\n                  case 3:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          }, [props.isAuth, props.isLoading]);\n\n          loginHandler = function loginHandler() {\n            var loginData = {\n              email: email,\n              password: password\n            };\n            props.login(loginData);\n          };\n\n          return _context2.abrupt(\"return\", React.createElement(View, {\n            style: styles.container,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 5\n            }\n          }, React.createElement(Text, {\n            style: styles.title,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 7\n            }\n          }, \"INPGRAM \"), React.createElement(Text, {\n            style: styles.titleText,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 7\n            }\n          }, \"Login\"), React.createElement(TextInput, {\n            style: styles.TextInput,\n            placeholder: \"Email\",\n            id: \"email\",\n            onChangeText: function onChangeText(text) {\n              return putEmail(text);\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 7\n            }\n          }), React.createElement(TextInput, {\n            style: styles.TextInput,\n            id: \"password\",\n            placeholder: \"Password\",\n            secureTextEntry: true,\n            onChangeText: function onChangeText(text) {\n              return putPassword(text);\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 7\n            }\n          }), React.createElement(Button, {\n            onPress: loginHandler,\n            title: \"Log In\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 7\n            }\n          }), React.createElement(Button, {\n            onPress: function onPress() {\n              return props.navigation.navigate(\"Register\");\n            },\n            title: \"Sign Up\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 7\n            }\n          }), React.createElement(Button, {\n            onPress: function onPress() {\n              return props.navigation.navigate(\"Home\");\n            },\n            title: \"Passage\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 7\n            }\n          })));\n\n        case 10:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, this, null, Promise);\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isLoading: state.loginReducer.isLoading,\n    isAuth: state.loginReducer.isAuth,\n    errMsg: state.loginReducer.errMsg\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    login: function login(loginData) {\n      return dispatch(_login(loginData));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LogIn);","map":{"version":3,"sources":["/home/sanata/Desktop/InpGram/InstaClone/src/Screens/LogIn/LogIn.js"],"names":["React","useState","useRef","useEffect","axios","require","connect","AuthStyle","styles","StyleSheet","create","isLogedIn","login","LogIn","props","navigation","navigate","email","putEmail","password","putPassword","didMountRef","console","log","isAuth","isLoading","current","Alert","alert","errMsg","loginHandler","loginData","container","title","titleText","TextInput","text","mapStateToProps","state","loginReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport { View, Button, TextInput, Text, Alert, StyleSheet } from \"react-native\";\nconst axios = require(\"axios\");\nimport { connect } from \"react-redux\";\nimport AuthStyle from \"./AuthStyle\";\nconst styles = StyleSheet.create({ ...AuthStyle });\nimport { isLogedIn } from \"../../actions/AuthActions\";\nimport { login } from \"../../actions/loginActions\";\n\nasync function LogIn(props) {\n  const isLogedIn = await isLogedIn();\n  if (isLogedIn) {\n    props.navigation.navigate(\"Profile\");\n  }\n\n  const [email, putEmail] = useState(\"\");\n  const [password, putPassword] = useState(\"\");\n\n  // useRef hook to check whether the component has just mounted or updated\n  // Link: https://dev.to/savagepixie/how-to-mimic-componentdidupdate-with-react-hooks-3j8c\n  const didMountRef = useRef(false);\n  // useEffect()to check if states have changed\n  // 2nd argument is the list of states you want to watch for\n  useEffect(async () => {\n    /* const isLogedIn = await isLogedIn();\n    if(isLogedIn){\n      props.navigation.navigate(\"Profile\");\n    }*/\n    console.log(\"loginScreen.js, props.isAuth: \", props.isAuth);\n    console.log(\"loginScreen.js, props.isLoading: \", props.isLoading);\n    if (didMountRef.current) {\n      // if login success, go to home screen\n      if (props.isAuth) {\n        props.navigation.navigate(\"Home\");\n      } else if (!props.isAuth && !props.isLoading) {\n        Alert.alert(props.errMsg);\n      }\n    } else {\n      didMountRef.current = true;\n    }\n  }, [props.isAuth, props.isLoading]);\n\n  // this function make sure props.login() only be called once\n  const loginHandler = () => {\n    const loginData = {\n      email: email,\n      password: password,\n    };\n    // calling login() dispatch function\n    props.login(loginData);\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>INPGRAM </Text>\n      <Text style={styles.titleText}>Login</Text>\n      <TextInput\n        style={styles.TextInput}\n        placeholder=\"Email\"\n        id=\"email\"\n        onChangeText={(text) => putEmail(text)}\n      />\n      <TextInput\n        style={styles.TextInput}\n        id=\"password\"\n        placeholder=\"Password\"\n        secureTextEntry={true}\n        onChangeText={(text) => putPassword(text)}\n      />\n\n      <Button onPress={loginHandler} title=\"Log In\" />\n      <Button\n        onPress={() => props.navigation.navigate(\"Register\")}\n        title=\"Sign Up\"\n      />\n      <Button\n        onPress={() => props.navigation.navigate(\"Home\")}\n        title=\"Passage\"\n      />\n    </View>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    // only map needed states here\n    isLoading: state.loginReducer.isLoading,\n    isAuth: state.loginReducer.isAuth,\n    errMsg: state.loginReducer.errMsg,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    // only map needed dispatches here\n    login: (loginData) => dispatch(login(loginData)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LogIn);\n"]},"metadata":{},"sourceType":"module"}