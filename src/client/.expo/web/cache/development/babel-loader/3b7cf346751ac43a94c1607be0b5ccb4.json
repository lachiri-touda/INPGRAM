{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAILURE, SET_AUTH_TOKEN, SET_CURRENT_USER, LOGOUT_USER } from \"../actions/loginActions\";\nvar initState = {\n  isLoading: false,\n  isAuth: false,\n  loginData: {},\n  errMsg: \"\",\n  authToken: \"\",\n  userDetails: \"\"\n};\n\nvar loginReducer = function loginReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOGIN_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoading: true\n      });\n\n    case LOGIN_SUCCESS:\n      return {\n        isAuth: true,\n        isLoading: false,\n        loginData: action.payload,\n        errMsg: \"\"\n      };\n\n    case LOGIN_FAILURE:\n      return {\n        isLoading: false,\n        isAuth: false,\n        loginData: {},\n        errMsg: action.payload\n      };\n\n    case SET_AUTH_TOKEN:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        authToken: action.payload\n      });\n\n    case SET_CURRENT_USER:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        userDetails: action.payload,\n        isAuth: true\n      });\n\n    case LOGOUT_USER:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isAuth: false\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default loginReducer;","map":{"version":3,"sources":["/home/amine/Bureau/InstaTouda/InstaClone/src/reducers/loginReducer.js"],"names":["LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","SET_AUTH_TOKEN","SET_CURRENT_USER","LOGOUT_USER","initState","isLoading","isAuth","loginData","errMsg","authToken","userDetails","loginReducer","state","action","type","payload"],"mappings":";;;;;;AACA,SACIA,aADJ,EAEIC,aAFJ,EAGIC,aAHJ,EAIIC,cAJJ,EAKIC,gBALJ,EAMIC,WANJ;AAWE,IAAMC,SAAS,GAAG;AAChBC,EAAAA,SAAS,EAAE,KADK;AAEhBC,EAAAA,MAAM,EAAE,KAFQ;AAGhBC,EAAAA,SAAS,EAAE,EAHK;AAIhBC,EAAAA,MAAM,EAAE,EAJQ;AAKhBC,EAAAA,SAAS,EAAE,EALK;AAMhBC,EAAAA,WAAW,EAAC;AANI,CAAlB;;AASA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAA+B;AAAA,MAA9BC,KAA8B,uEAAtBR,SAAsB;AAAA,MAAXS,MAAW;;AAClD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKhB,aAAL;AACE,6CACKc,KADL;AAEEP,QAAAA,SAAS,EAAE;AAFb;;AAIF,SAAKN,aAAL;AACE,aAAO;AACLO,QAAAA,MAAM,EAAE,IADH;AAELD,QAAAA,SAAS,EAAE,KAFN;AAGLE,QAAAA,SAAS,EAAEM,MAAM,CAACE,OAHb;AAILP,QAAAA,MAAM,EAAE;AAJH,OAAP;;AAMF,SAAKR,aAAL;AACE,aAAO;AACLK,QAAAA,SAAS,EAAE,KADN;AAELC,QAAAA,MAAM,EAAE,KAFH;AAGLC,QAAAA,SAAS,EAAE,EAHN;AAILC,QAAAA,MAAM,EAAEK,MAAM,CAACE;AAJV,OAAP;;AAMF,SAAKd,cAAL;AACE,6CACKW,KADL;AAEEH,QAAAA,SAAS,EAAEI,MAAM,CAACE;AAFpB;;AAIA,SAAKb,gBAAL;AACE,6CACGU,KADH;AAEAF,QAAAA,WAAW,EAACG,MAAM,CAACE,OAFnB;AAGAT,QAAAA,MAAM,EAAC;AAHP;;AAKJ,SAAKH,WAAL;AAAiB,6CACZS,KADY;AAEfN,QAAAA,MAAM,EAAC;AAFQ;;AAIjB;AACE,aAAOM,KAAP;AApCJ;AAsCD,CAvCD;;AAyCA,eAAeD,YAAf","sourcesContent":["// import {Alert} from 'react-native';\nimport {\n    LOGIN_REQUEST,\n    LOGIN_SUCCESS,\n    LOGIN_FAILURE,\n    SET_AUTH_TOKEN,\n    SET_CURRENT_USER,\n    LOGOUT_USER\n\n  } from '../actions/loginActions';\n  \n  // init state for login\n  const initState = {\n    isLoading: false,\n    isAuth: false,\n    loginData: {},\n    errMsg: \"\",\n    authToken: \"\",\n    userDetails:\"\"\n  }\n  \n  const loginReducer = (state = initState, action) => {\n    switch (action.type) {\n      case LOGIN_REQUEST:\n        return {\n          ...state,\n          isLoading: true,\n        }\n      case LOGIN_SUCCESS:\n        return {\n          isAuth: true,\n          isLoading: false,\n          loginData: action.payload,\n          errMsg: \"\",\n        }\n      case LOGIN_FAILURE:\n        return {\n          isLoading: false,\n          isAuth: false,\n          loginData: {},\n          errMsg: action.payload,\n        }\n      case SET_AUTH_TOKEN:\n        return {\n          ...state,\n          authToken: action.payload,\n        }\n        case SET_CURRENT_USER:\n          return{\n          ...state,\n          userDetails:action.payload,\n          isAuth:true\n      }\n      case LOGOUT_USER:return{\n        ...state,\n        isAuth:false\n    }\n      default:\n        return state;\n    }\n  }\n  \n  export default loginReducer;"]},"metadata":{},"sourceType":"module"}