{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport { combineReducers, createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport AsyncStorage from '@react-native-community/async-storage';\nimport loginReducer from \"./src/reducers/loginReducer\";\nimport signupReducer from \"./src/reducers/signupReducer\";\nvar rootReducer = combineReducers({\n  loginReducer: loginReducer,\n  signupReducer: signupReducer\n});\nvar persistConfig = {\n  key: 'root',\n  storage: AsyncStorage,\n  whitelist: ['loginReducer', 'signupReducer'],\n  blacklist: []\n};\nAsyncStorage.getAllKeys(function (err, keys) {\n  AsyncStorage.multiGet(keys, function (error, stores) {\n    stores.map(function (result, i, store) {\n      console.log(_defineProperty({}, store[i][0], store[i][1]));\n      return true;\n    });\n  });\n});\nvar persistedReducer = persistReducer(persistConfig, rootReducer);\nexport var store = createStore(persistedReducer, {}, applyMiddleware(thunk));\nexport var persistor = persistStore(store);","map":{"version":3,"sources":["/home/amine/Bureau/InstaTouda/InstaClone/store.js"],"names":["combineReducers","createStore","applyMiddleware","thunk","persistStore","persistReducer","AsyncStorage","loginReducer","signupReducer","rootReducer","persistConfig","key","storage","whitelist","blacklist","getAllKeys","err","keys","multiGet","error","stores","map","result","i","store","console","log","persistedReducer","persistor"],"mappings":";AAAA,SAASA,eAAT,EAA0BC,WAA1B,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AAGA,OAAOC,YAAP;AACA,OAAOC,aAAP;AAGA,IAAMC,WAAW,GAAGT,eAAe,CAAC;AAElCO,EAAAA,YAAY,EAAEA,YAFoB;AAGlCC,EAAAA,aAAa,EAAEA;AAHmB,CAAD,CAAnC;AAOA,IAAME,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAGpBC,EAAAA,OAAO,EAAEN,YAHW;AAKpBO,EAAAA,SAAS,EAAE,CACT,cADS,EAET,eAFS,CALS;AAUpBC,EAAAA,SAAS,EAAE;AAVS,CAAtB;AAgBAR,YAAY,CAACS,UAAb,CAAwB,UAACC,GAAD,EAAMC,IAAN,EAAe;AACrCX,EAAAA,YAAY,CAACY,QAAb,CAAsBD,IAAtB,EAA4B,UAACE,KAAD,EAAQC,MAAR,EAAmB;AAC7CA,IAAAA,MAAM,CAACC,GAAP,CAAW,UAACC,MAAD,EAASC,CAAT,EAAYC,KAAZ,EAAsB;AAC/BC,MAAAA,OAAO,CAACC,GAAR,qBAAeF,KAAK,CAACD,CAAD,CAAL,CAAS,CAAT,CAAf,EAA6BC,KAAK,CAACD,CAAD,CAAL,CAAS,CAAT,CAA7B;AACA,aAAO,IAAP;AACD,KAHD;AAID,GALD;AAMD,CAPD;AASA,IAAMI,gBAAgB,GAAGtB,cAAc,CAACK,aAAD,EAAgBD,WAAhB,CAAvC;AAEA,OAAO,IAAMe,KAAK,GAAGvB,WAAW,CAAC0B,gBAAD,EAAmB,EAAnB,EAAuBzB,eAAe,CAACC,KAAD,CAAtC,CAAzB;AACP,OAAO,IAAMyB,SAAS,GAAGxB,YAAY,CAACoB,KAAD,CAA9B","sourcesContent":["import { combineReducers, createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport AsyncStorage from '@react-native-community/async-storage';\n//import {AsyncStorage} from 'react-native'\n\nimport loginReducer from './src/reducers/loginReducer';\nimport signupReducer from './src/reducers/signupReducer';\n\n// rootRecuder is now being put in this file (Store.js) \nconst rootReducer = combineReducers({\n\n  loginReducer: loginReducer,\n  signupReducer: signupReducer,\n\n});\n\nconst persistConfig = {\n  key: 'root',\n  // storage method\n  storage: AsyncStorage,\n  // things you want to persist\n  whitelist: [\n    'loginReducer',\n    'signupReducer',\n  ],\n  // things you don't want to persist\n  blacklist: [\n    //'signupReducer',\n  ],\n}\n\n// print the store without import redux store\nAsyncStorage.getAllKeys((err, keys) => {\n  AsyncStorage.multiGet(keys, (error, stores) => {\n    stores.map((result, i, store) => {\n      console.log({ [store[i][0]]: store[i][1] });\n      return true;\n    });\n  });\n});\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = createStore(persistedReducer, {}, applyMiddleware(thunk));\nexport const persistor = persistStore(store);\n"]},"metadata":{},"sourceType":"module"}