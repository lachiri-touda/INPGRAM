{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/Users/mac/I/InstaClone/src/client/Screens/LogIn/Register.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { connect } from \"react-redux\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { COLORS, SIZES, FONTS } from \"../../constants\";\n\nvar axios = require(\"axios\");\n\nimport AuthStyle from \"./style/AuthStyle\";\nvar styles = StyleSheet.create(_objectSpread({}, AuthStyle));\nimport { signup as _signup } from \"../../actions/signupActions\";\nimport { isLogedIn } from \"../../actions/AuthActions\";\n\nfunction Register(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      name = _useState6[0],\n      setName = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      email = _useState8[0],\n      setEmail = _useState8[1];\n\n  var didMountRef = useRef(false);\n  useEffect(function () {\n    if (didMountRef.current) {\n      if (props.isAuth) {\n        props.navigation.navigate(\"LogIn\");\n        Alert.alert(\"User is saved\");\n      } else if (!props.isAuth && !props.isLoading) {\n        Alert.alert(props.errMsg);\n      }\n    } else {\n      didMountRef.current = true;\n    }\n  }, [props.isAuth, props.isLoading]);\n\n  var signupHandler = function signupHandler() {\n    var signupData = {\n      email: email,\n      name: name,\n      username: username,\n      password: password\n    };\n    props.signup(signupData);\n  };\n\n  function renderButton(text, onPress) {\n    return React.createElement(View, {\n      style: {\n        margin: SIZES.padding * 0.5,\n        alignItems: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, React.createElement(TouchableOpacity, {\n      style: {\n        height: 60,\n        width: 250,\n        backgroundColor: COLORS.black,\n        borderRadius: SIZES.radius / 0.2,\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      onPress: onPress,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: _objectSpread({\n        color: COLORS.white\n      }, FONTS.h3),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }, text)));\n  }\n\n  return React.createElement(KeyboardAvoidingView, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, React.createElement(LinearGradient, {\n    colors: [COLORS.primary, COLORS.primary],\n    style: {\n      flex: 1,\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: _objectSpread({\n      marginTop: 20,\n      marginBottom: 35,\n      marginTop: 35,\n      textAlign: \"center\",\n      color: \"#bc6c25\"\n    }, FONTS.h1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, \"INPgram\"), React.createElement(Text, {\n    style: styles.titleText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, \"Sign Up \"), React.createElement(View, {\n    style: {\n      marginBottom: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, React.createElement(TextInput, {\n    style: styles.TextInput,\n    placeholder: \"email\",\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    value: email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    style: styles.TextInput,\n    placeholder: \"username\",\n    onChangeText: function onChangeText(text) {\n      return setUsername(text);\n    },\n    value: username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    style: styles.TextInput,\n    placeholder: \"name\",\n    onChangeText: function onChangeText(text) {\n      return setName(text);\n    },\n    value: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    style: styles.TextInput,\n    placeholder: \"password\",\n    secureTextEntry: true,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    value: password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  })), renderButton(\"LogIn\", function () {\n    return props.navigation.navigate(\"LogIn\");\n  }), renderButton(\"SignUp\", signupHandler))));\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isLoading: state.signupReducer.isLoading,\n    isAuth: state.signupReducer.isAuth,\n    errMsg: state.signupReducer.errMsg\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    signup: function signup(signupData) {\n      return dispatch(_signup(signupData));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);","map":{"version":3,"sources":["/Users/mac/I/InstaClone/src/client/Screens/LogIn/Register.js"],"names":["React","useState","useRef","useEffect","connect","LinearGradient","COLORS","SIZES","FONTS","axios","require","AuthStyle","styles","StyleSheet","create","signup","isLogedIn","Register","props","username","setUsername","password","setPassword","name","setName","email","setEmail","didMountRef","current","isAuth","navigation","navigate","Alert","alert","isLoading","errMsg","signupHandler","signupData","renderButton","text","onPress","margin","padding","alignItems","height","width","backgroundColor","black","borderRadius","radius","justifyContent","color","white","h3","flex","primary","marginTop","marginBottom","textAlign","h1","titleText","TextInput","mapStateToProps","state","signupReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport {\n  View,\n  Button,\n  TextInput,\n  Text,\n  Alert,\n  StyleSheet,\n  ScrollView,\n  KeyboardAvoidingView,\n  TouchableOpacity,\n} from \"react-native\";\nimport { connect } from \"react-redux\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { COLORS, SIZES, FONTS } from \"../../constants\";\nconst axios = require(\"axios\");\n\nimport AuthStyle from \"./style/AuthStyle\";\nconst styles = StyleSheet.create({ ...AuthStyle });\n\nimport { signup } from \"../../actions/signupActions\";\n\nimport { isLogedIn } from \"../../actions/AuthActions\";\n\nfunction Register(props) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n\n  // useRef hook to check whether the component has just mounted or updated\n\n  const didMountRef = useRef(false);\n  // useEffect() to check if states have changed\n  // 2nd argument is the list of states you want to watch for\n  useEffect(() => {\n    if (didMountRef.current) {\n      // if signup success, go to login screen\n      if (props.isAuth) {\n        props.navigation.navigate(\"LogIn\");\n        Alert.alert(\"User is saved\");\n      } else if (!props.isAuth && !props.isLoading) {\n        Alert.alert(props.errMsg);\n      }\n    } else {\n      didMountRef.current = true;\n    }\n  }, [props.isAuth, props.isLoading]);\n\n  const signupHandler = () => {\n    const signupData = {\n      email: email,\n      name: name,\n      username: username,\n      password: password,\n    };\n    // calling signup() dispatch\n\n    props.signup(signupData);\n  };\n\n  function renderButton(text, onPress) {\n    return (\n      <View style={{ margin: SIZES.padding * 0.5, alignItems: \"center\" }}>\n        <TouchableOpacity\n          style={{\n            height: 60,\n            width: 250,\n            backgroundColor: COLORS.black,\n            borderRadius: SIZES.radius / 0.2,\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n          onPress={onPress}\n        >\n          <Text style={{ color: COLORS.white, ...FONTS.h3 }}>{text}</Text>\n        </TouchableOpacity>\n      </View>\n    );\n  }\n\n  return (\n    <KeyboardAvoidingView style={{ flex: 1 }}>\n      <LinearGradient\n        colors={[COLORS.primary, COLORS.primary]}\n        style={{ flex: 1, alignItems: \"center\" }}\n      >\n        <ScrollView>\n          <Text\n            style={{\n              marginTop: 20,\n              marginBottom: 35,\n\n              marginTop: 35,\n              textAlign: \"center\",\n              color: \"#bc6c25\",\n              ...FONTS.h1,\n            }}\n          >\n            INPgram\n          </Text>\n          <Text style={styles.titleText}>Sign Up </Text>\n          <View style={{ marginBottom: 20 }}>\n            <TextInput\n              style={styles.TextInput}\n              placeholder=\"email\"\n              onChangeText={(text) => setEmail(text)}\n              value={email}\n            />\n            <TextInput\n              style={styles.TextInput}\n              placeholder=\"username\"\n              onChangeText={(text) => setUsername(text)}\n              value={username}\n            />\n            <TextInput\n              style={styles.TextInput}\n              placeholder=\"name\"\n              onChangeText={(text) => setName(text)}\n              value={name}\n            />\n            <TextInput\n              style={styles.TextInput}\n              placeholder=\"password\"\n              secureTextEntry={true}\n              onChangeText={(text) => setPassword(text)}\n              value={password}\n            />\n          </View>\n\n          {renderButton(\"LogIn\", () => props.navigation.navigate(\"LogIn\"))}\n          {renderButton(\"SignUp\", signupHandler)}\n        </ScrollView>\n      </LinearGradient>\n    </KeyboardAvoidingView>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    // only map needed states here\n    isLoading: state.signupReducer.isLoading,\n    isAuth: state.signupReducer.isAuth,\n    errMsg: state.signupReducer.errMsg,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    // only map needed dispatches here\n    signup: (signupData) => dispatch(signup(signupData)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);\n"]},"metadata":{},"sourceType":"module"}