{"ast":null,"code":"import axios from 'axios';\nexport var SIGNUP_REQUEST = 'SIGNUP_REQUEST';\nexport var SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\nexport var SIGNUP_FAILURE = 'SIGNUP_FAILURE';\nexport var signupRequest = function signupRequest() {\n  return {\n    type: SIGNUP_REQUEST\n  };\n};\nexport var signupSuccess = function signupSuccess(signupData) {\n  return {\n    type: SIGNUP_SUCCESS,\n    payload: signupData\n  };\n};\nexport var signupFailure = function signupFailure(errMsg) {\n  return {\n    type: SIGNUP_FAILURE,\n    payload: errMsg\n  };\n};\nexport var signup = function signup(signupData) {\n  return function (dispatch) {\n    dispatch(signupRequest());\n    axios({\n      method: 'post',\n      url: '/register',\n      baseURL: 'http://localhost:3000',\n      data: {\n        name: signupData.name,\n        username: signupData.username,\n        email: signupData.email,\n        password: signupData.password\n      }\n    }).then(function (res) {\n      var message = res.data.message;\n      console.log(\"Status: \", res.status);\n      console.log(res.data);\n\n      if (message === 'User added') {\n        dispatch(signupSuccess(signupData));\n      } else {\n        console.log(message);\n        dispatch(signupFailure(message));\n      }\n    }).catch(function (err) {\n      console.log(\"signupActions.js, Signup Request Error: \", err.message);\n      dispatch(signupFailure(\"Fail to Sign Up\"));\n    });\n  };\n};","map":{"version":3,"sources":["/home/amine/Bureau/InstaTouda/InstaClone/src/actions/signupActions.js"],"names":["axios","SIGNUP_REQUEST","SIGNUP_SUCCESS","SIGNUP_FAILURE","signupRequest","type","signupSuccess","signupData","payload","signupFailure","errMsg","signup","dispatch","method","url","baseURL","data","name","username","email","password","then","res","message","console","log","status","catch","err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AAGP,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACjC,SAAO;AACLC,IAAAA,IAAI,EAAEJ;AADD,GAAP;AAGD,CAJM;AAKP,OAAO,IAAMK,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,UAAU,EAAI;AACzC,SAAO;AACLF,IAAAA,IAAI,EAAEH,cADD;AAELM,IAAAA,OAAO,EAAED;AAFJ,GAAP;AAID,CALM;AAMP,OAAO,IAAME,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,MAAM,EAAI;AACrC,SAAO;AACLL,IAAAA,IAAI,EAAEF,cADD;AAELK,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID,CALM;AAQP,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACJ,UAAD,EAAe;AAEnC,SAAS,UAAAK,QAAQ,EAAI;AACpBA,IAAAA,QAAQ,CAACR,aAAa,EAAd,CAAR;AAEIJ,IAAAA,KAAK,CAAC;AACDa,MAAAA,MAAM,EAAE,MADP;AAEDC,MAAAA,GAAG,EAAE,WAFJ;AAGDC,MAAAA,OAAO,EAAE,uBAHR;AAIDC,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAACV,UAAU,CAACU,IADZ;AAEJC,QAAAA,QAAQ,EAACX,UAAU,CAACW,QAFhB;AAGJC,QAAAA,KAAK,EAAEZ,UAAU,CAACY,KAHd;AAIJC,QAAAA,QAAQ,EAACb,UAAU,CAACa;AAJhB;AAJL,KAAD,CAAL,CAYAC,IAZA,CAYK,UAAAC,GAAG,EAAI;AACX,UAAMC,OAAO,GAACD,GAAG,CAACN,IAAJ,CAASO,OAAvB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBH,GAAG,CAACI,MAA5B;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACN,IAAhB;;AACA,UAAGO,OAAO,KAAG,YAAb,EAA0B;AACxBX,QAAAA,QAAQ,CAACN,aAAa,CAACC,UAAD,CAAd,CAAR;AACD,OAFD,MAGI;AACFiB,QAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACAX,QAAAA,QAAQ,CAACH,aAAa,CAACc,OAAD,CAAd,CAAR;AAGD;AAEF,KA1BA,EA2BAI,KA3BA,CA2BM,UAAAC,GAAG,EAAI;AACZJ,MAAAA,OAAO,CAACC,GAAR,CAAY,0CAAZ,EAAwDG,GAAG,CAACL,OAA5D;AACAX,MAAAA,QAAQ,CAACH,aAAa,CAAC,iBAAD,CAAd,CAAR;AACD,KA9BA;AA+BJ,GAlCD;AAmCD,CArCM","sourcesContent":["import axios from 'axios';\n\n// action types\nexport const SIGNUP_REQUEST = 'SIGNUP_REQUEST';\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\nexport const SIGNUP_FAILURE = 'SIGNUP_FAILURE';\n\n// action creators\nexport const signupRequest = () => {\n  return {\n    type: SIGNUP_REQUEST,\n  }\n}\nexport const signupSuccess = signupData => {\n  return {\n    type: SIGNUP_SUCCESS,\n    payload: signupData,\n  }\n}\nexport const signupFailure = errMsg => {\n  return {\n    type: SIGNUP_FAILURE,\n    payload: errMsg,\n  }\n}\n\n// async impure action creator enabled by redux-thunk\nexport const signup = (signupData)=> {\n  \n  return   dispatch => {\n   dispatch(signupRequest());\n    //const signupUri = 'http://localhost:3000/register';\n       axios({\n            method: 'post',\n            url: '/register',\n            baseURL: 'http://localhost:3000',\n            data: { \n              name:signupData.name,\n              username:signupData.username,\n              email: signupData.email,\n              password:signupData.password,\n             \n              }\n          })\n      .then(res => {\n        const message=res.data.message;\n        console.log(\"Status: \", res.status);\n        console.log(res.data);\n        if(message==='User added'){\n          dispatch(signupSuccess(signupData));\n        }\n        else{\n          console.log(message);\n          dispatch(signupFailure(message));\n\n\n        }\n        \n      })\n      .catch(err => {\n        console.log(\"signupActions.js, Signup Request Error: \", err.message);\n        dispatch(signupFailure(\"Fail to Sign Up\"));\n      });\n  }\n}"]},"metadata":{},"sourceType":"module"}