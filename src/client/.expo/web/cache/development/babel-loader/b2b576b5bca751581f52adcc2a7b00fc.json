{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nexport var tokenConfig = function tokenConfig() {\n  var token = AsyncStorage.getItem(\"token\");\n  var config = {\n    headers: {\n      \"Content-type\": \"application/json\"\n    }\n  };\n\n  if (token) {\n    config.headers[\"auth-token\"] = token;\n  }\n\n  return config;\n};\nexport var isLogedIn = function isLogedIn() {\n  var token;\n  return _regeneratorRuntime.async(function isLogedIn$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"token\"));\n\n        case 2:\n          token = _context.sent;\n          console.log(token);\n\n          if (!token) {\n            _context.next = 8;\n            break;\n          }\n\n          return _context.abrupt(\"return\", true);\n\n        case 8:\n          return _context.abrupt(\"return\", false);\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["/home/sanata/Desktop/InpGram/InstaClone/src/actions/AuthActions.js"],"names":["AsyncStorage","tokenConfig","token","getItem","config","headers","isLogedIn","console","log"],"mappings":";AAAA,OAAOA,YAAP,MAAyB,uCAAzB;AAGA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAG/B,MAAMC,KAAK,GAAGF,YAAY,CAACG,OAAb,CAAqB,OAArB,CAAd;AAGA,MAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADI,GAAf;;AAOA,MAAIH,KAAJ,EAAW;AACTE,IAAAA,MAAM,CAACC,OAAP,CAAe,YAAf,IAA+BH,KAA/B;AACD;;AAED,SAAOE,MAAP;AACD,CAlBM;AAoBP,OAAO,IAAME,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACHN,YAAY,CAACG,OAAb,CAAqB,OAArB,CADG;;AAAA;AACjBD,UAAAA,KADiB;AAEvBK,UAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;;AAFuB,eAGnBA,KAHmB;AAAA;AAAA;AAAA;;AAAA,2CAId,IAJc;;AAAA;AAAA,2CAKT,KALS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAlB","sourcesContent":["import AsyncStorage from \"@react-native-community/async-storage\";\n\n// Setup config/headers and token\nexport const tokenConfig = () => {\n  // Get token from localstorage\n  //const token = getState().auth.token;\n  const token = AsyncStorage.getItem(\"token\");\n\n  // Headers\n  const config = {\n    headers: {\n      \"Content-type\": \"application/json\",\n    },\n  };\n\n  // If token, add to headers\n  if (token) {\n    config.headers[\"auth-token\"] = token;\n  }\n\n  return config;\n};\n\nexport const isLogedIn = async () => {\n  const token = await AsyncStorage.getItem(\"token\");\n  console.log(token);\n  if (token) {\n    return true;\n  } else return false;\n};\n"]},"metadata":{},"sourceType":"module"}