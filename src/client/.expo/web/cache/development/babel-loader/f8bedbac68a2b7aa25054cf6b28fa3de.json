{"ast":null,"code":"import AsyncStorage from \"@react-native-community/async-storage\";\nimport axios from \"axios\";\nimport { tokenConfig } from \"./AuthActions\";\nexport var SIGNUP_REQUEST = \"SIGNUP_REQUEST\";\nexport var SIGNUP_SUCCESS = \"SIGNUP_SUCCESS\";\nexport var SIGNUP_FAILURE = \"SIGNUP_FAILURE\";\nimport { baseURL } from \"../constants\";\nexport var signupRequest = function signupRequest() {\n  return {\n    type: SIGNUP_REQUEST\n  };\n};\nexport var signupSuccess = function signupSuccess(signupData) {\n  return {\n    type: SIGNUP_SUCCESS,\n    payload: signupData\n  };\n};\nexport var signupFailure = function signupFailure(errMsg) {\n  return {\n    type: SIGNUP_FAILURE,\n    payload: errMsg\n  };\n};\nexport var signup = function signup(signupData) {\n  return function (dispatch) {\n    dispatch(signupRequest());\n    axios({\n      method: \"post\",\n      url: \"/register\",\n      baseURL: baseURL,\n      data: {\n        name: signupData.name,\n        username: signupData.username,\n        email: signupData.email,\n        password: signupData.password\n      },\n      headers: {\n        \"auth-token\": AsyncStorage.getItem(\"token\")\n      }\n    }).then(function (res) {\n      if (res.data.value) {\n        dispatch(signupSuccess(signupData));\n      } else {\n        dispatch(signupFailure(message));\n      }\n    }).catch(function (err) {\n      console.log(\"signupActions.js, Signup Request Error: \", err);\n      dispatch(signupFailure(\"Fail to Sign Up\"));\n    });\n  };\n};","map":{"version":3,"sources":["/home/amine/Bureau/insta_last/InstaClone/src/client/actions/signupActions.js"],"names":["AsyncStorage","axios","tokenConfig","SIGNUP_REQUEST","SIGNUP_SUCCESS","SIGNUP_FAILURE","baseURL","signupRequest","type","signupSuccess","signupData","payload","signupFailure","errMsg","signup","dispatch","method","url","data","name","username","email","password","headers","getItem","then","res","value","message","catch","err","console","log"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,uCAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,WAAT;AAEA,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AACP,SAASC,OAAT;AAGA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACjC,SAAO;AACLC,IAAAA,IAAI,EAAEL;AADD,GAAP;AAGD,CAJM;AAKP,OAAO,IAAMM,aAAa,GAAG,SAAhBA,aAAgB,CAACC,UAAD,EAAgB;AAC3C,SAAO;AACLF,IAAAA,IAAI,EAAEJ,cADD;AAELO,IAAAA,OAAO,EAAED;AAFJ,GAAP;AAID,CALM;AAMP,OAAO,IAAME,aAAa,GAAG,SAAhBA,aAAgB,CAACC,MAAD,EAAY;AACvC,SAAO;AACLL,IAAAA,IAAI,EAAEH,cADD;AAELM,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID,CALM;AAQP,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACJ,UAAD,EAAgB;AACpC,SAAO,UAACK,QAAD,EAAc;AACnBA,IAAAA,QAAQ,CAACR,aAAa,EAAd,CAAR;AAEAN,IAAAA,KAAK,CAAC;AACJe,MAAAA,MAAM,EAAE,MADJ;AAEJC,MAAAA,GAAG,EAAE,WAFD;AAGJX,MAAAA,OAAO,EAAEA,OAHL;AAIJY,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAET,UAAU,CAACS,IADb;AAEJC,QAAAA,QAAQ,EAAEV,UAAU,CAACU,QAFjB;AAGJC,QAAAA,KAAK,EAAEX,UAAU,CAACW,KAHd;AAIJC,QAAAA,QAAQ,EAAEZ,UAAU,CAACY;AAJjB,OAJF;AAWJC,MAAAA,OAAO,EAAE;AACP,sBAAcvB,YAAY,CAACwB,OAAb,CAAqB,OAArB;AADP;AAXL,KAAD,CAAL,CAeGC,IAfH,CAeQ,UAACC,GAAD,EAAS;AACb,UAAIA,GAAG,CAACR,IAAJ,CAASS,KAAb,EAAoB;AAClBZ,QAAAA,QAAQ,CAACN,aAAa,CAACC,UAAD,CAAd,CAAR;AACD,OAFD,MAEO;AAKLK,QAAAA,QAAQ,CAACH,aAAa,CAACgB,OAAD,CAAd,CAAR;AACD;AACF,KAzBH,EA0BGC,KA1BH,CA0BS,UAACC,GAAD,EAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,0CAAZ,EAAwDF,GAAxD;AACAf,MAAAA,QAAQ,CAACH,aAAa,CAAC,iBAAD,CAAd,CAAR;AACD,KA7BH;AA8BD,GAjCD;AAkCD,CAnCM","sourcesContent":["import AsyncStorage from \"@react-native-community/async-storage\";\nimport axios from \"axios\";\n//import swal from \"sweetalert\";\nimport { tokenConfig } from \"./AuthActions\";\n// action types\nexport const SIGNUP_REQUEST = \"SIGNUP_REQUEST\";\nexport const SIGNUP_SUCCESS = \"SIGNUP_SUCCESS\";\nexport const SIGNUP_FAILURE = \"SIGNUP_FAILURE\";\nimport { baseURL } from \"../constants\";\n\n// action creators\nexport const signupRequest = () => {\n  return {\n    type: SIGNUP_REQUEST,\n  };\n};\nexport const signupSuccess = (signupData) => {\n  return {\n    type: SIGNUP_SUCCESS,\n    payload: signupData,\n  };\n};\nexport const signupFailure = (errMsg) => {\n  return {\n    type: SIGNUP_FAILURE,\n    payload: errMsg,\n  };\n};\n\n// async impure action creator enabled by redux-thunk\nexport const signup = (signupData) => {\n  return (dispatch) => {\n    dispatch(signupRequest());\n    //const signupUri = 'http://localhost:3000/register';\n    axios({\n      method: \"post\",\n      url: \"/register\",\n      baseURL: baseURL,\n      data: {\n        name: signupData.name,\n        username: signupData.username,\n        email: signupData.email,\n        password: signupData.password,\n      },\n\n      headers: {\n        \"auth-token\": AsyncStorage.getItem(\"token\"),\n      },\n    })\n      .then((res) => {\n        if (res.data.value) {\n          dispatch(signupSuccess(signupData));\n        } else {\n          /*swal({\n            title: res.data.message,\n            icon: \"warning\",\n          });*/\n          dispatch(signupFailure(message));\n        }\n      })\n      .catch((err) => {\n        console.log(\"signupActions.js, Signup Request Error: \", err);\n        dispatch(signupFailure(\"Fail to Sign Up\"));\n      });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}