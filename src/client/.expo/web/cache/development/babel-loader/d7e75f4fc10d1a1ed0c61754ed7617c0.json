{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/home/sanata/Desktop/InpGram/InstaClone/src/Screens/Profile/profilePub.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { uploadpost as _uploadpost } from \"../../actions/postsActions\";\nimport { TabView, TabBar, TabViewPagerScroll, TabViewPagerPan } from \"react-native-tab-view\";\nimport PropTypes from \"prop-types\";\nimport { image } from \"./utils\";\nimport profileStyles from \"./ProfileStyle\";\nexport var ImageProfil = require(\"./images/photo_cv.jpg\");\nvar styles = StyleSheet.create(_objectSpread({}, profileStyles));\nimport { Item, Input } from \"native-base\";\nimport Posts from \"./Posts\";\nimport { connect } from \"react-redux\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport axios from \"axios\";\nimport { logout as _logout } from \"../../actions/loginActions\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport { Icon } from \"native-base\";\n\nvar Profile = function (_Component) {\n  _inherits(Profile, _Component);\n\n  var _super = _createSuper(Profile);\n\n  function Profile(_props) {\n    var _this;\n\n    _classCallCheck(this, Profile);\n\n    _this = _super.call(this, _props);\n\n    _this.getIdValue = function _callee() {\n      var value;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"publicProfileId\"));\n\n            case 2:\n              value = _context.sent;\n              console.log(\"zawa\");\n              console.log(value);\n              _this.id = value;\n              return _context.abrupt(\"return\", value);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.fetchUserDetails = function (user_id) {\n      console.log(\"dkhaaaal\");\n      console.log(user_id);\n      axios({\n        method: \"post\",\n        url: \"/getUserDetails\",\n        baseURL: \"http://localhost:3000\",\n        data: {\n          userid: user_id\n        }\n      }).then(function (res) {\n        console.log(res);\n\n        _this.setState({\n          name: res.data.results[0].name\n        });\n\n        _this.setState({\n          url: res.data.results[0].url\n        });\n\n        _this.setState({\n          username: res.data.results[0].username\n        });\n\n        _this.setState({\n          bio: res.data.results[0].bio\n        });\n\n        _this.setState({\n          post: res.data.results[0].posts[0].urlpost\n        });\n\n        var reversePosts = res.data.results[0].posts.reverse();\n\n        _this.setState({\n          posts: reversePosts\n        });\n\n        _this.setState({\n          followers: res.data.results[0].followers\n        });\n\n        _this.setState({\n          following: res.data.results[0].following\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.ModifyNumber = function (tabs) {\n      var newtabs = _toConsumableArray(tabs);\n\n      console.log(newtabs);\n\n      var newroutes = _toConsumableArray(newtabs.routes);\n\n      var newroute = _toConsumableArray(newroutes[0]);\n\n      newroute.count = reversePosts.length;\n\n      _this.setState({\n        tabs: newtabs\n      });\n    };\n\n    _this.UploadPost = function () {\n      var Data = {\n        id: _this.id,\n        urlpost: _this.state.urlpost,\n        description: _this.state.description,\n        date: new Date().toISOString()\n      };\n\n      _this.props.uploadpost(Data);\n    };\n\n    _this.onPressPlace = function () {\n      console.log(\"place\");\n    };\n\n    _this.LogOut = function () {\n      _this.props.logout();\n\n      _this.props.navigation.navigate(\"LogIn\");\n    };\n\n    _this.handleIndexChange = function (index) {\n      _this.setState({\n        tabs: _objectSpread(_objectSpread({}, _this.state.tabs), {}, {\n          index: index\n        })\n      });\n    };\n\n    _this.renderTabBar = function (props) {\n      return React.createElement(TabBar, _extends({\n        indicatorStyle: styles.indicatorTab,\n        renderLabel: _this.renderLabel(props),\n        pressOpacity: 0.8,\n        style: styles.tabBar\n      }, props, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 7\n        }\n      }));\n    };\n\n    _this.renderLabel = function (props) {\n      return function (_ref) {\n        var route = _ref.route;\n        var routes = props.navigationState.routes;\n        var labels = [];\n        routes.forEach(function (e, index) {\n          labels.push(index === props.navigationState.index ? \"black\" : \"gray\");\n        });\n        var currentIndex = parseInt(route.key) - 1;\n        var color = labels[currentIndex];\n        return React.createElement(View, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 9\n          }\n        }, React.createElement(Animated.Text, {\n          style: [styles.tabLabelText, {\n            color: color\n          }],\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 11\n          }\n        }, route.count), React.createElement(Animated.Text, {\n          style: [styles.tabLabelNumber, {\n            color: color\n          }],\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 11\n          }\n        }, route.title));\n      };\n    };\n\n    _this.renderScene = function (_ref2) {\n      var key = _ref2.route.key;\n      var posts = _this.props.posts;\n\n      switch (key) {\n        case \"1\":\n          return _this.renderMansonry2Col();\n\n        case \"2\":\n          return React.createElement(View, {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 11\n            }\n          }, \" \", React.createElement(ScrollView, {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 13\n            }\n          }, \" \", _this.following(), \" \"), \" \");\n\n        case \"3\":\n          return React.createElement(View, {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 11\n            }\n          }, \" \", React.createElement(ScrollView, {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 13\n            }\n          }, \" \", _this.followers(), \" \"), \" \");\n\n        default:\n          return React.createElement(View, {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 16\n            }\n          });\n      }\n    };\n\n    _this.following = function () {\n      return _this.state.following.map(function (user, index) {\n        return React.createElement(View, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 9\n          }\n        }, React.createElement(Text, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 11\n          }\n        }, \" \", user.name.username, \" \"), \" \");\n      });\n    };\n\n    _this.followers = function () {\n      return _this.state.followers.map(function (user, index) {\n        return React.createElement(View, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 9\n          }\n        }, React.createElement(Text, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 11\n          }\n        }, \" \", user.name.username, \" \"), \" \");\n      });\n    };\n\n    _this.renderContactHeader = function () {\n      return React.createElement(View, {\n        style: styles.headerContainer,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.item,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.userRow,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }\n      }, React.createElement(Image, {\n        style: styles.userImage,\n        source: {\n          uri: _this.state.url\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }\n      }))), React.createElement(View, {\n        style: styles.item2,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: {\n          height: 70,\n          marginTop: 10,\n          marginRight: 50\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }\n      }, React.createElement(Button, {\n        title: \"logout\",\n        onPress: _this.LogOut,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }\n      })), React.createElement(View, {\n        style: styles.userRow,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }\n      }, React.createElement(TextInput, {\n        style: styles.TextInputurl,\n        style: {\n          height: 30,\n          marginTop: 10,\n          marginBottom: 10,\n          marginRight: 1\n        },\n        placeholder: \"urlpost\",\n        onChangeText: function onChangeText(text) {\n          return _this.setState({\n            urlpost: text\n          });\n        },\n        value: _this.state.urlpost,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }\n      }), React.createElement(TextInput, {\n        style: styles.TextInputurl,\n        style: {\n          height: 30,\n          marginTop: 10,\n          marginBottom: 10,\n          marginRight: 1\n        },\n        placeholder: \"Description\",\n        onChangeText: function onChangeText(text) {\n          return _this.setState({\n            description: text\n          });\n        },\n        value: _this.state.description,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }\n      }), React.createElement(Button, {\n        onPress: _this.UploadPost,\n        title: \"upload post\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 13\n        }\n      })), React.createElement(View, {\n        style: styles.userRow,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: styles.userNameRow,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.userNameText,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 15\n        }\n      }, _this.state.name)), React.createElement(View, {\n        style: styles.userNameRow,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.userNameText,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 15\n        }\n      }, \"@\", _this.state.username)), React.createElement(View, {\n        style: styles.userBioRow,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.userBioText,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 15\n        }\n      }, _this.state.bio)))));\n    };\n\n    _this.renderMansonry2Col = function () {\n      return React.createElement(View, {\n        style: styles.masonryContainer,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 9\n        }\n      }, React.createElement(Posts, {\n        containerStyle: styles.sceneContainer,\n        posts: _this.state.posts,\n        userid: _this.state.id,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }\n      })));\n    };\n\n    _this.state = {\n      authToken: _this.props.authToken,\n      id: \"\",\n      name: \"\",\n      url: \"\",\n      description: \"\",\n      username: \"\",\n      urlpost: \"\",\n      bio: \"\",\n      post: \"\",\n      posts: [],\n      tabs: {\n        index: 0,\n        routes: [{\n          key: \"1\",\n          title: \"Posts\",\n          count: \"5\"\n        }, {\n          key: \"2\",\n          title: \"following\",\n          count: \"192 M\"\n        }, {\n          key: \"3\",\n          title: \"followers\",\n          count: \"83\"\n        }]\n      },\n      postsMasonry: {},\n      following: [],\n      followers: []\n    };\n    return _this;\n  }\n\n  _createClass(Profile, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      return _regeneratorRuntime.async(function componentDidMount$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(this.getIdValue());\n\n            case 2:\n              console.log(this.id);\n              this.fetchUserDetails(this.id);\n              this.willFocusSubscription = this.props.navigation.addListener(\"willFocus\", function () {\n                _this2.fetchUserDetails(_this2.id);\n              });\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this.props.isUploaded) {\n        Alert.alert(\"POST UPLOADED\");\n        this.props.navigation.navigate(\"Profile\");\n      }\n\n      if (!this.props.isUploaded && !this.props.isLoading) {\n        Alert.alert(this.props.errMsg);\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(newProps) {\n      if (newProps.isUploaded !== this.props.isUploaded) {\n        console.log(\"bibi\");\n        this.fetchUserDetails(this.id);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.willFocusSubscription.remove();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ScrollView, {\n        style: styles.scroll,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: [styles.container, this.props.containerStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.cardContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }\n      }, this.renderContactHeader(), React.createElement(TabView, {\n        style: [styles.tabContainer, this.props.tabContainerStyle],\n        navigationState: this.state.tabs,\n        renderScene: this.renderScene,\n        renderTabBar: this.renderTabBar,\n        onIndexChange: this.handleIndexChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return Profile;\n}(Component);\n\nProfile.navigationOptions = {\n  tabBarIcon: function tabBarIcon(_ref3) {\n    var tintColor = _ref3.tintColor;\n    return React.createElement(Icon, {\n      name: \"person\",\n      style: {\n        color: tintColor\n      },\n      __self: Profile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    });\n  }\n};\n\nvar mapStatetoProps = function mapStatetoProps(state) {\n  return {\n    authToken: state.loginReducer.authToken,\n    userDetails: state.loginReducer.userDetails,\n    isLoading: state.postsReducer.isLoading,\n    isUploaded: state.postsReducer.isUploaded,\n    errMsg: state.postsReducer.errMsg\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    logout: function logout() {\n      return dispatch(_logout());\n    },\n    uploadpost: function uploadpost(Data) {\n      return dispatch(_uploadpost(Data));\n    }\n  };\n};\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(Profile);","map":{"version":3,"sources":["/home/sanata/Desktop/InpGram/InstaClone/src/Screens/Profile/profilePub.js"],"names":["React","Component","uploadpost","TabView","TabBar","TabViewPagerScroll","TabViewPagerPan","PropTypes","image","profileStyles","ImageProfil","require","styles","StyleSheet","create","Item","Input","Posts","connect","NavigationContainer","axios","logout","AsyncStorage","Icon","Profile","props","getIdValue","getItem","value","console","log","id","fetchUserDetails","user_id","method","url","baseURL","data","userid","then","res","setState","name","results","username","bio","post","posts","urlpost","reversePosts","reverse","followers","following","catch","err","ModifyNumber","tabs","newtabs","newroutes","routes","newroute","count","length","UploadPost","Data","state","description","date","Date","toISOString","onPressPlace","LogOut","navigation","navigate","handleIndexChange","index","renderTabBar","indicatorTab","renderLabel","tabBar","route","navigationState","labels","forEach","e","push","currentIndex","parseInt","key","color","tabLabelText","tabLabelNumber","title","renderScene","renderMansonry2Col","map","user","renderContactHeader","headerContainer","item","userRow","userImage","uri","item2","height","marginTop","marginRight","TextInputurl","marginBottom","text","userNameRow","userNameText","userBioRow","userBioText","masonryContainer","sceneContainer","authToken","postsMasonry","willFocusSubscription","addListener","isUploaded","Alert","alert","isLoading","errMsg","newProps","remove","scroll","container","containerStyle","cardContainer","tabContainer","tabContainerStyle","navigationOptions","tabBarIcon","tintColor","mapStatetoProps","loginReducer","userDetails","postsReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Animated,\n  Image,\n  TextInput,\n  Button,\n  ScrollView,\n  Alert,\n  StyleSheet,\n  Text,\n  View,\n} from \"react-native\";\nimport { uploadpost } from \"../../actions/postsActions\";\n\nimport {\n  TabView,\n  TabBar,\n  TabViewPagerScroll,\n  TabViewPagerPan,\n} from \"react-native-tab-view\";\nimport PropTypes from \"prop-types\";\nimport { image } from \"./utils\";\nimport profileStyles from \"./ProfileStyle\";\nexport const ImageProfil = require(\"./images/photo_cv.jpg\");\nconst styles = StyleSheet.create({ ...profileStyles });\nimport { Item, Input } from \"native-base\";\nimport Posts from \"./Posts\";\nimport { connect } from \"react-redux\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport axios from \"axios\";\nimport { logout } from \"../../actions/loginActions\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport { Icon } from \"native-base\";\n\nclass Profile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      authToken: this.props.authToken,\n      id: \"\",\n      name: \"\",\n      url: \"\",\n      description: \"\",\n      username: \"\",\n      urlpost: \"\",\n      bio: \"\",\n      post: \"\",\n      posts: [],\n      tabs: {\n        index: 0,\n        routes: [\n          { key: \"1\", title: \"Posts\", count: \"5\" },\n          { key: \"2\", title: \"following\", count: \"192 M\" },\n          { key: \"3\", title: \"followers\", count: \"83\" },\n        ],\n      },\n      postsMasonry: {},\n\n      following: [],\n\n      followers: [],\n    };\n  }\n\n  getIdValue = async () => {\n    var value = await AsyncStorage.getItem(\"publicProfileId\");\n    console.log(\"zawa\");\n    console.log(value);\n\n    this.id = value;\n    return value;\n  };\n\n  static navigationOptions = {\n    tabBarIcon: ({ tintColor }) => (\n      <Icon name=\"person\" style={{ color: tintColor }} />\n    ),\n  };\n\n  fetchUserDetails = (user_id) => {\n    console.log(\"dkhaaaal\");\n    console.log(user_id);\n    /*axios.post(\"http://localhost:3000/getUserDetails\",{\n  params: {\n    userid: user_id\n  }})*/\n    axios({\n      method: \"post\",\n      url: \"/getUserDetails\",\n      baseURL: \"http://localhost:3000\",\n      data: {\n        userid: user_id,\n      },\n    })\n      .then((res) => {\n        console.log(res);\n        this.setState({ name: res.data.results[0].name });\n        this.setState({ url: res.data.results[0].url });\n        this.setState({ username: res.data.results[0].username });\n        this.setState({ bio: res.data.results[0].bio });\n        this.setState({ post: res.data.results[0].posts[0].urlpost });\n\n        const reversePosts = res.data.results[0].posts.reverse();\n\n        this.setState({ posts: reversePosts });\n\n        this.setState({ followers: res.data.results[0].followers });\n        this.setState({ following: res.data.results[0].following });\n      })\n      .catch((err) => console.log(err));\n  };\n  ModifyNumber = (tabs) => {\n    var newtabs = [...tabs];\n    console.log(newtabs);\n    var newroutes = [...newtabs.routes];\n    var newroute = [...newroutes[0]];\n    newroute.count = reversePosts.length;\n    this.setState({ tabs: newtabs });\n  };\n\n  UploadPost = () => {\n    const Data = {\n      id: this.id,\n      urlpost: this.state.urlpost,\n      description: this.state.description,\n      date: new Date().toISOString(),\n    };\n    // calling signup() dispatch\n\n    this.props.uploadpost(Data);\n  };\n\n  onPressPlace = () => {\n    console.log(\"place\");\n  };\n  async componentDidMount() {\n    await this.getIdValue();\n\n    console.log(this.id);\n    this.fetchUserDetails(this.id);\n\n    this.willFocusSubscription = this.props.navigation.addListener(\n      \"willFocus\",\n      () => {\n        this.fetchUserDetails(this.id);\n      }\n    );\n  }\n\n  componentDidUpdate() {\n    if (this.props.isUploaded) {\n      Alert.alert(\"POST UPLOADED\");\n      this.props.navigation.navigate(\"Profile\");\n    }\n    if (!this.props.isUploaded && !this.props.isLoading) {\n      Alert.alert(this.props.errMsg);\n    }\n  }\n\n  componentWillReceiveProps(newProps) {\n    if (newProps.isUploaded !== this.props.isUploaded) {\n      console.log(\"bibi\");\n      this.fetchUserDetails(this.id);\n    }\n  }\n\n  componentWillUnmount() {\n    this.willFocusSubscription.remove();\n  }\n\n  LogOut = () => {\n    this.props.logout();\n    this.props.navigation.navigate(\"LogIn\");\n  };\n  handleIndexChange = (index) => {\n    this.setState({\n      tabs: {\n        ...this.state.tabs,\n        index,\n      },\n    });\n  };\n\n  renderTabBar = (props) => {\n    return (\n      <TabBar\n        indicatorStyle={styles.indicatorTab}\n        renderLabel={this.renderLabel(props)}\n        pressOpacity={0.8}\n        style={styles.tabBar}\n        {...props}\n      />\n    );\n  };\n\n  renderLabel =\n    (props) =>\n    ({ route }) => {\n      const routes = props.navigationState.routes;\n\n      let labels = [];\n      routes.forEach((e, index) => {\n        labels.push(index === props.navigationState.index ? \"black\" : \"gray\");\n      });\n\n      const currentIndex = parseInt(route.key) - 1;\n      const color = labels[currentIndex];\n\n      return (\n        <View>\n          <Animated.Text style={[styles.tabLabelText, { color }]}>\n            {route.count}\n          </Animated.Text>\n          <Animated.Text style={[styles.tabLabelNumber, { color }]}>\n            {route.title}\n          </Animated.Text>\n        </View>\n      );\n    };\n\n  renderScene = ({ route: { key } }) => {\n    const { posts } = this.props;\n\n    switch (key) {\n      case \"1\":\n        return this.renderMansonry2Col();\n      case \"2\":\n        return (\n          <View>\n            {\" \"}\n            <ScrollView> {this.following()} </ScrollView>{\" \"}\n          </View>\n        );\n      case \"3\":\n        return (\n          <View>\n            {\" \"}\n            <ScrollView> {this.followers()} </ScrollView>{\" \"}\n          </View>\n        );\n\n      default:\n        return <View />;\n    }\n  };\n\n  following = () => {\n    return this.state.following.map((user, index) => {\n      return (\n        <View>\n          <Text> {user.name.username} </Text>{\" \"}\n        </View>\n      );\n    });\n  };\n\n  followers = () => {\n    return this.state.followers.map((user, index) => {\n      return (\n        <View>\n          <Text> {user.name.username} </Text>{\" \"}\n        </View>\n      );\n    });\n  };\n\n  renderContactHeader = () => {\n    return (\n      <View style={styles.headerContainer}>\n        <View style={styles.item}>\n          <View style={styles.userRow}>\n            <Image style={styles.userImage} source={{ uri: this.state.url }} />\n          </View>\n        </View>\n\n        <View style={styles.item2}>\n          <View style={{ height: 70, marginTop: 10, marginRight: 50 }}>\n            <Button title=\"logout\" onPress={this.LogOut} />\n          </View>\n\n          <View style={styles.userRow}>\n            <TextInput\n              style={styles.TextInputurl}\n              style={{\n                height: 30,\n                marginTop: 10,\n                marginBottom: 10,\n                marginRight: 1,\n              }}\n              placeholder=\"urlpost\"\n              onChangeText={(text) => this.setState({ urlpost: text })}\n              value={this.state.urlpost}\n            />\n\n            <TextInput\n              style={styles.TextInputurl}\n              style={{\n                height: 30,\n                marginTop: 10,\n                marginBottom: 10,\n                marginRight: 1,\n              }}\n              placeholder=\"Description\"\n              onChangeText={(text) => this.setState({ description: text })}\n              value={this.state.description}\n            />\n\n            <Button onPress={this.UploadPost} title=\"upload post\" />\n          </View>\n          <View style={styles.userRow}>\n            <View style={styles.userNameRow}>\n              <Text style={styles.userNameText}>{this.state.name}</Text>\n            </View>\n            <View style={styles.userNameRow}>\n              <Text style={styles.userNameText}>@{this.state.username}</Text>\n            </View>\n            <View style={styles.userBioRow}>\n              <Text style={styles.userBioText}>{this.state.bio}</Text>\n            </View>\n          </View>\n        </View>\n      </View>\n    );\n  };\n\n  renderMansonry2Col = () => {\n    return (\n      <View style={styles.masonryContainer}>\n        <View>\n          <Posts\n            containerStyle={styles.sceneContainer}\n            posts={this.state.posts}\n            userid={this.state.id}\n          />\n        </View>\n      </View>\n    );\n  };\n  render() {\n    return (\n      <ScrollView style={styles.scroll}>\n        <View style={[styles.container, this.props.containerStyle]}>\n          <View style={styles.cardContainer}>\n            {this.renderContactHeader()}\n\n            <TabView\n              style={[styles.tabContainer, this.props.tabContainerStyle]}\n              navigationState={this.state.tabs}\n              renderScene={this.renderScene}\n              renderTabBar={this.renderTabBar}\n              onIndexChange={this.handleIndexChange}\n            />\n          </View>\n        </View>\n      </ScrollView>\n    );\n  }\n}\n\nconst mapStatetoProps = (state) => {\n  return {\n    authToken: state.loginReducer.authToken,\n    userDetails: state.loginReducer.userDetails,\n    isLoading: state.postsReducer.isLoading,\n    isUploaded: state.postsReducer.isUploaded,\n    errMsg: state.postsReducer.errMsg,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    // only map needed dispatches here\n    logout: () => dispatch(logout()),\n    uploadpost: (Data) => dispatch(uploadpost(Data)),\n  };\n};\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(Profile);\n"]},"metadata":{},"sourceType":"module"}