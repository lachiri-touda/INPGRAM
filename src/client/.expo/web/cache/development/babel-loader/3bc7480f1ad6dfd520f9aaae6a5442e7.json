{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/home/amine/Bureau/InstaTouda/InstaClone/src/Screens/LogIn/LogIn.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\n\nvar axios = require('axios');\n\nimport { connect } from 'react-redux';\nimport AuthStyle from \"./AuthStyle\";\nvar styles = StyleSheet.create(_objectSpread({}, AuthStyle));\nimport { login as _login } from \"../../actions/loginActions\";\n\nfunction LogIn(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      putEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      putPassword = _useState4[1];\n\n  var didMountRef = useRef(false);\n  useEffect(function () {\n    console.log(\"loginScreen.js, props.isAuth: \", props.isAuth);\n    console.log(\"loginScreen.js, props.isLoading: \", props.isLoading);\n\n    if (didMountRef.current) {\n      if (props.isAuth) {\n        props.navigation.navigate('MainScreen');\n      } else if (!props.isAuth && !props.isLoading) {\n        Alert.alert(props.errMsg);\n      }\n    } else {\n      didMountRef.current = true;\n    }\n  }, [props.isAuth, props.isLoading]);\n\n  var loginHandler = function loginHandler() {\n    var loginData = {\n      email: email,\n      password: password\n    };\n    props.login(loginData);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, \"INPGRAM \"), React.createElement(Text, {\n    style: styles.titleText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, \"Login\"), React.createElement(TextInput, {\n    style: styles.TextInput,\n    placeholder: \"Email\",\n    id: \"email\",\n    onChangeText: function onChangeText(text) {\n      return putEmail(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    style: styles.TextInput,\n    id: \"password\",\n    placeholder: \"Password\",\n    secureTextEntry: true,\n    onChangeText: function onChangeText(text) {\n      return putPassword(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }), React.createElement(Button, {\n    onPress: loginHandler,\n    title: \"Log In\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }), React.createElement(Button, {\n    onPress: function onPress() {\n      return props.navigation.navigate('Register');\n    },\n    title: \"Sign Up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }), React.createElement(Button, {\n    onPress: function onPress() {\n      return props.navigation.navigate('Home');\n    },\n    title: \"Passage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }));\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isLoading: state.loginReducer.isLoading,\n    isAuth: state.loginReducer.isAuth,\n    errMsg: state.loginReducer.errMsg\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    login: function login(loginData) {\n      return dispatch(_login(loginData));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LogIn);","map":{"version":3,"sources":["/home/amine/Bureau/InstaTouda/InstaClone/src/Screens/LogIn/LogIn.js"],"names":["React","useState","useRef","useEffect","axios","require","connect","AuthStyle","styles","StyleSheet","create","login","LogIn","props","email","putEmail","password","putPassword","didMountRef","console","log","isAuth","isLoading","current","navigation","navigate","Alert","alert","errMsg","loginHandler","loginData","container","title","titleText","TextInput","text","mapStateToProps","state","loginReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport {View,Button,TextInput,Text,Alert,StyleSheet } from 'react-native'\nconst axios = require('axios');\nimport { connect } from 'react-redux';\nimport AuthStyle from './AuthStyle'\nconst styles = StyleSheet.create({ ...AuthStyle})\n\nimport { login } from '../../actions/loginActions';\n\n\nfunction LogIn(props) {\n\n\n    \n\n    const [email, putEmail] = useState(\"\");\n  const [password, putPassword] = useState(\"\");\n\n  // useRef hook to check whether the component has just mounted or updated\n  // Link: https://dev.to/savagepixie/how-to-mimic-componentdidupdate-with-react-hooks-3j8c\n  const didMountRef = useRef(false);\n  // useEffect()to check if states have changed\n  // 2nd argument is the list of states you want to watch for\n  useEffect(() => {\n    console.log(\"loginScreen.js, props.isAuth: \", props.isAuth);\n    console.log(\"loginScreen.js, props.isLoading: \", props.isLoading);\n    if (didMountRef.current) {\n      // if login success, go to home screen\n      if (props.isAuth) {\n        props.navigation.navigate('MainScreen');\n      } else if (!props.isAuth && !props.isLoading) {\n        Alert.alert(props.errMsg);\n      }\n    } else {\n      didMountRef.current = true;\n    }\n  }, [props.isAuth, props.isLoading]);\n\n  // this function make sure props.login() only be called once\n  const loginHandler = () => {\n    const loginData = {\n      email: email,\n      password: password\n    }\n    // calling login() dispatch function\n    props.login(loginData);\n  }\n\n\n    \n \n\n        return (\n            \n            <View style={styles.container}>\n                <Text style={styles.title}>INPGRAM </Text>\n                <Text style={styles.titleText}>Login</Text>\n                <TextInput style={styles.TextInput}\n                    placeholder=\"Email\"\n                    id='email' \n                    onChangeText={text => putEmail(text)}\n                />\n                <TextInput style={styles.TextInput}\n                   id='password' placeholder='Password' secureTextEntry={true} onChangeText={text => putPassword(text)}\n                />  \n                \n                <Button\n                onPress={loginHandler }\n                   title=\"Log In\"  \n                /> \n                <Button\n                    onPress={() => props.navigation.navigate('Register')} \n                    title=\"Sign Up\"  \n                /> \n                <Button\n                    onPress={() => props.navigation.navigate('Home')} \n                    title=\"Passage\"  \n                />                          \n            </View>\n           \n        );\n    }\n    \n    const mapStateToProps = state => {\n        return {\n          // only map needed states here\n          isLoading: state.loginReducer.isLoading,\n          isAuth: state.loginReducer.isAuth,\n          errMsg: state.loginReducer.errMsg,\n        }\n      }\n      const mapDispatchToProps = dispatch => {\n        return {\n          // only map needed dispatches here\n          login: loginData => dispatch(login(loginData)),\n        }\n      }\n      \nexport default connect(mapStateToProps, mapDispatchToProps)(LogIn);\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}