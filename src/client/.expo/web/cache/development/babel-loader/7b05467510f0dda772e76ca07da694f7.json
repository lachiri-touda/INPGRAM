{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/sanata/Desktop/InpGram/InstaClone/src/Screens/Profile/Post.js\";\n\nimport React from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport PropTypes from \"prop-types\";\nexport var ImageProfil = require(\"./images/imagea.jpeg\");\nimport axios from \"axios\";\nimport { baseURL } from \"../../constants\";\nvar styles = StyleSheet.create({\n  container: {\n    borderWidth: 0,\n    justifyContent: \"space-between\",\n    marginBottom: 5,\n    marginLeft: 12,\n    marginRight: 12,\n    marginTop: 10,\n    padding: 0\n  },\n  date: {\n    color: \"gray\",\n    fontSize: 12.5\n  },\n  postRow: {\n    alignItems: \"center\",\n    flexDirection: \"row\",\n    paddingBottom: 6,\n    paddingLeft: 15,\n    paddingRight: 15,\n    paddingTop: 6,\n    width: Dimensions.get(\"window\").width * 1\n  },\n  postImage: {\n    backgroundColor: \"rgba(0, 0, 0, 0.075)\",\n    height: 500\n  },\n  userImage: {\n    marginRight: 12\n  },\n  wordRow: {\n    marginBottom: 10,\n    paddingLeft: 15,\n    paddingRight: 15,\n    paddingTop: 6\n  },\n  wordText: {\n    fontSize: 14,\n    fontWeight: \"500\",\n    lineHeight: 22\n  }\n});\n\nfunction ModifyPost(urlpost, description, userid, Id) {\n  swal({\n    title: \"Modify Post:\",\n    text: \"Description\",\n    icon: urlpost,\n    content: {\n      element: \"input\",\n      attributes: {\n        value: description,\n        type: \"Description\"\n      }\n    },\n    button: {\n      text: \"Update\",\n      closeModal: false\n    }\n  }).then(function (description) {\n    axios({\n      method: \"post\",\n      url: \"/UpdatePost\",\n      baseURL: baseURL,\n      data: {\n        userid: userid,\n        postid: Id,\n        description: description\n      }\n    }).then(function (res) {\n      var message = res.data.message;\n      console.log(message);\n\n      if (res.data.value) {}\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  });\n}\n\nfunction DeletePost(urlpost, userid, Id) {}\n\nvar Post = function Post(_ref) {\n  var containerStyle = _ref.containerStyle,\n      Id = _ref.Id,\n      urlpost = _ref.urlpost,\n      description = _ref.description,\n      date = _ref.date,\n      userid = _ref.userid;\n  return React.createElement(View, {\n    style: [styles.container, containerStyle],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.postRow,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }), urlpost && React.createElement(Image, {\n    style: [styles.postImage],\n    source: {\n      uri: urlpost\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: styles.wordRow,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.wordText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }, \"Description: \", description), React.createElement(Text, {\n    style: styles.wordText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, \"Date de publication :\", date)), React.createElement(Button, {\n    onPress: function onPress() {\n      return ModifyPost(urlpost, description, userid, Id);\n    },\n    title: \"Modify post\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    onPress: function onPress() {\n      return DeletePost(urlpost, userid, Id);\n    },\n    title: \"Delete post\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  })));\n};\n\nPost.propTypes = {\n  containerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  Id: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  urlpost: PropTypes.string,\n  description: PropTypes.string,\n  date: PropTypes.string,\n  userid: PropTypes.oneOfType([PropTypes.object, PropTypes.number])\n};\nPost.defaultProps = {\n  containerStyle: {},\n  Id: null,\n  urlpost: null,\n  description: null,\n  date: null,\n  userid: null\n};\nexport default Post;","map":{"version":3,"sources":["/home/sanata/Desktop/InpGram/InstaClone/src/Screens/Profile/Post.js"],"names":["React","PropTypes","ImageProfil","require","axios","baseURL","styles","StyleSheet","create","container","borderWidth","justifyContent","marginBottom","marginLeft","marginRight","marginTop","padding","date","color","fontSize","postRow","alignItems","flexDirection","paddingBottom","paddingLeft","paddingRight","paddingTop","width","Dimensions","get","postImage","backgroundColor","height","userImage","wordRow","wordText","fontWeight","lineHeight","ModifyPost","urlpost","description","userid","Id","swal","title","text","icon","content","element","attributes","value","type","button","closeModal","then","method","url","data","postid","res","message","console","log","catch","err","DeletePost","Post","containerStyle","uri","propTypes","oneOfType","object","number","string","defaultProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  Image,\n  Dimensions,\n  Text,\n  Button,\n  StyleSheet,\n  View,\n} from \"react-native\";\nimport PropTypes from \"prop-types\";\nexport const ImageProfil = require(\"./images/imagea.jpeg\");\nimport axios from \"axios\";\nimport { baseURL } from \"../../constants\";\n\nconst styles = StyleSheet.create({\n  container: {\n    borderWidth: 0,\n    justifyContent: \"space-between\",\n    marginBottom: 5,\n    marginLeft: 12,\n    marginRight: 12,\n    marginTop: 10,\n    padding: 0,\n  },\n  date: {\n    color: \"gray\",\n    fontSize: 12.5,\n  },\n  postRow: {\n    alignItems: \"center\",\n    flexDirection: \"row\",\n    paddingBottom: 6,\n    paddingLeft: 15,\n    paddingRight: 15,\n    paddingTop: 6,\n    width: Dimensions.get(\"window\").width * 1,\n  },\n  postImage: {\n    backgroundColor: \"rgba(0, 0, 0, 0.075)\",\n    height: 500,\n  },\n  userImage: {\n    marginRight: 12,\n  },\n  wordRow: {\n    marginBottom: 10,\n    paddingLeft: 15,\n    paddingRight: 15,\n    paddingTop: 6,\n  },\n  wordText: {\n    fontSize: 14,\n    fontWeight: \"500\",\n    lineHeight: 22,\n  },\n});\n\nfunction ModifyPost(urlpost, description, userid, Id) {\n  swal({\n    title: \"Modify Post:\",\n    text: \"Description\",\n    icon: urlpost,\n    content: {\n      element: \"input\",\n      attributes: {\n        value: description,\n        type: \"Description\",\n      },\n    },\n    button: {\n      text: \"Update\",\n      closeModal: false,\n    },\n  }).then((description) => {\n    axios({\n      method: \"post\",\n      url: \"/UpdatePost\",\n      baseURL: baseURL,\n      data: {\n        userid: userid,\n        postid: Id,\n        description: description,\n      },\n    })\n      .then((res) => {\n        //console.log(res)\n        const message = res.data.message;\n        console.log(message);\n        if (res.data.value) {\n          //swal(message);\n        }\n      })\n      .catch((err) => console.log(err));\n  });\n}\n\nfunction DeletePost(urlpost, userid, Id) {\n  /*swal({\n    title: \"Delete the post?\",\n    text: \"\",\n    icon: urlpost,\n    buttons: true,\n    dangerMode: true,\n  }).then((willDelete) => {\n    axios({\n      method: \"post\",\n      url: \"/DeletePost\",\n      baseURL: baseURL,\n      data: {\n        userid: userid,\n        postid: Id,\n      },\n    })\n      .then((res) => {\n        //console.log(res)\n        const message = res.data.message;\n        console.log(message);\n        if (res.data.value) {\n          swal(message);\n        }\n      })\n      .catch((err) => console.log(err));\n    if (willDelete) {\n      swal(\"Your post has been deleted!\", { icon: \"success\" });\n    } else {\n      swal(\"Your post has not been deleted\");\n    }\n  });*/\n}\n\nconst Post = ({ containerStyle, Id, urlpost, description, date, userid }) => {\n  return (\n    <View style={[styles.container, containerStyle]}>\n      <View style={styles.postRow}></View>\n\n      {urlpost && (\n        <Image style={[styles.postImage]} source={{ uri: urlpost }} />\n      )}\n      <View style={styles.wordRow}>\n        <View>\n          <Text style={styles.wordText}>Description: {description}</Text>\n          <Text style={styles.wordText}>Date de publication :{date}</Text>\n        </View>\n\n        <Button\n          onPress={() => ModifyPost(urlpost, description, userid, Id)}\n          title=\"Modify post\"\n        />\n\n        <Button\n          onPress={() => DeletePost(urlpost, userid, Id)}\n          title=\"Delete post\"\n        />\n      </View>\n    </View>\n  );\n};\n\nPost.propTypes = {\n  containerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  Id: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  urlpost: PropTypes.string,\n  description: PropTypes.string,\n  date: PropTypes.string,\n  userid: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n};\n\nPost.defaultProps = {\n  containerStyle: {},\n  Id: null,\n  urlpost: null,\n  description: null,\n  date: null,\n  userid: null,\n};\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}