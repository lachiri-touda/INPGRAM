{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/home/sanata/Desktop/InpGram/InstaClone/src/navigation/rootNavigation.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createBottomTabNavigator } from \"react-navigation-tabs\";\nimport { createStackNavigator } from \"react-navigation-stack\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { createAppContainer, createSwitchNavigator } from \"react-navigation\";\nimport LogIn from \"../Screens/LogIn/LogIn\";\nimport Register from \"../Screens/LogIn/Register\";\nimport Profile from \"../Screens/Profile/Profile\";\nimport Home from \"../Screens/Home/Home\";\nimport MainScreen from \"../Screens/MainScreen\";\nimport EditProfile from \"../Screens/EditProfile/EditProfile\";\nimport ProfilePub from \"../Screens/Profile/profilePub\";\nimport Search from \"../Screens/Home/Search\";\n\nvar AppNavigator = function AppNavigator() {\n  return React.createElement(Tab.Navigator, {\n    tabBar: function tabBar(props) {\n      return React.createElement(BottomTabBar, _extends({}, props, {\n        state: _objectSpread(_objectSpread({}, props.state), {}, {\n          routes: props.state.routes.slice(0, 4)\n        }),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Page 1\",\n    component: FeedScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Page 2\",\n    component: LaunchScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Page 3\",\n    component: MyEventsScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Page 4\",\n    component: MyTicketsScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Search\",\n    component: SearchScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar hiddenNavigator = createStackNavigator({\n  ProfilePub: {\n    screen: ProfilePub\n  }\n});\nvar AuthNavigator = createStackNavigator({\n  LogIn: {\n    screen: LogIn\n  },\n  Register: {\n    screen: Register\n  }\n});\nvar AppSwitch = createSwitchNavigator({\n  Auth: AuthNavigator,\n  hidden: hiddenNavigator,\n  App: AppNavigator\n}, {\n  initialRouteName: \"Auth\"\n});\nvar AppContainer = createAppContainer(AppSwitch);\nexport default AppContainer;","map":{"version":3,"sources":["/home/sanata/Desktop/InpGram/InstaClone/src/navigation/rootNavigation.js"],"names":["createBottomTabNavigator","createStackNavigator","React","useState","useRef","useEffect","createAppContainer","createSwitchNavigator","LogIn","Register","Profile","Home","MainScreen","EditProfile","ProfilePub","Search","AppNavigator","props","state","routes","slice","FeedScreen","LaunchScreen","MyEventsScreen","MyTicketsScreen","SearchScreen","hiddenNavigator","screen","AuthNavigator","AppSwitch","Auth","hidden","App","initialRouteName","AppContainer"],"mappings":";;;;;;;;;;AAEA,SAASA,wBAAT,QAAyC,uBAAzC;AACA,SAASC,oBAAT,QAAqC,wBAArC;AAEA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;;;;;;;;AAYA,SAASC,kBAAT,EAA6BC,qBAA7B,QAA0D,kBAA1D;AACA,OAAOC,KAAP;AACA,OAAOC,QAAP;AACA,OAAOC,OAAP;AACA,OAAOC,IAAP;AACA,OAAOC,UAAP;AACA,OAAOC,WAAP;AACA,OAAOC,UAAP;AAEA,OAAOC,MAAP;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,SACE,oBAAC,GAAD,CAAK,SAAL;AACE,IAAA,MAAM,EAAE,gBAACC,KAAD;AAAA,aACN,oBAAC,YAAD,eACMA,KADN;AAEE,QAAA,KAAK,kCAAOA,KAAK,CAACC,KAAb;AAAoBC,UAAAA,MAAM,EAAEF,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBC,KAAnB,CAAyB,CAAzB,EAA4B,CAA5B;AAA5B,UAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADM;AAAA,KADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,oBAAC,GAAD,CAAK,MAAL;AAAY,IAAA,IAAI,EAAC,QAAjB;AAA0B,IAAA,SAAS,EAAEC,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EASE,oBAAC,GAAD,CAAK,MAAL;AAAY,IAAA,IAAI,EAAC,QAAjB;AAA0B,IAAA,SAAS,EAAEC,YAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAUE,oBAAC,GAAD,CAAK,MAAL;AAAY,IAAA,IAAI,EAAC,QAAjB;AAA0B,IAAA,SAAS,EAAEC,cAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAWE,oBAAC,GAAD,CAAK,MAAL;AAAY,IAAA,IAAI,EAAC,QAAjB;AAA0B,IAAA,SAAS,EAAEC,eAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,EAYE,oBAAC,GAAD,CAAK,MAAL;AAAY,IAAA,IAAI,EAAC,QAAjB;AAA0B,IAAA,SAAS,EAAEC,YAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CADF;AAgBD,CAjBD;;AAsDA,IAAMC,eAAe,GAAGzB,oBAAoB,CAAC;AAC3Ca,EAAAA,UAAU,EAAE;AACVa,IAAAA,MAAM,EAAEb;AADE;AAD+B,CAAD,CAA5C;AAMA,IAAMc,aAAa,GAAG3B,oBAAoB,CAAC;AACzCO,EAAAA,KAAK,EAAE;AACLmB,IAAAA,MAAM,EAAEnB;AADH,GADkC;AAIzCC,EAAAA,QAAQ,EAAE;AACRkB,IAAAA,MAAM,EAAElB;AADA;AAJ+B,CAAD,CAA1C;AAQA,IAAMoB,SAAS,GAAGtB,qBAAqB,CACrC;AACEuB,EAAAA,IAAI,EAAEF,aADR;AAEEG,EAAAA,MAAM,EAAEL,eAFV;AAGEM,EAAAA,GAAG,EAAEhB;AAHP,CADqC,EAMrC;AACEiB,EAAAA,gBAAgB,EAAE;AADpB,CANqC,CAAvC;AAWA,IAAMC,YAAY,GAAG5B,kBAAkB,CAACuB,SAAD,CAAvC;AAEA,eAAeK,YAAf","sourcesContent":["//import {createStackNavigator} from '@react-navigation/stack';\n//import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createBottomTabNavigator } from \"react-navigation-tabs\";\nimport { createStackNavigator } from \"react-navigation-stack\";\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport {\n  View,\n  Button,\n  TextInput,\n  Text,\n  Alert,\n  StyleSheet,\n  Platform,\n} from \"react-native\";\n\n//import { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\nimport { createAppContainer, createSwitchNavigator } from \"react-navigation\";\nimport LogIn from \"../Screens/LogIn/LogIn\";\nimport Register from \"../Screens/LogIn/Register\";\nimport Profile from \"../Screens/Profile/Profile\";\nimport Home from \"../Screens/Home/Home\";\nimport MainScreen from \"../Screens/MainScreen\";\nimport EditProfile from \"../Screens/EditProfile/EditProfile\";\nimport ProfilePub from \"../Screens/Profile/profilePub\";\n\nimport Search from \"../Screens/Home/Search\";\n\nconst AppNavigator = () => {\n  return (\n    <Tab.Navigator\n      tabBar={(props) => (\n        <BottomTabBar\n          {...props}\n          state={{ ...props.state, routes: props.state.routes.slice(0, 4) }}\n        ></BottomTabBar>\n      )}\n    >\n      <Tab.Screen name=\"Page 1\" component={FeedScreen}></Tab.Screen>\n      <Tab.Screen name=\"Page 2\" component={LaunchScreen}></Tab.Screen>\n      <Tab.Screen name=\"Page 3\" component={MyEventsScreen}></Tab.Screen>\n      <Tab.Screen name=\"Page 4\" component={MyTicketsScreen}></Tab.Screen>\n      <Tab.Screen name=\"Search\" component={SearchScreen}></Tab.Screen>\n    </Tab.Navigator>\n  );\n};\n/*const AppNavigator = createBottomTabNavigator(\n  {\n    Home: {\n      screen: Home,\n    },\n    Profile: {\n      screen: Profile,\n    },\n    Search: {\n      screen: Search,\n    },\n    EditProfile: {\n      screen: EditProfile,\n    },\n  },\n  {\n  \n    animationEnabled: true,\n    swipeEnabled: true,\n    tabBarPosition: \"bottom\",\n    tabBarOptions: {\n      style: {\n        ...Platform.select({\n          android: {\n            backgroundColor: \"white\",\n          },\n        }),\n      },\n      activeTintColor: \"#000\",\n      inactiveTintColor: \"#d1cece\",\n      showLabel: false,\n      showIcon: true,\n    },\n  }\n);*/\n\nconst hiddenNavigator = createStackNavigator({\n  ProfilePub: {\n    screen: ProfilePub,\n  },\n});\n\nconst AuthNavigator = createStackNavigator({\n  LogIn: {\n    screen: LogIn,\n  },\n  Register: {\n    screen: Register,\n  },\n});\nconst AppSwitch = createSwitchNavigator(\n  {\n    Auth: AuthNavigator,\n    hidden: hiddenNavigator,\n    App: AppNavigator,\n  },\n  {\n    initialRouteName: \"Auth\",\n  }\n);\n\nconst AppContainer = createAppContainer(AppSwitch);\n\nexport default AppContainer;\n"]},"metadata":{},"sourceType":"module"}