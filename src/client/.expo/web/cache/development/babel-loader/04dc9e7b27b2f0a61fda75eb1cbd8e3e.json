{"ast":null,"code":"var timeDifference = function timeDifference(current, previous) {\n  var milliSecondsPerMinute = 60 * 1000;\n  var milliSecondsPerHour = milliSecondsPerMinute * 60;\n  var milliSecondsPerDay = milliSecondsPerHour * 24;\n  var milliSecondsPerMonth = milliSecondsPerDay * 30;\n  var milliSecondsPerYear = milliSecondsPerDay * 365;\n  var elapsed = current - previous;\n\n  if (elapsed < milliSecondsPerMinute / 3) {\n    return 'just now';\n  }\n\n  if (elapsed < milliSecondsPerMinute) {\n    return 'less than 1 min';\n  } else if (elapsed < milliSecondsPerHour) {\n    return Math.round(elapsed / milliSecondsPerMinute) + ' min';\n  } else if (elapsed < milliSecondsPerDay) {\n    return Math.round(elapsed / milliSecondsPerHour) + ' h';\n  } else if (elapsed < milliSecondsPerMonth) {\n    var days = Math.round(elapsed / milliSecondsPerDay);\n    return days + \" day\" + (days > 1 ? 's' : '');\n  } else if (elapsed < milliSecondsPerYear) {\n    return Math.round(elapsed / milliSecondsPerMonth) + ' mo';\n  } else {\n    return Math.round(elapsed / milliSecondsPerYear) + ' years';\n  }\n};\n\nvar timeDifferenceForDate = function timeDifferenceForDate(date) {\n  var now = new Date().getTime();\n  var updated = new Date(date).getTime();\n  return timeDifference(now, updated);\n};\n\nexport { timeDifference, timeDifferenceForDate };","map":{"version":3,"sources":["/Users/mac/devmob/InstaClone/src/Screens/Profile/utils/datetime.js"],"names":["timeDifference","current","previous","milliSecondsPerMinute","milliSecondsPerHour","milliSecondsPerDay","milliSecondsPerMonth","milliSecondsPerYear","elapsed","Math","round","days","timeDifferenceForDate","date","now","Date","getTime","updated"],"mappings":"AAAA,IAAMA,cAAc,GAAG,SAAjBA,cAAiB,CAACC,OAAD,EAAUC,QAAV,EAAuB;AAC5C,MAAMC,qBAAqB,GAAG,KAAK,IAAnC;AACA,MAAMC,mBAAmB,GAAGD,qBAAqB,GAAG,EAApD;AACA,MAAME,kBAAkB,GAAGD,mBAAmB,GAAG,EAAjD;AACA,MAAME,oBAAoB,GAAGD,kBAAkB,GAAG,EAAlD;AACA,MAAME,mBAAmB,GAAGF,kBAAkB,GAAG,GAAjD;AAEA,MAAMG,OAAO,GAAGP,OAAO,GAAGC,QAA1B;;AAEA,MAAIM,OAAO,GAAGL,qBAAqB,GAAG,CAAtC,EAAyC;AACvC,WAAO,UAAP;AACD;;AAED,MAAIK,OAAO,GAAGL,qBAAd,EAAqC;AACnC,WAAO,iBAAP;AACD,GAFD,MAEO,IAAIK,OAAO,GAAGJ,mBAAd,EAAmC;AACxC,WAAOK,IAAI,CAACC,KAAL,CAAWF,OAAO,GAAGL,qBAArB,IAA8C,MAArD;AACD,GAFM,MAEA,IAAIK,OAAO,GAAGH,kBAAd,EAAkC;AACvC,WAAOI,IAAI,CAACC,KAAL,CAAWF,OAAO,GAAGJ,mBAArB,IAA4C,IAAnD;AACD,GAFM,MAEA,IAAII,OAAO,GAAGF,oBAAd,EAAoC;AACzC,QAAIK,IAAI,GAAGF,IAAI,CAACC,KAAL,CAAWF,OAAO,GAAGH,kBAArB,CAAX;AACA,WAAUM,IAAV,aAAqBA,IAAI,GAAG,CAAP,GAAW,GAAX,GAAiB,EAAtC;AACD,GAHM,MAGA,IAAIH,OAAO,GAAGD,mBAAd,EAAmC;AACxC,WAAOE,IAAI,CAACC,KAAL,CAAWF,OAAO,GAAGF,oBAArB,IAA6C,KAApD;AACD,GAFM,MAEA;AACL,WAAOG,IAAI,CAACC,KAAL,CAAWF,OAAO,GAAGD,mBAArB,IAA4C,QAAnD;AACD;AACF,CA3BD;;AA6BA,IAAMK,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAAC,IAAI,EAAI;AACpC,MAAMC,GAAG,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAZ;AACA,MAAMC,OAAO,GAAG,IAAIF,IAAJ,CAASF,IAAT,EAAeG,OAAf,EAAhB;AAEA,SAAOhB,cAAc,CAACc,GAAD,EAAMG,OAAN,CAArB;AACD,CALD;;AAOA,SAASjB,cAAT,EAAyBY,qBAAzB","sourcesContent":["const timeDifference = (current, previous) => {\n  const milliSecondsPerMinute = 60 * 1000\n  const milliSecondsPerHour = milliSecondsPerMinute * 60\n  const milliSecondsPerDay = milliSecondsPerHour * 24\n  const milliSecondsPerMonth = milliSecondsPerDay * 30\n  const milliSecondsPerYear = milliSecondsPerDay * 365\n\n  const elapsed = current - previous\n\n  if (elapsed < milliSecondsPerMinute / 3) {\n    return 'just now'\n  }\n\n  if (elapsed < milliSecondsPerMinute) {\n    return 'less than 1 min'\n  } else if (elapsed < milliSecondsPerHour) {\n    return Math.round(elapsed / milliSecondsPerMinute) + ' min'\n  } else if (elapsed < milliSecondsPerDay) {\n    return Math.round(elapsed / milliSecondsPerHour) + ' h'\n  } else if (elapsed < milliSecondsPerMonth) {\n    let days = Math.round(elapsed / milliSecondsPerDay)\n    return `${days} day${days > 1 ? 's' : ''}`\n  } else if (elapsed < milliSecondsPerYear) {\n    return Math.round(elapsed / milliSecondsPerMonth) + ' mo'\n  } else {\n    return Math.round(elapsed / milliSecondsPerYear) + ' years'\n  }\n}\n\nconst timeDifferenceForDate = date => {\n  const now = new Date().getTime()\n  const updated = new Date(date).getTime()\n\n  return timeDifference(now, updated)\n}\n\nexport { timeDifference, timeDifferenceForDate }\n"]},"metadata":{},"sourceType":"module"}