{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/home/sanata/Desktop/InpGram/InstaClone/src/Screens/Profile/Profile.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport { TabView, TabBar, TabViewPagerScroll, TabViewPagerPan } from 'react-native-tab-view';\nimport PropTypes from 'prop-types';\nimport { image } from \"./utils\";\nimport profileStyles from \"./ProfileStyle\";\nexport var ImageProfil = require(\"./images/photo_cv.jpg\");\nvar styles = StyleSheet.create(_objectSpread({}, profileStyles));\nimport Posts from \"./Posts\";\nimport { connect } from 'react-redux';\nimport { NavigationContainer } from '@react-navigation/native';\nimport axios from 'axios';\n\nvar Profile = function (_Component) {\n  _inherits(Profile, _Component);\n\n  var _super = _createSuper(Profile);\n\n  function Profile(_props) {\n    var _this;\n\n    _classCallCheck(this, Profile);\n\n    _this = _super.call(this, _props);\n\n    _this.fetchUserDetails = function (user_id) {\n      console.log('dkhaaaal');\n      console.log(user_id);\n      axios({\n        method: 'post',\n        url: '/getUserDetails',\n        baseURL: 'http://localhost:3000',\n        data: {\n          userid: user_id\n        }\n      }).then(function (res) {\n        console.log(res);\n\n        _this.setState({\n          name: res.data.results[0].name\n        });\n\n        _this.setState({\n          username: res.data.results[0].username\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.stat = {\n      tabs: {\n        index: 0,\n        routes: [{\n          key: '1',\n          title: 'Posts',\n          count: 2\n        }, {\n          key: '2',\n          title: 'following',\n          count: '192 M'\n        }, {\n          key: '3',\n          title: 'followers',\n          count: '83'\n        }]\n      },\n      postsMasonry: {}\n    };\n\n    _this.onPressPlace = function () {\n      console.log('place');\n    };\n\n    _this.handleIndexChange = function (index) {\n      _this.setState({\n        tabs: _objectSpread(_objectSpread({}, _this.stat.tabs), {}, {\n          index: index\n        })\n      });\n    };\n\n    _this.renderTabBar = function (props) {\n      return React.createElement(TabBar, _extends({\n        indicatorStyle: styles.indicatorTab,\n        renderLabel: _this.renderLabel(props),\n        pressOpacity: 0.8,\n        style: styles.tabBar\n      }, props, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 12\n        }\n      }));\n    };\n\n    _this.renderLabel = function (props) {\n      return function (_ref) {\n        var route = _ref.route;\n        var routes = props.navigationState.routes;\n        var labels = [];\n        routes.forEach(function (e, index) {\n          labels.push(index === props.navigationState.index ? 'black' : 'gray');\n        });\n        var currentIndex = parseInt(route.key) - 1;\n        var color = labels[currentIndex];\n        return React.createElement(View, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 7\n          }\n        }, React.createElement(Animated.Text, {\n          style: [styles.tabLabelText, {\n            color: color\n          }],\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 9\n          }\n        }, route.count), React.createElement(Animated.Text, {\n          style: [styles.tabLabelNumber, {\n            color: color\n          }],\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 9\n          }\n        }, route.title));\n      };\n    };\n\n    _this.renderScene = function (_ref2) {\n      var key = _ref2.route.key;\n      var posts = _this.props.posts;\n\n      switch (key) {\n        case '1':\n        default:\n          return React.createElement(View, {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 16\n            }\n          });\n      }\n    };\n\n    _this.renderContactHeader = function () {\n      return React.createElement(View, {\n        style: styles.headerContainer,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.item,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.userRow,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 9\n        }\n      }, React.createElement(Image, {\n        style: styles.userImage,\n        source: ImageProfil,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 15\n        }\n      }))), React.createElement(View, {\n        style: styles.item2,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: {\n          height: 70,\n          marginTop: 10,\n          marginRight: 50\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }\n      }, React.createElement(Button, {\n        title: \"logout\",\n        onPress: function onPress() {\n          return _this.props.navigation.navigate('LogIn');\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }\n      }), React.createElement(Button, {\n        title: \"Edit Profile\",\n        onPress: function onPress() {\n          return _this.props.navigation.navigate('EditProfile');\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }\n      })), React.createElement(View, {\n        style: styles.userRow,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: styles.userNameRow,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 18\n        }\n      }, React.createElement(Text, {\n        style: styles.userNameText,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 23\n        }\n      }, _this.state.name)), React.createElement(View, {\n        style: styles.userNameRow,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 19\n        }\n      }, React.createElement(Text, {\n        style: styles.userNameText,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 23\n        }\n      }, \" \", _this.state.username)), React.createElement(View, {\n        style: styles.userBioRow,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 19\n        }\n      }, React.createElement(Text, {\n        style: styles.userBioText,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 24\n        }\n      }, \"ELEVE INGENIEUR\")))));\n    };\n\n    _this.renderMansonry2Col = function () {\n      return React.createElement(View, {\n        style: styles.masonryContainer,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 7\n        }\n      });\n    };\n\n    _this.state = {\n      authToken: _this.props.authToken,\n      id: _this.props.userDetails,\n      name: \"\",\n      username: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Profile, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      console.log('dkhaaaal');\n      this.fetchUserDetails(this.props.userDetails);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ScrollView, {\n        style: styles.scroll,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: [styles.container, this.props.containerStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.cardContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }\n      }, this.renderContactHeader(), React.createElement(TabView, {\n        style: [styles.tabContainer, this.props.tabContainerStyle],\n        navigationState: this.stat.tabs,\n        renderScene: this.renderScene,\n        renderTabBar: this.renderTabBar,\n        onIndexChange: this.handleIndexChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return Profile;\n}(Component);\n\nvar mapStatetoProps = function mapStatetoProps(state) {\n  return {\n    authToken: state.loginReducer.authToken,\n    userDetails: state.loginReducer.userDetails\n  };\n};\n\nexport default connect(mapStatetoProps)(Profile);","map":{"version":3,"sources":["/home/sanata/Desktop/InpGram/InstaClone/src/Screens/Profile/Profile.js"],"names":["React","Component","AsyncStorage","TabView","TabBar","TabViewPagerScroll","TabViewPagerPan","PropTypes","image","profileStyles","ImageProfil","require","styles","StyleSheet","create","Posts","connect","NavigationContainer","axios","Profile","props","fetchUserDetails","user_id","console","log","method","url","baseURL","data","userid","then","res","setState","name","results","username","catch","err","stat","tabs","index","routes","key","title","count","postsMasonry","onPressPlace","handleIndexChange","renderTabBar","indicatorTab","renderLabel","tabBar","route","navigationState","labels","forEach","e","push","currentIndex","parseInt","color","tabLabelText","tabLabelNumber","renderScene","posts","renderContactHeader","headerContainer","item","userRow","userImage","item2","height","marginTop","marginRight","navigation","navigate","userNameRow","userNameText","state","userBioRow","userBioText","renderMansonry2Col","masonryContainer","authToken","id","userDetails","scroll","container","containerStyle","cardContainer","tabContainer","tabContainerStyle","mapStatetoProps","loginReducer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Animated,Image, Button, ScrollView, StyleSheet,Text,View,AsyncStorage} from 'react-native';\n\n//import {AsyncStorage} from \"@react-native-community/async-storage\"\n//import { Icon } from 'react-native-elements'\n\nimport {\n  TabView,\n  TabBar,\n  TabViewPagerScroll,\n  TabViewPagerPan,\n} from 'react-native-tab-view'\nimport PropTypes from 'prop-types'\nimport { image } from './utils'\nimport profileStyles from './ProfileStyle'\nexport const ImageProfil = require('./images/photo_cv.jpg'); \nconst styles = StyleSheet.create({ ...profileStyles });\nimport Posts from './Posts'\nimport { connect } from 'react-redux';\nimport { NavigationContainer } from '@react-navigation/native'\nimport axios from'axios'\n\n\n\n \nclass Profile extends Component {\n\n  constructor(props){\n    super(props);\n      this.state={\n        authToken:this.props.authToken,  \n        id:this.props.userDetails,\n        name:\"\",\n        username:\"\"\n        \n      }\n      \n  }\n\n  fetchUserDetails= (user_id)=> {\n    console.log('dkhaaaal');\n    console.log(user_id);\n   /*axios.post(\"http://localhost:3000/getUserDetails\",{\n  params: {\n    userid: user_id\n  }})*/\n  axios({\n    method: 'post',\n    url: '/getUserDetails',\n    baseURL: 'http://localhost:3000',\n    data: { \n      userid: user_id\n     \n      }\n  })\n    .then(res=>{\n        console.log(res);\n        this.setState({name:res.data.results[0].name});\n        this.setState({username:res.data.results[0].username});\n        \n    })\n    .catch(err=>console.log(err))\n}\n\n/*ComponentDidMount () {\n  console.log('dkhaaaal'); \n    this.fetchUserDetails(this.props.userDetails);\n\n    //AsyncStorage.getItem('name').then((value)=> this.setState({'name':value}));\n   \n     //AsyncStorage.getItem('username').then((value)=> this.setState({'username':value}));\n    //AsyncStorage.getItem('website').then((value)=> this.setState({'website':value}));\n    //AsyncStorage.getItem('bio').then((value)=> this.setState({'bio':value}));\n\n  }*/\n\n\n/*useEffect(() => {\n  setTimeout(() => {\n    props.navigation.navigate(props.authToken ? 'App' : 'Auth');\n  }, 2000);\n}, []);*/\n\n\n\n    /*static propTypes = {\n        \n        bio: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired\n        \n      }\n\n  static defaultProps = {\n    containerStyle: {},\n    tabContainerStyle: {},\n  }*/\n\n  stat = {\n    tabs: {\n      index: 0,\n      routes: [\n        \n        { key: '1', title: 'Posts', count: 2},\n        { key: '2', title: 'following', count: '192 M' },\n        { key: '3', title: 'followers', count: '83' },\n      ],\n    },\n    postsMasonry: {},\n  }\n\n  onPressPlace = () => {\n    console.log('place')\n  }\n  componentWillMount() {\n    console.log('dkhaaaal');\n    this.fetchUserDetails(this.props.userDetails);\n    //this.setState({\n      //postsMasonry: image.mansonry(this.props.posts, 'imageHeight'),\n   // })\n  }\n  handleIndexChange = index => {\n    this.setState({\n      tabs: {\n        ...this.stat.tabs,\n        index,\n      },\n    })\n  }\n\n  renderTabBar = props => {\n    return <TabBar\n      indicatorStyle={styles.indicatorTab}\n      renderLabel={this.renderLabel(props)}\n      pressOpacity={0.8}\n      style={styles.tabBar}\n      {...props}\n    />\n  };\n\n  renderLabel = props => ({ route }) => {\n    const routes = props.navigationState.routes\n\n    let labels = []\n    routes.forEach((e, index) => {\n      labels.push(index === props.navigationState.index ? 'black' : 'gray')\n    })\n\n    const currentIndex = parseInt(route.key) - 1\n    const color = labels[currentIndex]\n\n    return (\n      <View>\n        <Animated.Text style={[styles.tabLabelText, { color }]}>\n          {route.count}\n        </Animated.Text>\n        <Animated.Text style={[styles.tabLabelNumber, { color }]}>\n          {route.title}\n        </Animated.Text>\n      </View>\n    )\n  }\n\n  renderScene = ({ route: { key } }) => {\n    const { posts } = this.props\n\n    switch (key) {\n        case '1':\n            //return this.renderMansonry2Col()\n      \n      default:\n        return <View />\n    }\n  }\n \n  renderContactHeader = () => {\n    //const { avatar, name, bio } = this.props\n\n    return (\n      <View style={styles.headerContainer}>\n        \n        <View style={styles.item}>\n        <View style={styles.userRow}>\n              <Image\n                style={styles.userImage}\n                source={ImageProfil}\n              />\n             </View>\n          </View>\n          \n          <View style={styles.item2}>\n            <View style={{ height: 70, marginTop: 10 , marginRight:50}}>\n            <Button\n          title=\"logout\" \n          onPress={() => this.props.navigation.navigate('LogIn')} \n        />\n            <Button\n          title=\"Edit Profile\" \n          onPress={() => this.props.navigation.navigate('EditProfile')} \n        />\n            </View>\n          \n          <View style={styles.userRow}>\n               \n               \n                \n                 <View style={styles.userNameRow}>\n                 \n                      <Text style={styles.userNameText}>{this.state.name}</Text>\n                  </View>\n                  <View style={styles.userNameRow}>\n                 \n                      <Text style={styles.userNameText}> {this.state.username}</Text>\n                  </View>\n                  <View style={styles.userBioRow}>\n                       <Text style={styles.userBioText}>ELEVE INGENIEUR</Text>\n                        \n                   </View>\n              </View>\n          </View> \n      </View>\n      \n    )\n  }\n  \n  renderMansonry2Col = () => {\n    return (\n      <View style={styles.masonryContainer}>\n        {/*<View>\n          <Posts\n            containerStyle={styles.sceneContainer}\n            posts={this.state.postsMasonry.leftCol}\n          />\n        </View>\n        <View>\n          <Posts\n            containerStyle={styles.sceneContainer}\n            posts={this.state.postsMasonry.rightCol}\n          />\n        </View>*/}\n      </View>\n    )\n  }\n  render() {\n    return (\n    \n  \n      <ScrollView style={styles.scroll}>\n        \n        <View style={[styles.container, this.props.containerStyle]}>\n          <View style={styles.cardContainer}>\n            {this.renderContactHeader()}\n            \n            <TabView\n              style={[styles.tabContainer, this.props.tabContainerStyle]}\n              navigationState={this.stat.tabs}\n              renderScene={this.renderScene}\n              renderTabBar={this.renderTabBar}\n              onIndexChange={this.handleIndexChange}\n            />\n          </View>\n        </View>\n      </ScrollView>\n    )\n  }\n}\n\n/*const mapStatetoProps=(state)=>{\n  return{\n    // id: state.loginReducer.authToken.id,\n      \n  }\n }*/\n \n const mapStatetoProps=(state)=>{\n  return{\n    authToken: state.loginReducer.authToken,\n    userDetails: state.loginReducer.userDetails,\n   \n  }\n }\n \n\n export default connect(mapStatetoProps) (Profile);"]},"metadata":{},"sourceType":"module"}