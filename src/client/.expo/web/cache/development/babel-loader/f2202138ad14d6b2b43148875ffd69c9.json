{"ast":null,"code":"var mongoose = require(\"mongoose\");\n\nvar Schema = mongoose.Schema;\nvar userSchema = new Schema({\n  id: mongoose.Schema.Types.ObjectId,\n  name: {\n    type: String,\n    trim: true,\n    required: true,\n    maxlength: [20, \"Name too long\"]\n  },\n  username: {\n    type: String,\n    trim: true,\n    required: true,\n    maxlength: [20, \"User name too long\"]\n  },\n  url: {\n    type: String,\n    trim: true\n  },\n  bio: {\n    type: String,\n    trim: true,\n    maxlength: [20, \"User name too long\"]\n  },\n  posts: {\n    type: Array,\n    default: {}\n  },\n  website: {\n    type: String,\n    trim: true,\n    maxlength: [20, \"User name too long\"]\n  },\n  password: {\n    type: String,\n    required: true\n  },\n  email: {\n    type: String,\n    required: true,\n    maxlength: [30, \"Email exceed the maximum length\"]\n  },\n  followers: {\n    type: Array,\n    default: []\n  },\n  following: {\n    type: Array,\n    default: []\n  }\n});\nvar User = mongoose.model(\"User\", userSchema);\nmodule.exports = User;","map":{"version":3,"sources":["/home/sanata/Desktop/InpGram/InstaClone/src/serveur/models/user.model.js"],"names":["mongoose","require","Schema","userSchema","id","Types","ObjectId","name","type","String","trim","required","maxlength","username","url","bio","posts","Array","default","website","password","email","followers","following","User","model","module","exports"],"mappings":"AAAA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AAGA,IAAMC,MAAM,GAAGF,QAAQ,CAACE,MAAxB;AAEA,IAAMC,UAAU,GAAG,IAAID,MAAJ,CAAW;AAC5BE,EAAAA,EAAE,EAAEJ,QAAQ,CAACE,MAAT,CAAgBG,KAAhB,CAAsBC,QADE;AAE5BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAEC,MADF;AAEJC,IAAAA,IAAI,EAAE,IAFF;AAGJC,IAAAA,QAAQ,EAAE,IAHN;AAIJC,IAAAA,SAAS,EAAE,CAAC,EAAD,EAAK,eAAL;AAJP,GAFsB;AAS5BC,EAAAA,QAAQ,EAAE;AACRL,IAAAA,IAAI,EAAEC,MADE;AAERC,IAAAA,IAAI,EAAE,IAFE;AAGRC,IAAAA,QAAQ,EAAE,IAHF;AAIRC,IAAAA,SAAS,EAAE,CAAC,EAAD,EAAK,oBAAL;AAJH,GATkB;AAgB5BE,EAAAA,GAAG,EAAE;AACHN,IAAAA,IAAI,EAAEC,MADH;AAEHC,IAAAA,IAAI,EAAE;AAFH,GAhBuB;AAuB5BK,EAAAA,GAAG,EAAE;AACHP,IAAAA,IAAI,EAAEC,MADH;AAEHC,IAAAA,IAAI,EAAE,IAFH;AAIHE,IAAAA,SAAS,EAAE,CAAC,EAAD,EAAK,oBAAL;AAJR,GAvBuB;AA8B5BI,EAAAA,KAAK,EAAE;AACLR,IAAAA,IAAI,EAAES,KADD;AAELC,IAAAA,OAAO,EAAE;AAFJ,GA9BqB;AAkC5BC,EAAAA,OAAO,EAAE;AACPX,IAAAA,IAAI,EAAEC,MADC;AAEPC,IAAAA,IAAI,EAAE,IAFC;AAIPE,IAAAA,SAAS,EAAE,CAAC,EAAD,EAAK,oBAAL;AAJJ,GAlCmB;AAyC5BQ,EAAAA,QAAQ,EAAE;AACRZ,IAAAA,IAAI,EAAEC,MADE;AAERE,IAAAA,QAAQ,EAAE;AAFF,GAzCkB;AA+C5BU,EAAAA,KAAK,EAAE;AACLb,IAAAA,IAAI,EAAEC,MADD;AAELE,IAAAA,QAAQ,EAAE,IAFL;AAGLC,IAAAA,SAAS,EAAE,CAAC,EAAD,EAAK,iCAAL;AAHN,GA/CqB;AAqD5BU,EAAAA,SAAS,EAAE;AACTd,IAAAA,IAAI,EAAES,KADG;AAETC,IAAAA,OAAO,EAAE;AAFA,GArDiB;AA0D5BK,EAAAA,SAAS,EAAE;AACTf,IAAAA,IAAI,EAAES,KADG;AAETC,IAAAA,OAAO,EAAE;AAFA;AA1DiB,CAAX,CAAnB;AAmEA,IAAMM,IAAI,GAAGxB,QAAQ,CAACyB,KAAT,CAAe,MAAf,EAAuBtB,UAAvB,CAAb;AACAuB,MAAM,CAACC,OAAP,GAAiBH,IAAjB","sourcesContent":["const mongoose = require(\"mongoose\");\n//require('mongoose-type-url');\n\nconst Schema = mongoose.Schema;\n\nconst userSchema = new Schema({\n  id: mongoose.Schema.Types.ObjectId,\n  name: {\n    type: String,\n    trim: true,\n    required: true,\n    maxlength: [20, \"Name too long\"],\n    //minlength: [3, \"Fist name too short\"]\n  },\n  username: {\n    type: String,\n    trim: true,\n    required: true,\n    maxlength: [20, \"User name too long\"],\n    //minlength: [3, \"Fist name too short\"]\n  },\n  url: {\n    type: String,\n    trim: true,\n    //required: true,\n    //maxlength: [5000, \"User name too long\"],\n    //minlength: [3, \"Fist name too short\"]\n  },\n  bio: {\n    type: String,\n    trim: true,\n    //required: true,\n    maxlength: [20, \"User name too long\"],\n    //minlength: [3, \"Fist name too short\"]\n  },\n  posts: {\n    type: Array,\n    default: {},\n  },\n  website: {\n    type: String,\n    trim: true,\n    //required: true,\n    maxlength: [20, \"User name too long\"],\n    //minlength: [3, \"Fist name too short\"]\n  },\n  password: {\n    type: String,\n    required: true,\n    //maxlength: [20, \"Password too long\"],\n    //minlength: [6, \"Password too short\"]\n  },\n  email: {\n    type: String,\n    required: true,\n    maxlength: [30, \"Email exceed the maximum length\"],\n    //minlength: [6, \"Email invalid\"]\n  },\n  followers: {\n    type: Array,\n    default: [],\n  },\n\n  following: {\n    type: Array,\n    default: [],\n  },\n});\n\n// virtual fields goes here\n\n// compile and export model from mongoose.Schema\nconst User = mongoose.model(\"User\", userSchema);\nmodule.exports = User;\n"]},"metadata":{},"sourceType":"script"}