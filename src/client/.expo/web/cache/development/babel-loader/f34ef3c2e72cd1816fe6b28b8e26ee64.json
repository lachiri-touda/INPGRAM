{"ast":null,"code":"import axios from 'axios';\nexport var UPLOAD_REQUEST = 'UPLOAD_REQUEST';\nexport var UPLOAD_SUCCESS = 'UPLOAD_SUCCESS';\nexport var UPLOAD_FAILURE = 'UPLOAD_FAILURE';\nexport var uploadRequest = function uploadRequest() {\n  return {\n    type: UPLOAD_REQUEST\n  };\n};\nexport var uploadSuccess = function uploadSuccess(signupData) {\n  return {\n    type: UPLOAD_SUCCESS,\n    payload: signupData\n  };\n};\nexport var uploadFailure = function uploadFailure(errMsg) {\n  return {\n    type: UPLOAD_FAILURE,\n    payload: errMsg\n  };\n};\nexport var uploadprofilephoto = function uploadprofilephoto(Data) {\n  return function (dispatch) {\n    dispatch(uploadRequest());\n    axios({\n      method: 'post',\n      url: '/uploadprofilephoto',\n      baseURL: 'http://localhost:3000',\n      data: {\n        id: Data.id,\n        url: Data.url\n      }\n    }).then(function (res) {\n      var message = res.data.message;\n      console.log(\"Status: \", res.status);\n      console.log(res.data);\n\n      if (message === 'POST UPLOADED') {\n        dispatch(uploadSuccess(Data));\n      } else {\n        console.log(message);\n        dispatch(uploadFailure(message));\n      }\n    }).catch(function (err) {\n      console.log(\"postsActions.js, upload Request Error: \", err.message);\n      dispatch(uploadFailure(\"Fail to Upload\"));\n    });\n  };\n};\nexport var uploadpost = function uploadpost(Data) {\n  return function (dispatch) {\n    dispatch(uploadRequest());\n    axios({\n      method: 'post',\n      url: '/uploadpost',\n      baseURL: 'http://localhost:3000',\n      data: {\n        id: Data.id,\n        urlpost: Data.urlpost\n      }\n    }).then(function (res) {\n      var message = res.data.message;\n      console.log(\"Status: \", res.status);\n      console.log(res.data);\n\n      if (message === 'POST UPLOADED') {\n        dispatch(uploadSuccess(Data));\n      } else {\n        console.log(message);\n        dispatch(uploadFailure(message));\n      }\n    }).catch(function (err) {\n      console.log(\"postsActions.js, upload Request Error: \", err.message);\n      dispatch(uploadFailure(\"Fail to Upload\"));\n    });\n  };\n};","map":{"version":3,"sources":["/home/amine/Bureau/InstaTouda/InstaClone/src/actions/postsActions.js"],"names":["axios","UPLOAD_REQUEST","UPLOAD_SUCCESS","UPLOAD_FAILURE","uploadRequest","type","uploadSuccess","signupData","payload","uploadFailure","errMsg","uploadprofilephoto","Data","dispatch","method","url","baseURL","data","id","then","res","message","console","log","status","catch","err","uploadpost","urlpost"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\n// action types\nexport const UPLOAD_REQUEST = 'UPLOAD_REQUEST';\nexport const UPLOAD_SUCCESS = 'UPLOAD_SUCCESS';\nexport const UPLOAD_FAILURE = 'UPLOAD_FAILURE';\n\n// action creators\nexport const uploadRequest = () => {\n  return {\n    type: UPLOAD_REQUEST,\n  }\n}\nexport const uploadSuccess = signupData => {\n  return {\n    type: UPLOAD_SUCCESS,\n    payload: signupData,\n  }\n}\nexport const uploadFailure = errMsg => {\n  return {\n    type: UPLOAD_FAILURE,\n    payload: errMsg,\n  }\n}\n\n// async impure action creator enabled by redux-thunk\nexport const uploadprofilephoto = (Data)=> {\n  \n  return   dispatch => {\n   dispatch(uploadRequest());\n    //const signupUri = 'http://localhost:3000/register';\n       axios({\n            method: 'post',\n            url: '/uploadprofilephoto',\n            baseURL: 'http://localhost:3000',\n            data: { \n              id:Data.id,  \n              url:Data.url\n              \n             \n              }\n          })\n      .then(res => {\n        const message=res.data.message;\n        console.log(\"Status: \", res.status);\n        console.log(res.data);\n        if(message==='POST UPLOADED'){\n\n          dispatch(uploadSuccess(Data));\n        }\n        else{\n          console.log(message);\n          dispatch(uploadFailure(message));\n\n\n        }\n        \n      })\n      .catch(err => {\n        console.log(\"postsActions.js, upload Request Error: \", err.message);\n        dispatch(uploadFailure(\"Fail to Upload\"));\n      });\n  }\n}\nexport const uploadpost = (Data)=> {\n  \n  return   dispatch => {\n   dispatch(uploadRequest());\n    //const signupUri = 'http://localhost:3000/register';\n       axios({\n            method: 'post',\n            url: '/uploadpost',\n            baseURL: 'http://localhost:3000',\n            data: { \n              id:Data.id,  \n              urlpost:Data.urlpost\n              \n             \n              }\n          })\n      .then(res => {\n        const message=res.data.message;\n        console.log(\"Status: \", res.status);\n        console.log(res.data);\n        if(message==='POST UPLOADED'){\n\n          dispatch(uploadSuccess(Data));\n        }\n        else{\n          console.log(message);\n          dispatch(uploadFailure(message));\n\n\n        }\n        \n      })\n      .catch(err => {\n        console.log(\"postsActions.js, upload Request Error: \", err.message);\n        dispatch(uploadFailure(\"Fail to Upload\"));\n      });\n  }\n}"]},"metadata":{},"sourceType":"module"}