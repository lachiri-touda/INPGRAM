{"ast":null,"code":"import axios from 'axios';\nimport swal from \"sweetalert\";\nexport var SIGNUP_REQUEST = 'SIGNUP_REQUEST';\nexport var SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\nexport var SIGNUP_FAILURE = 'SIGNUP_FAILURE';\nexport var signupRequest = function signupRequest() {\n  return {\n    type: SIGNUP_REQUEST\n  };\n};\nexport var signupSuccess = function signupSuccess(signupData) {\n  return {\n    type: SIGNUP_SUCCESS,\n    payload: signupData\n  };\n};\nexport var signupFailure = function signupFailure(errMsg) {\n  return {\n    type: SIGNUP_FAILURE,\n    payload: errMsg\n  };\n};\nexport var signup = function signup(signupData) {\n  return function (dispatch) {\n    dispatch(signupRequest());\n    axios({\n      method: \"post\",\n      url: \"/register\",\n      baseURL: \"http://localhost:3000\",\n      data: {\n        username: signupData.username,\n        email: signupData.email,\n        password: signupData.password\n      }\n    }).then(function (res) {\n      var message = res.data.message;\n      swal({\n        title: res.data,\n        icon: \"warning\"\n      });\n\n      if (message === \"User added\") {\n        dispatch(signupSuccess(signupData));\n      } else {\n        console.log(message);\n        dispatch(signupFailure(message));\n      }\n    }).catch(function (err) {\n      console.log(\"signupActions.js, Signup Request Error: \", err.message);\n      dispatch(signupFailure(\"Fail to Sign Up\"));\n    });\n  };\n};","map":{"version":3,"sources":["/home/sanata/Desktop/InpGram/InstaClone/src/actions/signupActions.js"],"names":["axios","swal","SIGNUP_REQUEST","SIGNUP_SUCCESS","SIGNUP_FAILURE","signupRequest","type","signupSuccess","signupData","payload","signupFailure","errMsg","signup","dispatch","method","url","baseURL","data","username","email","password","then","res","message","title","icon","console","log","catch","err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AAGA,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AAGP,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACjC,SAAO;AACLC,IAAAA,IAAI,EAAEJ;AADD,GAAP;AAGD,CAJM;AAKP,OAAO,IAAMK,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,UAAU,EAAI;AACzC,SAAO;AACLF,IAAAA,IAAI,EAAEH,cADD;AAELM,IAAAA,OAAO,EAAED;AAFJ,GAAP;AAID,CALM;AAMP,OAAO,IAAME,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,MAAM,EAAI;AACrC,SAAO;AACLL,IAAAA,IAAI,EAAEF,cADD;AAELK,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID,CALM;AAQP,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACJ,UAAD,EAAe;AAEnC,SAAS,UAAAK,QAAQ,EAAI;AACpBA,IAAAA,QAAQ,CAACR,aAAa,EAAd,CAAR;AAEIL,IAAAA,KAAK,CAAC;AACJc,MAAAA,MAAM,EAAE,MADJ;AAEJC,MAAAA,GAAG,EAAE,WAFD;AAGJC,MAAAA,OAAO,EAAE,uBAHL;AAIJC,MAAAA,IAAI,EAAE;AAEJC,QAAAA,QAAQ,EAAEV,UAAU,CAACU,QAFjB;AAGJC,QAAAA,KAAK,EAAEX,UAAU,CAACW,KAHd;AAIJC,QAAAA,QAAQ,EAAEZ,UAAU,CAACY;AAJjB;AAJF,KAAD,CAAL,CAWGC,IAXH,CAWQ,UAACC,GAAD,EAAS;AACb,UAAMC,OAAO,GAAGD,GAAG,CAACL,IAAJ,CAASM,OAAzB;AACAtB,MAAAA,IAAI,CAAC;AACHuB,QAAAA,KAAK,EAAEF,GAAG,CAACL,IADR;AAGHQ,QAAAA,IAAI,EAAE;AAHH,OAAD,CAAJ;;AAKA,UAAIF,OAAO,KAAK,YAAhB,EAA8B;AAC5BV,QAAAA,QAAQ,CAACN,aAAa,CAACC,UAAD,CAAd,CAAR;AACD,OAFD,MAEO;AACLkB,QAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACAV,QAAAA,QAAQ,CAACH,aAAa,CAACa,OAAD,CAAd,CAAR;AACD;AACF,KAxBH,EAyBGK,KAzBH,CAyBS,UAACC,GAAD,EAAS;AACdH,MAAAA,OAAO,CAACC,GAAR,CAAY,0CAAZ,EAAwDE,GAAG,CAACN,OAA5D;AACAV,MAAAA,QAAQ,CAACH,aAAa,CAAC,iBAAD,CAAd,CAAR;AACD,KA5BH;AA6BJ,GAhCD;AAiCD,CAnCM","sourcesContent":["import axios from 'axios';\nimport swal from \"sweetalert\";\n\n// action types\nexport const SIGNUP_REQUEST = 'SIGNUP_REQUEST';\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\nexport const SIGNUP_FAILURE = 'SIGNUP_FAILURE';\n\n// action creators\nexport const signupRequest = () => {\n  return {\n    type: SIGNUP_REQUEST,\n  }\n}\nexport const signupSuccess = signupData => {\n  return {\n    type: SIGNUP_SUCCESS,\n    payload: signupData,\n  }\n}\nexport const signupFailure = errMsg => {\n  return {\n    type: SIGNUP_FAILURE,\n    payload: errMsg,\n  }\n}\n\n// async impure action creator enabled by redux-thunk\nexport const signup = (signupData)=> {\n  \n  return   dispatch => {\n   dispatch(signupRequest());\n    //const signupUri = 'http://localhost:3000/register';\n       axios({\n         method: \"post\",\n         url: \"/register\",\n         baseURL: \"http://localhost:3000\",\n         data: {\n           //name:signupData.name,\n           username: signupData.username,\n           email: signupData.email,\n           password: signupData.password,\n         },\n       })\n         .then((res) => {\n           const message = res.data.message;\n           swal({\n             title: res.data,\n             //text: ,\n             icon: \"warning\",\n           });\n           if (message === \"User added\") {\n             dispatch(signupSuccess(signupData));\n           } else {\n             console.log(message);\n             dispatch(signupFailure(message));\n           }\n         })\n         .catch((err) => {\n           console.log(\"signupActions.js, Signup Request Error: \", err.message);\n           dispatch(signupFailure(\"Fail to Sign Up\"));\n         });\n  }\n}"]},"metadata":{},"sourceType":"module"}