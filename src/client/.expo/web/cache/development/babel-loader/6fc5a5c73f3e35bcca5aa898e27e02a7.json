{"ast":null,"code":"import axios from \"axios\";\nimport { baseURL } from \"../constants\";\nexport var UPLOAD_REQUEST = \"UPLOAD_REQUEST\";\nexport var UPLOAD_SUCCESS = \"UPLOAD_SUCCESS\";\nexport var UPLOAD_FAILURE = \"UPLOAD_FAILURE\";\nexport var EDIT_POST = \"EDIT_POST\";\nexport var MODIFY_POST = \"MODIFY_POST\";\nexport var uploadRequest = function uploadRequest() {\n  return {\n    type: UPLOAD_REQUEST\n  };\n};\nexport var editPost = function editPost(postdata) {\n  return {\n    type: EDIT_POST,\n    payload: postdata\n  };\n};\nexport var modifyPost = function modifyPost(postdata) {\n  return {\n    type: MODIFY_POST,\n    payload: postdata\n  };\n};\nexport var uploadSuccess = function uploadSuccess(signupData) {\n  return {\n    type: UPLOAD_SUCCESS,\n    payload: signupData\n  };\n};\nexport var uploadFailure = function uploadFailure(errMsg) {\n  return {\n    type: UPLOAD_FAILURE,\n    payload: errMsg\n  };\n};\nexport var uploadprofilephoto = function uploadprofilephoto(Data) {\n  return function (dispatch) {\n    dispatch(uploadRequest());\n    axios({\n      method: \"post\",\n      url: \"/uploadprofilephoto\",\n      baseURL: baseURL,\n      data: {\n        id: Data.userid,\n        url: Data.urlpost\n      }\n    }).then(function (res) {\n      var message = res.data.message;\n\n      if (message === \"POST UPLOADED\") {\n        dispatch(uploadSuccess(Data));\n      } else {\n        dispatch(uploadFailure(message));\n      }\n    }).catch(function (err) {\n      console.log(\"postsActions.js, upload Request Error: \", err.message);\n      dispatch(uploadFailure(\"Fail to Upload\"));\n    });\n  };\n};\nexport var editpost = function editpost(postdata) {\n  return function (dispatch) {\n    console.log(\"hna\");\n    console.log(postdata);\n    dispatch(editPost(postdata));\n  };\n};\nexport var modifypost = function modifypost(postdata) {\n  var postdataa = postdata;\n  console.log(postdataa.postid);\n  return function (dispatch) {\n    dispatch(modifyPost(postdataa));\n    axios({\n      method: \"post\",\n      url: \"/UpdatePost\",\n      baseURL: baseURL,\n      data: {\n        userid: postdataa.userid,\n        postid: postdataa.postid,\n        description: postdataa.description\n      }\n    }).then(function (res) {\n      var message = res.data.message;\n\n      if (res.data.value) {\n        console.log(message);\n      }\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  };\n};","map":{"version":3,"sources":["/home/sanata/Desktop/InpGram/InstaClone/src/client/actions/postsActions.js"],"names":["axios","baseURL","UPLOAD_REQUEST","UPLOAD_SUCCESS","UPLOAD_FAILURE","EDIT_POST","MODIFY_POST","uploadRequest","type","editPost","postdata","payload","modifyPost","uploadSuccess","signupData","uploadFailure","errMsg","uploadprofilephoto","Data","dispatch","method","url","data","id","userid","urlpost","then","res","message","catch","err","console","log","editpost","modifypost","postdataa","postid","description","value"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { baseURL } from \"../constants\";\n\n// action types\nexport const UPLOAD_REQUEST = \"UPLOAD_REQUEST\";\nexport const UPLOAD_SUCCESS = \"UPLOAD_SUCCESS\";\nexport const UPLOAD_FAILURE = \"UPLOAD_FAILURE\";\nexport const EDIT_POST = \"EDIT_POST\";\nexport const MODIFY_POST = \"MODIFY_POST\";\n// action creators\nexport const uploadRequest = () => {\n  return {\n    type: UPLOAD_REQUEST,\n  };\n};\nexport const editPost = (postdata) => {\n  return {\n    type: EDIT_POST,\n    payload: postdata,\n  };\n};\nexport const modifyPost = (postdata) => {\n  return {\n    type: MODIFY_POST,\n    payload: postdata,\n  };\n};\nexport const uploadSuccess = (signupData) => {\n  return {\n    type: UPLOAD_SUCCESS,\n    payload: signupData,\n  };\n};\nexport const uploadFailure = (errMsg) => {\n  return {\n    type: UPLOAD_FAILURE,\n    payload: errMsg,\n  };\n};\n\n// async impure action creator enabled by redux-thunk\nexport const uploadprofilephoto = (Data) => {\n  return (dispatch) => {\n    dispatch(uploadRequest());\n    //const signupUri = 'http://localhost:3000/register';\n    axios({\n      method: \"post\",\n      url: \"/uploadprofilephoto\",\n      baseURL: baseURL,\n      data: {\n        id: Data.userid,\n        url: Data.urlpost,\n      },\n    })\n      .then((res) => {\n        const message = res.data.message;\n        if (message === \"POST UPLOADED\") {\n          dispatch(uploadSuccess(Data));\n        } else {\n          dispatch(uploadFailure(message));\n        }\n      })\n      .catch((err) => {\n        console.log(\"postsActions.js, upload Request Error: \", err.message);\n        dispatch(uploadFailure(\"Fail to Upload\"));\n      });\n  };\n};\n\nexport const editpost = (postdata) => {\n  return (dispatch) => {\n    console.log(\"hna\");\n    console.log(postdata);\n    dispatch(editPost(postdata));\n  };\n};\n\nexport const modifypost = (postdata) => {\n  const postdataa = postdata;\n  console.log(postdataa.postid);\n  return (dispatch) => {\n    dispatch(modifyPost(postdataa));\n    axios({\n      method: \"post\",\n      url: \"/UpdatePost\",\n      baseURL: baseURL,\n      data: {\n        userid: postdataa.userid,\n        postid: postdataa.postid,\n        description: postdataa.description,\n      },\n    })\n      .then((res) => {\n        //console.log(res)\n        const message = res.data.message;\n\n        if (res.data.value) {\n          console.log(message);\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n};\n"]},"metadata":{},"sourceType":"module"}