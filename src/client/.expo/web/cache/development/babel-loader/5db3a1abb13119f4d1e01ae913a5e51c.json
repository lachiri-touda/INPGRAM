{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/home/sanata/Desktop/InpGram/InstaClone/src/Screens/Home/Home.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport AuthStyle from \"./AuthStyle\";\nimport { connect } from 'react-redux';\nvar styles1 = StyleSheet.create(_objectSpread({}, AuthStyle));\n\nfunction Home(props) {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      filtredData = _useState2[0],\n      setfilteredData = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      masterData = _useState4[0],\n      setmasterData = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      search = _useState6[0],\n      setsearch = _useState6[1];\n\n  useEffect(function () {\n    fetchUsers();\n    return function () {};\n  }, []);\n\n  var fetchUsers = function fetchUsers() {\n    var apiURL = 'https://jsonplaceholder.typicode.com/posts';\n    fetch(apiURL).then(function (response) {\n      return response.json();\n    }).then(function (responseJson) {\n      setfilteredData(responseJson);\n      setmasterData(responseJson);\n    }).catch(function (error) {\n      console.error(error);\n    });\n  };\n\n  var searchFilter = function searchFilter(text) {\n    if (text) {\n      var newData = masterData.filter(function (item) {\n        var itemData = item.title ? item.title.toUpperCase() : ''.toUpperCase();\n        var textData = text.toUpperCase();\n        return itemData.indexOf(textData) > -1;\n      });\n      setfilteredData(newData);\n      setsearch(text);\n    }\n  };\n\n  var ItemView = function ItemView(_ref) {\n    var item = _ref.item;\n    return React.createElement(Text, {\n      style: styles.itemStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, item.id, '. ', item.title.toUpperCase());\n  };\n\n  var ItemSeparatorView = function ItemSeparatorView() {\n    return React.createElement(View, {\n      style: {\n        height: 0.5,\n        width: '100%',\n        backgroundColor: '#c8c8c8'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    });\n  };\n\n  return React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, React.createElement(Header, {\n    searchBar: true,\n    rounded: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, React.createElement(Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, React.createElement(Icon, {\n    name: \"ios-search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }), React.createElement(Icon, {\n    name: \"ios-people\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  })), React.createElement(Button, {\n    transparent: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, \"Search\"))));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'white'\n  },\n  itemStyle: {\n    padding: 10\n  },\n  textInputStyle: {\n    height: 50,\n    borderWidth: 1,\n    paddingLeft: 20,\n    margin: 5,\n    borderColor: '#009688',\n    backgroundColor: 'white'\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    authToken: state.loginReducer.authToken\n  };\n};\n\nexport default connect(mapStateToProps)(Home);","map":{"version":3,"sources":["/home/sanata/Desktop/InpGram/InstaClone/src/Screens/Home/Home.js"],"names":["React","useState","useRef","useEffect","AuthStyle","connect","styles1","StyleSheet","create","Home","props","filtredData","setfilteredData","masterData","setmasterData","search","setsearch","fetchUsers","apiURL","fetch","then","response","json","responseJson","catch","error","console","searchFilter","text","newData","filter","item","itemData","title","toUpperCase","textData","indexOf","ItemView","styles","itemStyle","id","ItemSeparatorView","height","width","backgroundColor","container","padding","textInputStyle","borderWidth","paddingLeft","margin","borderColor","mapStateToProps","state","authToken","loginReducer"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport {SafeAreaView,View,Button,TextInput,Text,Alert,StyleSheet, FlatList } from 'react-native'\nimport AuthStyle from './AuthStyle'\nimport { connect } from 'react-redux';\nconst styles1 = StyleSheet.create({ ...AuthStyle})\n\n\n\nfunction Home(props) {\n\n    const [filtredData,setfilteredData] = useState([]);\n    const [masterData,setmasterData] = useState([]);\n    const [search, setsearch] = useState('')\n\n    useEffect(() => {\n        fetchUsers();\n        return () =>{\n\n        }\n    },[])\n\n    const fetchUsers = () => {\n    const apiURL = 'https://jsonplaceholder.typicode.com/posts'\n    fetch(apiURL)\n    .then((response) => response.json())\n    .then((responseJson) => {\n        setfilteredData(responseJson)\n        setmasterData(responseJson)\n    }).catch((error) => {\n        console.error(error)\n    })\n    }\n\n    const searchFilter = (text) =>{\n        if (text) {\n            const newData = masterData.filter((item) => {\n                const itemData = item.title ? item.title.toUpperCase()\n                            :''.toUpperCase();\n                const textData = text.toUpperCase();\n                return itemData.indexOf(textData)> -1;\n            });\n            setfilteredData(newData);\n            setsearch(text);     \n        }\n    }\n\n\n    const ItemView=({item}) =>{\n        return (\n            <Text style={styles.itemStyle}>\n                {item.id}{'. '}{item.title.toUpperCase()}\n            </Text>\n        )\n    }\n\n    const ItemSeparatorView = () => {\n        return(\n            <View\n                style={{height : 0.5 , width:'100%' ,backgroundColor:'#c8c8c8'}}\n            />\n        )\n    }\n    \n\n    return (\n        <Container>\n        <Header searchBar rounded>\n          <Item>\n            <Icon name=\"ios-search\" />\n            <Input placeholder=\"Search\" />\n            <Icon name=\"ios-people\" />\n          </Item>\n          <Button transparent>\n            <Text>Search</Text>\n          </Button>\n        </Header>\n      </Container>\n            \n        /*<SafeAreaView style={{flex: 1}}>\n             <View style={styles.container}>\n                <TextInput\n                    style={styles.textInputStyle}\n                    value={search}\n                    placeholder=\"Search with Pseudo\"\n                    underlineColorAndroid=\"transparant\"\n                    onChangeText={(text) => searchFilter(text)}\n                />\n                <FlatList\n                    data={filtredData}\n                    keyExtractor={(item,index) => index.toString()}\n                    ItemSeparatorComponent={ItemSeparatorView}\n                    renderItem={ItemView}\n                />\n             </View>\n        </SafeAreaView>*/\n\n\n        /*View style={styles.container}>\n            <Text> {props.authToken}</Text>\n            <Button\n                onPress={() => props.navigation.navigate('Profile')} \n                title=\"Profil\"  \n            />  \n             <Button\n                onPress={() => props.navigation.navigate('LogIn')} \n                title=\"Retour\"  \n            />                          \n        </View>*/\n       \n    );\n}\n\n\nconst styles= StyleSheet.create({\n    container:{\n        backgroundColor:'white',\n    },\n    itemStyle:{\n        padding:10\n    },\n    textInputStyle:{\n        height: 50,\n        borderWidth: 1,\n        paddingLeft: 20,\n        margin: 5,\n        borderColor: '#009688',\n        backgroundColor:'white'\n      },\n\n});\n\nconst mapStateToProps = state => {\n    return {\n        authToken: state.loginReducer.authToken,\n    }\n  }\n\n \n   \nexport default connect(mapStateToProps)(Home);"]},"metadata":{},"sourceType":"module"}