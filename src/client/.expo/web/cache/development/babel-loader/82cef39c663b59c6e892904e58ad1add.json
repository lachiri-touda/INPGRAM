{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/home/sanata/Desktop/InpGram/InstaClone/src/Screens/LogIn/LogIn.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\n\nvar axios = require(\"axios\");\n\nimport { connect } from \"react-redux\";\nimport AuthStyle from \"./AuthStyle\";\nvar styles = StyleSheet.create(_objectSpread({}, AuthStyle));\nimport { isLogedIn } from \"../../actions/AuthActions\";\nimport { login as _login } from \"../../actions/loginActions\";\n\nfunction LogIn(props) {\n  var IslogedInf = function IslogedInf() {\n    var token;\n    return _regeneratorRuntime.async(function IslogedInf$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"token\"));\n\n          case 2:\n            token = _context.sent;\n            console.log(token);\n\n            if (token) {\n              props.navigation.navigate(\"Profile\");\n            }\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      putEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      putPassword = _useState4[1];\n\n  var didMountRef = useRef(false);\n  useEffect(function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(isLogedIn());\n\n          case 2:\n            val = _context2.sent;\n            console.log(val);\n            console.log(\"loginScreen.js, props.isAuth: \", props.isAuth);\n            console.log(\"loginScreen.js, props.isLoading: \", props.isLoading);\n\n            if (didMountRef.current) {\n              if (props.isAuth) {\n                props.navigation.navigate(\"Home\");\n              } else if (!props.isAuth && !props.isLoading) {\n                Alert.alert(props.errMsg);\n              }\n            } else {\n              didMountRef.current = true;\n            }\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, [props.isAuth, props.isLoading]);\n\n  var loginHandler = function loginHandler() {\n    var loginData = {\n      email: email,\n      password: password\n    };\n    props.login(loginData);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, \"INPGRAM \"), React.createElement(Text, {\n    style: styles.titleText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, \"Login\"), React.createElement(TextInput, {\n    style: styles.TextInput,\n    placeholder: \"Email\",\n    id: \"email\",\n    onChangeText: function onChangeText(text) {\n      return putEmail(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    style: styles.TextInput,\n    id: \"password\",\n    placeholder: \"Password\",\n    secureTextEntry: true,\n    onChangeText: function onChangeText(text) {\n      return putPassword(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    onPress: loginHandler,\n    title: \"Log In\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    onPress: function onPress() {\n      return props.navigation.navigate(\"Register\");\n    },\n    title: \"Sign Up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    onPress: function onPress() {\n      return props.navigation.navigate(\"Home\");\n    },\n    title: \"Passage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isLoading: state.loginReducer.isLoading,\n    isAuth: state.loginReducer.isAuth,\n    errMsg: state.loginReducer.errMsg\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    login: function login(loginData) {\n      return dispatch(_login(loginData));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LogIn);","map":{"version":3,"sources":["/home/sanata/Desktop/InpGram/InstaClone/src/Screens/LogIn/LogIn.js"],"names":["React","useState","useRef","useEffect","axios","require","connect","AuthStyle","styles","StyleSheet","create","isLogedIn","login","LogIn","props","IslogedInf","AsyncStorage","getItem","token","console","log","navigation","navigate","email","putEmail","password","putPassword","didMountRef","val","isAuth","isLoading","current","Alert","alert","errMsg","loginHandler","loginData","container","title","titleText","TextInput","text","mapStateToProps","state","loginReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport { View, Button, TextInput, Text, Alert, StyleSheet } from \"react-native\";\nconst axios = require(\"axios\");\nimport { connect } from \"react-redux\";\nimport AuthStyle from \"./AuthStyle\";\nconst styles = StyleSheet.create({ ...AuthStyle });\nimport { isLogedIn } from \"../../actions/AuthActions\";\nimport { login } from \"../../actions/loginActions\";\n\nfunction LogIn(props) {\n  const IslogedInf = async () => {\n    const token = await AsyncStorage.getItem(\"token\");\n    console.log(token);\n    if (token) {\n      props.navigation.navigate(\"Profile\");\n    }\n  };\n\n  const [email, putEmail] = useState(\"\");\n  const [password, putPassword] = useState(\"\");\n\n  // useRef hook to check whether the component has just mounted or updated\n  // Link: https://dev.to/savagepixie/how-to-mimic-componentdidupdate-with-react-hooks-3j8c\n  const didMountRef = useRef(false);\n  // useEffect()to check if states have changed\n  // 2nd argument is the list of states you want to watch for\n  useEffect(async () => {\n    val = await isLogedIn();\n    console.log(val);\n    console.log(\"loginScreen.js, props.isAuth: \", props.isAuth);\n    console.log(\"loginScreen.js, props.isLoading: \", props.isLoading);\n    if (didMountRef.current) {\n      // if login success, go to home screen\n      if (props.isAuth) {\n        props.navigation.navigate(\"Home\");\n      } else if (!props.isAuth && !props.isLoading) {\n        Alert.alert(props.errMsg);\n      }\n    } else {\n      didMountRef.current = true;\n    }\n  }, [props.isAuth, props.isLoading]);\n\n  // this function make sure props.login() only be called once\n  const loginHandler = () => {\n    const loginData = {\n      email: email,\n      password: password,\n    };\n    // calling login() dispatch function\n    props.login(loginData);\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>INPGRAM </Text>\n      <Text style={styles.titleText}>Login</Text>\n      <TextInput\n        style={styles.TextInput}\n        placeholder=\"Email\"\n        id=\"email\"\n        onChangeText={(text) => putEmail(text)}\n      />\n      <TextInput\n        style={styles.TextInput}\n        id=\"password\"\n        placeholder=\"Password\"\n        secureTextEntry={true}\n        onChangeText={(text) => putPassword(text)}\n      />\n\n      <Button onPress={loginHandler} title=\"Log In\" />\n      <Button\n        onPress={() => props.navigation.navigate(\"Register\")}\n        title=\"Sign Up\"\n      />\n      <Button\n        onPress={() => props.navigation.navigate(\"Home\")}\n        title=\"Passage\"\n      />\n    </View>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    // only map needed states here\n    isLoading: state.loginReducer.isLoading,\n    isAuth: state.loginReducer.isAuth,\n    errMsg: state.loginReducer.errMsg,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    // only map needed dispatches here\n    login: (loginData) => dispatch(login(loginData)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LogIn);\n"]},"metadata":{},"sourceType":"module"}