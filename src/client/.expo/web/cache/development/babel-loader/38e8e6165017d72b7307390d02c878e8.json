{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/home/sanata/Desktop/InpGram/InstaClone/src/client/Screens/LogIn/LogIn.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\n\nvar axios = require(\"axios\");\n\nimport { connect } from \"react-redux\";\nimport AuthStyle from \"./style/AuthStyle\";\nvar styles = StyleSheet.create(_objectSpread({}, AuthStyle));\nimport { isLogedIn } from \"../../actions/AuthActions\";\nimport { login as _login } from \"../../actions/loginActions\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { COLORS, SIZES, FONTS } from \"../../constants\";\n\nfunction LogIn(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      putEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      putPassword = _useState4[1];\n\n  var didMountRef = useRef(false);\n  useEffect(function () {\n    console.log(\"loginScreen.js, props.isAuth: \", props.isAuth);\n    console.log(\"loginScreen.js, props.isLoading: \", props.isLoading);\n\n    if (didMountRef.current) {\n      if (props.isAuth) {\n        props.navigation.navigate(\"Home\");\n      } else if (!props.isAuth && !props.isLoading) {}\n    } else {\n      didMountRef.current = true;\n    }\n  }, [props.isAuth, props.isLoading]);\n\n  var loginHandler = function loginHandler() {\n    var loginData = {\n      email: email,\n      password: password\n    };\n    props.login(loginData);\n  };\n\n  function renderLogo() {\n    return React.createElement(View, {\n      style: {\n        marginTop: SIZES.padding * 2,\n        height: 100,\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, React.createElement(Image, {\n      source: images.logo,\n      resizeMode: \"contain\",\n      style: {\n        width: \"60%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  function renderButton(text, onPress) {\n    return React.createElement(View, {\n      style: {\n        margin: SIZES.padding * 0.5,\n        alignItems: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }\n    }, React.createElement(TouchableOpacity, {\n      style: {\n        height: 60,\n        width: 250,\n        backgroundColor: COLORS.black,\n        borderRadius: SIZES.radius / 0.2,\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      onPress: onPress,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: _objectSpread({\n        color: COLORS.white\n      }, FONTS.h3),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, text)));\n  }\n\n  return React.createElement(KeyboardAvoidingView, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, React.createElement(LinearGradient, {\n    colors: [COLORS.primary, COLORS.primary],\n    style: {\n      flex: 1,\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: _objectSpread({\n      marginTop: 20,\n      marginBottom: 35,\n      marginTop: 35,\n      textAlign: \"center\",\n      color: \"#bc6c25\"\n    }, FONTS.h1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, \"INPgram\"), React.createElement(Text, {\n    style: styles.titleText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, \"Login\"), React.createElement(View, {\n    style: {\n      marginBottom: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    style: styles.TextInput,\n    placeholder: \"Email\",\n    id: \"email\",\n    onChangeText: function onChangeText(text) {\n      return putEmail(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }\n  }), React.createElement(TextInput, {\n    style: styles.TextInput,\n    id: \"password\",\n    placeholder: \"Password\",\n    secureTextEntry: true,\n    onChangeText: function onChangeText(text) {\n      return putPassword(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 15\n    }\n  })), renderButton(\"LogIn\", loginHandler), renderButton(\"SignUp\", function () {\n    return props.navigation.navigate(\"Register\");\n  }), renderButton(\"Passage\", function () {\n    return props.navigation.navigate(\"Home\");\n  })))));\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isLoading: state.loginReducer.isLoading,\n    isAuth: state.loginReducer.isAuth,\n    errMsg: state.loginReducer.errMsg\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    login: function login(loginData) {\n      return dispatch(_login(loginData));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LogIn);","map":{"version":3,"sources":["/home/sanata/Desktop/InpGram/InstaClone/src/client/Screens/LogIn/LogIn.js"],"names":["React","useState","useRef","useEffect","axios","require","connect","AuthStyle","styles","StyleSheet","create","isLogedIn","login","LinearGradient","COLORS","SIZES","FONTS","LogIn","props","email","putEmail","password","putPassword","didMountRef","console","log","isAuth","isLoading","current","navigation","navigate","loginHandler","loginData","renderLogo","marginTop","padding","height","alignItems","justifyContent","images","logo","width","renderButton","text","onPress","margin","backgroundColor","black","borderRadius","radius","color","white","h3","flex","primary","marginBottom","textAlign","h1","titleText","TextInput","mapStateToProps","state","loginReducer","errMsg","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport {\n  View,\n  Button,\n  TextInput,\n  Text,\n  Alert,\n  StyleSheet,\n  ScrollView,\n  KeyboardAvoidingView,\n  TouchableOpacity,\n} from \"react-native\";\nconst axios = require(\"axios\");\nimport { connect } from \"react-redux\";\nimport AuthStyle from \"./style/AuthStyle\";\nconst styles = StyleSheet.create({ ...AuthStyle });\nimport { isLogedIn } from \"../../actions/AuthActions\";\nimport { login } from \"../../actions/loginActions\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { COLORS, SIZES, FONTS } from \"../../constants\";\n\nfunction LogIn(props) {\n  /*if (isLogedIn()) {\n    props.navigation.navigate(\"Home\");\n  }*/\n  const [email, putEmail] = useState(\"\");\n  const [password, putPassword] = useState(\"\");\n\n  // useRef hook to check whether the component has just mounted or updated\n  // Link: https://dev.to/savagepixie/how-to-mimic-componentdidupdate-with-react-hooks-3j8c\n  const didMountRef = useRef(false);\n  // useEffect()to check if states have changed\n  // 2nd argument is the list of states you want to watch for\n  useEffect(() => {\n    console.log(\"loginScreen.js, props.isAuth: \", props.isAuth);\n    console.log(\"loginScreen.js, props.isLoading: \", props.isLoading);\n    if (didMountRef.current) {\n      // if login success, go to home screen\n      if (props.isAuth) {\n        props.navigation.navigate(\"Home\");\n      } else if (!props.isAuth && !props.isLoading) {\n        //Alert.alert(props.errMsg);\n      }\n    } else {\n      didMountRef.current = true;\n    }\n  }, [props.isAuth, props.isLoading]);\n\n  // this function make sure props.login() only be called once\n  const loginHandler = () => {\n    const loginData = {\n      email: email,\n      password: password,\n    };\n    // calling login() dispatch function\n    props.login(loginData);\n  };\n\n  function renderLogo() {\n    return (\n      <View\n        style={{\n          marginTop: SIZES.padding * 2,\n          height: 100,\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <Image\n          source={images.logo}\n          resizeMode=\"contain\"\n          style={{\n            width: \"60%\",\n          }}\n        />\n      </View>\n    );\n  }\n\n  function renderButton(text, onPress) {\n    return (\n      <View style={{ margin: SIZES.padding * 0.5, alignItems: \"center\" }}>\n        <TouchableOpacity\n          style={{\n            height: 60,\n            width: 250,\n            backgroundColor: COLORS.black,\n            borderRadius: SIZES.radius / 0.2,\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n          onPress={onPress}\n        >\n          <Text style={{ color: COLORS.white, ...FONTS.h3 }}>{text}</Text>\n        </TouchableOpacity>\n      </View>\n    );\n  }\n\n  return (\n    <KeyboardAvoidingView style={{ flex: 1 }}>\n      <LinearGradient\n        colors={[COLORS.primary, COLORS.primary]}\n        style={{ flex: 1, alignItems: \"center\" }}\n      >\n        <ScrollView>\n          <View>\n            <Text\n              style={{\n                marginTop: 20,\n                marginBottom: 35,\n\n                marginTop: 35,\n                textAlign: \"center\",\n                color: \"#bc6c25\",\n                ...FONTS.h1,\n              }}\n            >\n              INPgram\n            </Text>\n            <Text style={styles.titleText}>Login</Text>\n            <View style={{ marginBottom: 20 }}>\n              <TextInput\n                style={styles.TextInput}\n                placeholder=\"Email\"\n                id=\"email\"\n                onChangeText={(text) => putEmail(text)}\n              />\n              <TextInput\n                style={styles.TextInput}\n                id=\"password\"\n                placeholder=\"Password\"\n                secureTextEntry={true}\n                onChangeText={(text) => putPassword(text)}\n              />\n            </View>\n            {renderButton(\"LogIn\", loginHandler)}\n            {renderButton(\"SignUp\", () =>\n              props.navigation.navigate(\"Register\")\n            )}\n            {renderButton(\"Passage\", () => props.navigation.navigate(\"Home\"))}\n          </View>\n        </ScrollView>\n      </LinearGradient>\n    </KeyboardAvoidingView>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    // only map needed states here\n    isLoading: state.loginReducer.isLoading,\n    isAuth: state.loginReducer.isAuth,\n    errMsg: state.loginReducer.errMsg,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    // only map needed dispatches here\n    login: (loginData) => dispatch(login(loginData)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LogIn);\n"]},"metadata":{},"sourceType":"module"}