{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/home/amine/Bureau/InstaTouda/InstaClone/src/Screens/LogIn/Register.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { connect } from \"react-redux\";\n\nvar axios = require(\"axios\");\n\nimport AuthStyle from \"./AuthStyle\";\nvar styles = StyleSheet.create(_objectSpread({}, AuthStyle));\nimport { signup as _signup } from \"../../actions/signupActions\";\nimport { isLogedIn } from \"../../actions/AuthActions\";\n\nfunction Register(props) {\n  if (isLogedIn()) {\n    props.navigation.navigate(\"Home\");\n  }\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      name = _useState6[0],\n      setName = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      email = _useState8[0],\n      setEmail = _useState8[1];\n\n  var didMountRef = useRef(false);\n  useEffect(function () {\n    if (didMountRef.current) {\n      if (props.isAuth) {\n        props.navigation.navigate(\"LogIn\");\n        Alert.alert(\"User is saved\");\n      } else if (!props.isAuth && !props.isLoading) {\n        Alert.alert(props.errMsg);\n      }\n    } else {\n      didMountRef.current = true;\n    }\n  }, [props.isAuth, props.isLoading]);\n\n  var signupHandler = function signupHandler() {\n    var signupData = {\n      email: email,\n      name: name,\n      username: username,\n      password: password\n    };\n    props.signup(signupData);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, \"INPGRAM \"), React.createElement(Text, {\n    style: styles.titleText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, \"SignUp \"), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    style: styles.TextInput,\n    placeholder: \"email\",\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    value: email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    style: styles.TextInput,\n    placeholder: \"username\",\n    onChangeText: function onChangeText(text) {\n      return setUsername(text);\n    },\n    value: username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    style: styles.TextInput,\n    placeholder: \"name\",\n    onChangeText: function onChangeText(text) {\n      return setName(text);\n    },\n    value: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    style: styles.TextInput,\n    placeholder: \"password\",\n    secureTextEntry: true,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    value: password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    style: styles.TextInput,\n    onPress: signupHandler,\n    title: \"Sign Up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    style: styles.TextInput,\n    onPress: function onPress() {\n      return props.navigation.navigate(\"LogIn\");\n    },\n    title: \"LogIn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  })));\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isLoading: state.signupReducer.isLoading,\n    isAuth: state.signupReducer.isAuth,\n    errMsg: state.signupReducer.errMsg\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    signup: function signup(signupData) {\n      return dispatch(_signup(signupData));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);","map":{"version":3,"sources":["/home/amine/Bureau/InstaTouda/InstaClone/src/Screens/LogIn/Register.js"],"names":["React","useState","useRef","useEffect","connect","axios","require","AuthStyle","styles","StyleSheet","create","signup","isLogedIn","Register","props","navigation","navigate","username","setUsername","password","setPassword","name","setName","email","setEmail","didMountRef","current","isAuth","Alert","alert","isLoading","errMsg","signupHandler","signupData","container","title","titleText","TextInput","text","mapStateToProps","state","signupReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport { View, Button, Text, TextInput, Alert, StyleSheet } from \"react-native\";\nimport { connect } from \"react-redux\";\nconst axios = require(\"axios\");\n\nimport AuthStyle from \"./AuthStyle\";\nconst styles = StyleSheet.create({ ...AuthStyle });\n\nimport { signup } from \"../../actions/signupActions\";\n\n\nimport { isLogedIn } from \"../../actions/AuthActions\";\n\nfunction Register(props) {\n  if (isLogedIn()) {\n    props.navigation.navigate(\"Home\");\n  }\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n\n  // useRef hook to check whether the component has just mounted or updated\n\n  const didMountRef = useRef(false);\n  // useEffect() to check if states have changed\n  // 2nd argument is the list of states you want to watch for\n  useEffect(() => {\n    if (didMountRef.current) {\n      // if signup success, go to login screen\n      if (props.isAuth) {\n        props.navigation.navigate(\"LogIn\");\n        Alert.alert(\"User is saved\");\n      } else if (!props.isAuth && !props.isLoading) {\n        Alert.alert(props.errMsg);\n      }\n    } else {\n      didMountRef.current = true;\n    }\n  }, [props.isAuth, props.isLoading]);\n\n  /*SignUp(){\n        const { email, password, username } = this.state;\n        const navigation=this.props.navigation;\n        axios({\n            method: 'post',\n            url: '/register',\n            baseURL: 'http://localhost:3000',\n            data: {\n              name: username,\n              email: email,\n              password: password\n            }\n            })\n\n        .then(function (reponse) {\n                //On traite la suite une fois la réponse obtenue \n                console.log(reponse);\n                navigation.navigate('LogIn');\n\n                Alert.alert(\"User is saved\");\n                \n        })\n        .catch(function (error) {\n                //On traite ici les erreurs éventuellement survenues\n                console.log(error[\"data\"]);\n                Alert.alert(\"Error!\");\n        });\n        //navigation.navigate('LogIn');\n\n    }*/\n\n  const signupHandler = () => {\n    const signupData = {\n      email: email,\n      name: name,\n      username: username,\n      password: password,\n    };\n    // calling signup() dispatch\n\n    props.signup(signupData);\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>INPGRAM </Text>\n      <Text style={styles.titleText}>SignUp </Text>\n      <View>\n        <TextInput\n          style={styles.TextInput}\n          placeholder=\"email\"\n          onChangeText={(text) => setEmail(text)}\n          value={email}\n        />\n        <TextInput\n          style={styles.TextInput}\n          placeholder=\"username\"\n          onChangeText={(text) => setUsername(text)}\n          value={username}\n        />\n        <TextInput\n          style={styles.TextInput}\n          placeholder=\"name\"\n          onChangeText={(text) => setName(text)}\n          value={name}\n        />\n        <TextInput\n          style={styles.TextInput}\n          placeholder=\"password\"\n          secureTextEntry={true}\n          onChangeText={(text) => setPassword(text)}\n          value={password}\n        />\n        <Button\n          style={styles.TextInput}\n          onPress={signupHandler}\n          title=\"Sign Up\"\n        />\n        <Button\n          style={styles.TextInput}\n          onPress={() => props.navigation.navigate(\"LogIn\")}\n          title=\"LogIn\"\n        />\n      </View>\n    </View>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    // only map needed states here\n    isLoading: state.signupReducer.isLoading,\n    isAuth: state.signupReducer.isAuth,\n    errMsg: state.signupReducer.errMsg,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    // only map needed dispatches here\n    signup: (signupData) => dispatch(signup(signupData)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);\n"]},"metadata":{},"sourceType":"module"}