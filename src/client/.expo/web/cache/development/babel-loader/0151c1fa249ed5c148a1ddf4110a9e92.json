{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/sanata/Desktop/InpGram/InstaClone/src/client/Screens/Profile/EditPic.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport axios from \"axios\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport EditStyle from \"./EditStyle\";\nimport { Item, Input } from \"native-base\";\nimport { connect } from \"react-redux\";\nimport ActionButton from \"react-native-action-button\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport { firebaseConfig } from \"../../fireBaseConfig\";\nimport uuid from \"uuid\";\nimport { InputField, InputWrapper, AddImage, SubmitBtn, SubmitBtnText, StatusWrapper } from \"./addPostStyle\";\nimport firebase from \"firebase\";\nimport { baseURL } from \"../../constants\";\n\nvar EditPic = function EditPic(props) {\n  if (!firebase.apps.length) {\n    firebase.initializeApp(firebaseConfig);\n  }\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      image = _useState2[0],\n      setImage = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      uploading = _useState4[0],\n      setUploading = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      transferred = _useState6[0],\n      setTransferred = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      caption = _useState8[0],\n      setCaption = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      userId = _useState10[0],\n      setUserId = _useState10[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$ImagePicker$re, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(Platform.OS !== \"web\")) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(ImagePicker.requestMediaLibraryPermissionsAsync());\n\n            case 3:\n              _await$ImagePicker$re = _context.sent;\n              status = _await$ImagePicker$re.status;\n\n              if (status !== \"granted\") {\n                alert(\"Sorry, we need camera roll permissions to make this work!\");\n              }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n\n    (function _callee2() {\n      var Id;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"Id\"));\n\n            case 2:\n              Id = _context2.sent;\n              setUserId(Id);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n\n    if (didMountRef.current) {\n      if (props.isModified) {\n        props.navigation.navigate(\"Profile\");\n      }\n    } else {\n      didMountRef.current = true;\n    }\n  }, [props.isModified]);\n\n  var uploadFromCamera = function uploadFromCamera() {\n    ImagePicker.launchCameraAsync({\n      width: 500,\n      height: 500,\n      cropping: false,\n      allowsEditing: true\n    }).then(function (image) {\n      var imageUri = Platform.OS === \"ios\" ? image.sourceURL : image.path;\n      setImage(image.uri);\n    });\n  };\n\n  var uploadFromGallery = function uploadFromGallery() {\n    var result;\n    return _regeneratorRuntime.async(function uploadFromGallery$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              width: 500,\n              height: 500,\n              quality: 1\n            }));\n\n          case 2:\n            result = _context3.sent;\n\n            if (!result.cancelled) {\n              setImage(result.uri);\n            }\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var submitPost = function submitPost() {\n    var imageUrl;\n    return _regeneratorRuntime.async(function submitPost$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _regeneratorRuntime.awrap(uploadImageAsync());\n\n          case 2:\n            imageUrl = _context4.sent;\n            axios({\n              method: \"post\",\n              url: \"/uploadpost\",\n              baseURL: baseURL,\n              data: {\n                id: userId,\n                urlpost: imageUrl,\n                description: caption,\n                date: new Date().toISOString()\n              }\n            }).then(function (res) {\n              var message = res.data.message;\n\n              if (res.data.value) {\n                Alert.alert(message);\n              }\n            }).catch(function (err) {\n              return console.log(err);\n            });\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  function uploadImageAsync() {\n    var uri, blob, ref, snapshot;\n    return _regeneratorRuntime.async(function uploadImageAsync$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            uri = image;\n            setUploading(true);\n            _context5.next = 4;\n            return _regeneratorRuntime.awrap(new Promise(function (resolve, reject) {\n              var xhr = new XMLHttpRequest();\n\n              xhr.onload = function () {\n                resolve(xhr.response);\n              };\n\n              xhr.onerror = function (e) {\n                reject(new TypeError(\"Network request failed\"));\n              };\n\n              xhr.responseType = \"blob\";\n              xhr.open(\"GET\", uri, true);\n              xhr.send(null);\n            }));\n\n          case 4:\n            blob = _context5.sent;\n            ref = firebase.storage().ref().child(uuid.v4());\n            _context5.next = 8;\n            return _regeneratorRuntime.awrap(ref.put(blob));\n\n          case 8:\n            snapshot = _context5.sent;\n            blob.close();\n            setUploading(false);\n            setImage(null);\n            Alert.alert(\"Image uploaded!\");\n            _context5.next = 15;\n            return _regeneratorRuntime.awrap(snapshot.ref.getDownloadURL());\n\n          case 15:\n            return _context5.abrupt(\"return\", _context5.sent);\n\n          case 16:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 5\n    }\n  }, React.createElement(InputWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }, image != null ? React.createElement(AddImage, {\n    source: {\n      uri: image\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 26\n    }\n  }) : null, React.createElement(InputField, {\n    placeholder: \"Caption\",\n    multiline: true,\n    numberOfLines: 4,\n    value: caption,\n    onChangeText: function onChangeText(content) {\n      return setCaption(content);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }), uploading ? React.createElement(StatusWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }, transferred, \" % Completed!\")) : React.createElement(SubmitBtn, {\n    onPress: submitPost,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 11\n    }\n  }, React.createElement(SubmitBtnText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  }, \"publish\"))), React.createElement(ActionButton, {\n    buttonColor: \"#f15bb5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }\n  }, React.createElement(ActionButton.Item, {\n    buttonColor: \"#06d6a0\",\n    title: \"Camera\",\n    onPress: uploadFromCamera,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  }, React.createElement(Icon, {\n    name: \"camera-outline\",\n    style: styles.actionButtonIcon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 11\n    }\n  })), React.createElement(ActionButton.Item, {\n    buttonColor: \"#118ab2\",\n    title: \"Gallery\",\n    onPress: uploadFromGallery,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }\n  }, React.createElement(Icon, {\n    name: \"md-images-outline\",\n    style: styles.actionButtonIcon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 11\n    }\n  }))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  actionButtonIcon: {\n    fontSize: 20,\n    height: 22,\n    color: \"white\"\n  }\n});\n\nvar mapStatetoProps = function mapStatetoProps(state) {\n  return {\n    isModified: state.postsReducer.isModified,\n    postdata: state.postsReducer.postdata\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    modifypost: function (_modifypost) {\n      function modifypost(_x) {\n        return _modifypost.apply(this, arguments);\n      }\n\n      modifypost.toString = function () {\n        return _modifypost.toString();\n      };\n\n      return modifypost;\n    }(function (data) {\n      return dispatch(modifypost(data));\n    })\n  };\n};\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(EditPic);","map":{"version":3,"sources":["/home/sanata/Desktop/InpGram/InstaClone/src/client/Screens/Profile/EditPic.js"],"names":["React","useState","useContext","useEffect","axios","EditStyle","Item","Input","connect","ActionButton","AsyncStorage","Icon","ImagePicker","firebaseConfig","uuid","InputField","InputWrapper","AddImage","SubmitBtn","SubmitBtnText","StatusWrapper","firebase","baseURL","EditPic","props","apps","length","initializeApp","image","setImage","uploading","setUploading","transferred","setTransferred","caption","setCaption","userId","setUserId","Platform","OS","requestMediaLibraryPermissionsAsync","status","alert","getItem","Id","didMountRef","current","isModified","navigation","navigate","uploadFromCamera","launchCameraAsync","width","height","cropping","allowsEditing","then","imageUri","sourceURL","path","uri","uploadFromGallery","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","quality","result","cancelled","submitPost","uploadImageAsync","imageUrl","method","url","data","id","urlpost","description","date","Date","toISOString","res","message","value","Alert","catch","err","console","log","Promise","resolve","reject","xhr","XMLHttpRequest","onload","response","onerror","e","TypeError","responseType","open","send","blob","ref","storage","child","v4","put","snapshot","close","getDownloadURL","styles","container","content","actionButtonIcon","StyleSheet","create","flex","alignItems","justifyContent","fontSize","color","mapStatetoProps","state","postsReducer","postdata","mapDispatchToProps","dispatch","modifypost"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport {\n  View,\n  Text,\n  Platform,\n  StyleSheet,\n  Alert,\n  Image,\n  ActivityIndicator,\n} from \"react-native\";\nimport EditStyle from \"./EditStyle\";\nimport { Item, Input } from \"native-base\";\nimport { connect } from \"react-redux\";\nimport ActionButton from \"react-native-action-button\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\n\nimport Icon from \"react-native-vector-icons/Ionicons\";\nimport * as ImagePicker from \"expo-image-picker\";\n\nimport { firebaseConfig } from \"../../fireBaseConfig\";\nimport uuid from \"uuid\";\n\nimport {\n  InputField,\n  InputWrapper,\n  AddImage,\n  SubmitBtn,\n  SubmitBtnText,\n  StatusWrapper,\n} from \"./addPostStyle\";\n\nimport firebase from \"firebase\";\nimport { baseURL } from \"../../constants\";\n\nconst EditPic = (props) => {\n  if (!firebase.apps.length) {\n    firebase.initializeApp(firebaseConfig);\n  }\n\n  const [image, setImage] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  const [transferred, setTransferred] = useState(0);\n  const [caption, setCaption] = useState(null);\n  const [userId, setUserId] = useState(\"\");\n\n  useEffect(() => {\n    (async () => {\n      if (Platform.OS !== \"web\") {\n        const { status } =\n          await ImagePicker.requestMediaLibraryPermissionsAsync();\n        if (status !== \"granted\") {\n          alert(\"Sorry, we need camera roll permissions to make this work!\");\n        }\n      }\n    })();\n    (async () => {\n      const Id = await AsyncStorage.getItem(\"Id\");\n      setUserId(Id);\n    })();\n    if (didMountRef.current) {\n      // if login success, go to home screen\n      if (props.isModified) {\n        props.navigation.navigate(\"Profile\");\n      }\n    } else {\n      didMountRef.current = true;\n    }\n  }, [props.isModified]);\n\n  const uploadFromCamera = () => {\n    ImagePicker.launchCameraAsync({\n      width: 500,\n      height: 500,\n      cropping: false,\n      allowsEditing: true,\n    }).then((image) => {\n      const imageUri = Platform.OS === \"ios\" ? image.sourceURL : image.path;\n      setImage(image.uri);\n    });\n  };\n\n  const uploadFromGallery = async () => {\n    let result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\n      allowsEditing: true,\n      width: 500,\n      height: 500,\n      quality: 1,\n    });\n\n    if (!result.cancelled) {\n      setImage(result.uri);\n    }\n  };\n\n  const submitPost = async () => {\n    const imageUrl = await uploadImageAsync();\n\n    axios({\n      method: \"post\",\n      url: \"/uploadpost\",\n      baseURL: baseURL,\n      data: {\n        id: userId,\n        urlpost: imageUrl,\n        description: caption,\n        date: new Date().toISOString(),\n      },\n    })\n      .then((res) => {\n        const message = res.data.message;\n        if (res.data.value) {\n          Alert.alert(message);\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n\n  async function uploadImageAsync() {\n    const uri = image;\n\n    setUploading(true);\n    const blob = await new Promise((resolve, reject) => {\n      const xhr = new XMLHttpRequest();\n      xhr.onload = function () {\n        resolve(xhr.response);\n      };\n      xhr.onerror = function (e) {\n        reject(new TypeError(\"Network request failed\"));\n      };\n      xhr.responseType = \"blob\";\n      xhr.open(\"GET\", uri, true);\n      xhr.send(null);\n    });\n\n    const ref = firebase.storage().ref().child(uuid.v4());\n    const snapshot = await ref.put(blob);\n\n    // We're done with the blob, close and release it\n    blob.close();\n\n    setUploading(false);\n    setImage(null);\n\n    Alert.alert(\"Image uploaded!\");\n    return await snapshot.ref.getDownloadURL();\n  }\n\n  return (\n    <View style={styles.container}>\n      <InputWrapper>\n        {image != null ? <AddImage source={{ uri: image }} /> : null}\n\n        <InputField\n          placeholder=\"Caption\"\n          multiline\n          numberOfLines={4}\n          value={caption}\n          onChangeText={(content) => setCaption(content)}\n        />\n        {uploading ? (\n          <StatusWrapper>\n            <Text>{transferred} % Completed!</Text>\n          </StatusWrapper>\n        ) : (\n          <SubmitBtn onPress={submitPost}>\n            <SubmitBtnText>publish</SubmitBtnText>\n          </SubmitBtn>\n        )}\n      </InputWrapper>\n      <ActionButton buttonColor=\"#f15bb5\">\n        <ActionButton.Item\n          buttonColor=\"#06d6a0\"\n          title=\"Camera\"\n          onPress={uploadFromCamera}\n        >\n          <Icon name=\"camera-outline\" style={styles.actionButtonIcon} />\n        </ActionButton.Item>\n        <ActionButton.Item\n          buttonColor=\"#118ab2\"\n          title=\"Gallery\"\n          onPress={uploadFromGallery}\n        >\n          <Icon name=\"md-images-outline\" style={styles.actionButtonIcon} />\n        </ActionButton.Item>\n      </ActionButton>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  actionButtonIcon: {\n    fontSize: 20,\n    height: 22,\n    color: \"white\",\n  },\n});\n\nconst mapStatetoProps = (state) => {\n  return {\n    isModified: state.postsReducer.isModified,\n    postdata: state.postsReducer.postdata,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    // only map needed dispatches here\n    modifypost: (data) => dispatch(modifypost(data)),\n  };\n};\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(EditPic);\n"]},"metadata":{},"sourceType":"module"}