{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/Users/mac/I/InstaClone/src/client/Screens/Profile/EditPost.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport EditStyle from \"./style/EditStyle\";\nimport { connect } from \"react-redux\";\nvar styles = StyleSheet.create(_objectSpread({}, EditStyle));\nimport axios from \"axios\";\nimport { modifypost as _modifypost } from \"../../actions/postsActions\";\nimport { baseURL } from \"../../constants\";\n\nfunction EditPost(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      Description = _useState2[0],\n      putDescription = _useState2[1];\n\n  var didMountRef = useRef(false);\n  useEffect(function () {\n    putDescription(props.postdata.description);\n\n    if (didMountRef.current) {\n      if (props.isModified) {\n        props.navigation.navigate(\"Profile\");\n      }\n    } else {\n      didMountRef.current = true;\n    }\n  }, [props.isModified]);\n\n  var ModifyPost = function ModifyPost() {\n    var data = {\n      urlpost: props.postdata.urlpost,\n      userid: props.postdata.userid,\n      postid: props.postdata.Id,\n      description: Description\n    };\n    props.modifypost(data);\n  };\n\n  var DeletePost = function DeletePost() {\n    axios({\n      method: \"post\",\n      url: \"/DeletePost\",\n      baseURL: baseURL,\n      data: {\n        userid: props.postdata.userid,\n        postid: props.postdata.Id\n      }\n    }).then(function (res) {\n      var message = res.data.message;\n\n      if (res.data.value) {\n        props.navigation.navigate(\"Profile\");\n      }\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  };\n\n  return React.createElement(View, {\n    style: {\n      marginTop: 100\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.userRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    style: styles.userImage,\n    source: {\n      uri: props.postdata.urlpost\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.item1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, \"Description\")), React.createElement(View, {\n    regular: true,\n    style: styles.item2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, React.createElement(TextInput, {\n    style: styles.TextBioInput,\n    onChangeText: function onChangeText(text) {\n      return putDescription(text);\n    },\n    value: Description,\n    autoCapitalize: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }))), React.createElement(View, {\n    style: {\n      marginTop: 120\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    title: \"Modify Post\",\n    onPress: ModifyPost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }), React.createElement(Button, {\n    title: \"Delete Post\",\n    onPress: DeletePost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }))));\n}\n\nvar mapStatetoProps = function mapStatetoProps(state) {\n  return {\n    isModified: state.postsReducer.isModified,\n    postdata: state.postsReducer.postdata\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    modifypost: function modifypost(data) {\n      return dispatch(_modifypost(data));\n    }\n  };\n};\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(EditPost);","map":{"version":3,"sources":["/Users/mac/I/InstaClone/src/client/Screens/Profile/EditPost.js"],"names":["React","useState","useRef","useEffect","EditStyle","connect","styles","StyleSheet","create","axios","modifypost","baseURL","EditPost","props","Description","putDescription","didMountRef","postdata","description","current","isModified","navigation","navigate","ModifyPost","data","urlpost","userid","postid","Id","DeletePost","method","url","then","res","message","value","catch","err","console","log","marginTop","userRow","userImage","uri","container","item1","item2","TextBioInput","text","mapStatetoProps","state","postsReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\n\nimport {\n  View,\n  Text,\n  Image,\n  Button,\n  TextInput,\n  StyleSheet,\n  Alert,\n} from \"react-native\";\n\nimport EditStyle from \"./style/EditStyle\";\nimport { connect } from \"react-redux\";\nconst styles = StyleSheet.create({ ...EditStyle });\nimport axios from \"axios\";\nimport { modifypost } from \"../../actions/postsActions\";\nimport { baseURL } from \"../../constants\";\n\nfunction EditPost(props) {\n  const [Description, putDescription] = useState(\"\");\n\n  /*static navigationOptions = {\n\n    tabBarIcon: ({ tintColor }) => (\n      <Icon name=\"ios-pencil\" style={{ color: tintColor }} />\n    )\n  }*/\n\n  const didMountRef = useRef(false);\n  // useEffect()to check if states have changed\n  // 2nd argument is the list of states you want to watch for\n  useEffect(() => {\n    putDescription(props.postdata.description);\n    if (didMountRef.current) {\n      // if login success, go to home screen\n      if (props.isModified) {\n        props.navigation.navigate(\"Profile\");\n      }\n    } else {\n      didMountRef.current = true;\n    }\n  }, [props.isModified]);\n\n  const ModifyPost = () => {\n    const data = {\n      urlpost: props.postdata.urlpost,\n      userid: props.postdata.userid,\n      postid: props.postdata.Id,\n      description: Description,\n    };\n\n    // calling login() dispatch function\n    props.modifypost(data);\n  };\n\n  const DeletePost = () => {\n    axios({\n      method: \"post\",\n      url: \"/DeletePost\",\n      baseURL: baseURL,\n      data: {\n        userid: props.postdata.userid,\n        postid: props.postdata.Id,\n      },\n    })\n      .then((res) => {\n        const message = res.data.message;\n\n        if (res.data.value) {\n          props.navigation.navigate(\"Profile\");\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n\n  return (\n    <View style={{ marginTop: 100 }}>\n      <View style={styles.userRow}>\n        <Image\n          style={styles.userImage}\n          source={{ uri: props.postdata.urlpost }}\n        />\n\n        <View style={styles.container}>\n          <View style={styles.item1}>\n            <Text>Description</Text>\n          </View>\n          <View regular style={styles.item2}>\n            <TextInput\n              style={styles.TextBioInput}\n              onChangeText={(text) => putDescription(text)}\n              value={Description}\n              autoCapitalize=\"none\"\n            />\n          </View>\n        </View>\n        <View style={{ marginTop: 120 }}>\n          <Button title=\"Modify Post\" onPress={ModifyPost} />\n          <Button title=\"Delete Post\" onPress={DeletePost} />\n        </View>\n      </View>\n    </View>\n  );\n}\nconst mapStatetoProps = (state) => {\n  return {\n    isModified: state.postsReducer.isModified,\n    postdata: state.postsReducer.postdata,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    // only map needed dispatches here\n    modifypost: (data) => dispatch(modifypost(data)),\n  };\n};\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(EditPost);\n"]},"metadata":{},"sourceType":"module"}