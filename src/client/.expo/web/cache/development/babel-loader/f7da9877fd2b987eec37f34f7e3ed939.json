{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/home/sanata/Desktop/InpGram/InstaClone/src/Screens/Profile/Profile.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport { uploadpost as _uploadpost } from \"../../actions/postsActions\";\nimport swal from \"sweetalert\";\nimport { TabView, TabBar, TabViewPagerScroll, TabViewPagerPan } from \"react-native-tab-view\";\nimport PropTypes from \"prop-types\";\nimport { image } from \"./utils\";\nimport profileStyles from \"./ProfileStyle\";\nexport var ImageProfil = require(\"./images/photo_cv.jpg\");\nvar styles = StyleSheet.create(_objectSpread({}, profileStyles));\nimport { Item, Input } from \"native-base\";\nimport Posts from \"./Posts\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport { logout as _logout } from \"../../actions/loginActions\";\nimport { Icon } from \"native-base\";\n\nvar Profile = function (_Component) {\n  _inherits(Profile, _Component);\n\n  var _super = _createSuper(Profile);\n\n  function Profile(_props) {\n    var _this;\n\n    _classCallCheck(this, Profile);\n\n    _this = _super.call(this, _props);\n\n    _this.fetchUserDetails = function (user_id) {\n      console.log(\"dkhaaaal\");\n      console.log(user_id);\n      axios({\n        method: \"post\",\n        url: \"/getUserDetails\",\n        baseURL: baseURL,\n        data: {\n          userid: user_id\n        }\n      }).then(function (res) {\n        console.log(res);\n\n        _this.setState({\n          name: res.data.results[0].name\n        });\n\n        _this.setState({\n          url: res.data.results[0].url\n        });\n\n        _this.setState({\n          username: res.data.results[0].username\n        });\n\n        _this.setState({\n          bio: res.data.results[0].bio\n        });\n\n        _this.setState({\n          post: res.data.results[0].posts[0].urlpost\n        });\n\n        var reversePosts = res.data.results[0].posts.reverse();\n\n        _this.setState({\n          posts: reversePosts\n        });\n\n        _this.setState({\n          followers: res.data.results[0].followers\n        });\n\n        _this.setState({\n          following: res.data.results[0].following\n        });\n\n        var followersnumber = _this.state.followers.length;\n        var followingnumber = _this.state.following.length;\n\n        var newroutes = _toConsumableArray(_this.state.tabs.routes);\n\n        newroutes[0].count = _this.state.posts.length - 1;\n        newroutes[1].count = followingnumber;\n        newroutes[2].count = followersnumber;\n\n        _this.setState({\n          tabs: _objectSpread(_objectSpread({}, _this.state.tabs), {}, {\n            newroutes: newroutes\n          })\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.ModifyNumber = function (tabs) {\n      var newtabs = _toConsumableArray(tabs);\n\n      console.log(newtabs);\n\n      var newroutes = _toConsumableArray(newtabs.routes);\n\n      var newroute = _toConsumableArray(newroutes[0]);\n\n      newroute.count = reversePosts.length;\n\n      _this.setState({\n        tabs: newtabs\n      });\n    };\n\n    _this.Upload = function () {\n      swal({\n        title: \"Upload Post\",\n        text: \"Url\",\n        content: {\n          element: \"input\",\n          attributes: {\n            value: \"Url\",\n            type: \"Url\"\n          }\n        },\n        button: {\n          text: \"Upload\",\n          closeModal: false\n        }\n      }).then(function (Url) {\n        var url = Url;\n        swal({\n          title: \"UploadPost:\",\n          text: \"Description\",\n          icon: Url,\n          content: {\n            element: \"input\",\n            attributes: {\n              value: \"\",\n              type: \"Description\"\n            }\n          },\n          button: {\n            text: \"Upload\",\n            closeModal: false\n          }\n        }).then(function (Description) {\n          var description = Description;\n          axios({\n            method: \"post\",\n            url: \"/uploadpost\",\n            baseURL: baseURL,\n            data: {\n              id: _this.state.id,\n              urlpost: url,\n              description: description,\n              date: new Date().toISOString()\n            }\n          }).then(function (res) {\n            var message = res.data.message;\n            console.log(message);\n\n            if (res.data.value) {\n              swal(message);\n            }\n          }).catch(function (err) {\n            return console.log(err);\n          });\n        });\n      });\n    };\n\n    _this.onPressPlace = function () {\n      console.log(\"place\");\n    };\n\n    _this.clearAppData = function _callee() {\n      var keys;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getAllKeys());\n\n            case 3:\n              keys = _context.sent;\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(AsyncStorage.multiRemove(keys));\n\n            case 6:\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              console.error(\"Error clearing app data.\");\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 8]], Promise);\n    };\n\n    _this.LogOut = function _callee2() {\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _this.props.navigation.navigate(\"EditPost\");\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.handleIndexChange = function (index) {\n      _this.setState({\n        tabs: _objectSpread(_objectSpread({}, _this.state.tabs), {}, {\n          index: index\n        })\n      });\n    };\n\n    _this.renderTabBar = function (props) {\n      return React.createElement(TabBar, _extends({\n        indicatorStyle: styles.indicatorTab,\n        renderLabel: _this.renderLabel(props),\n        pressOpacity: 0.8,\n        style: styles.tabBar\n      }, props, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 7\n        }\n      }));\n    };\n\n    _this.renderLabel = function (props) {\n      return function (_ref) {\n        var route = _ref.route;\n        var routes = props.navigationState.routes;\n        var labels = [];\n        routes.forEach(function (e, index) {\n          labels.push(index === props.navigationState.index ? \"black\" : \"gray\");\n        });\n        var currentIndex = parseInt(route.key) - 1;\n        var color = labels[currentIndex];\n        return React.createElement(View, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 9\n          }\n        }, React.createElement(Animated.Text, {\n          style: [styles.tabLabelText, {\n            color: color\n          }],\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 11\n          }\n        }, route.count), React.createElement(Animated.Text, {\n          style: [styles.tabLabelNumber, {\n            color: color\n          }],\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 11\n          }\n        }, route.title));\n      };\n    };\n\n    _this.renderScene = function (_ref2) {\n      var key = _ref2.route.key;\n      var posts = _this.props.posts;\n\n      switch (key) {\n        case \"1\":\n          return _this.renderMansonry2Col();\n\n        case \"2\":\n          return React.createElement(View, {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 11\n            }\n          }, \" \", React.createElement(ScrollView, {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 13\n            }\n          }, \" \", _this.following(), \" \"), \" \");\n\n        case \"3\":\n          return React.createElement(View, {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 11\n            }\n          }, \" \", React.createElement(ScrollView, {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 13\n            }\n          }, \" \", _this.followers(), \" \"), \" \");\n\n        default:\n          return React.createElement(View, {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 16\n            }\n          });\n      }\n    };\n\n    _this.following = function () {\n      return _this.state.following.map(function (user, index) {\n        return React.createElement(View, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 9\n          }\n        }, React.createElement(Text, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 11\n          }\n        }, \" \", user.name.username, \" \"), \" \");\n      });\n    };\n\n    _this.followers = function () {\n      return _this.state.followers.map(function (user, index) {\n        return React.createElement(View, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 9\n          }\n        }, React.createElement(Text, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 11\n          }\n        }, \" \", user.name.username, \" \"), \" \");\n      });\n    };\n\n    _this.renderContactHeader = function () {\n      return React.createElement(View, {\n        style: styles.headerContainer,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.item,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.userRow,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 11\n        }\n      }, React.createElement(Image, {\n        style: styles.userImage,\n        source: {\n          uri: _this.state.url\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 13\n        }\n      }))), React.createElement(View, {\n        style: styles.item2,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: {\n          height: 70,\n          marginTop: 10,\n          marginRight: 50\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }\n      }, React.createElement(Button, {\n        title: \"logout\",\n        onPress: _this.LogOut,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 13\n        }\n      })), React.createElement(View, {\n        style: styles.userRow,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }\n      }, React.createElement(Button, {\n        onPress: _this.Upload,\n        title: \"upload post\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 13\n        }\n      })), React.createElement(View, {\n        style: styles.userRow,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: styles.userNameRow,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.userNameText,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 15\n        }\n      }, _this.state.name)), React.createElement(View, {\n        style: styles.userNameRow,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.userNameText,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 15\n        }\n      }, \"@\", _this.state.username)), React.createElement(View, {\n        style: styles.userBioRow,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.userBioText,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 15\n        }\n      }, _this.state.bio)))));\n    };\n\n    _this.renderMansonry2Col = function () {\n      if (_this.state.posts.length < 2) {\n        return React.createElement(View, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 9\n          }\n        }, React.createElement(Text, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 11\n          }\n        }, \"AUCUN POST \"));\n      } else {\n        return React.createElement(View, {\n          style: styles.masonryContainer,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 9\n          }\n        }, React.createElement(View, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 11\n          }\n        }, React.createElement(Posts, {\n          containerStyle: styles.sceneContainer,\n          posts: _this.state.posts,\n          userid: _this.state.id,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 13\n          }\n        })));\n      }\n    };\n\n    _this.state = {\n      authToken: _this.props.authToken,\n      id: _this.props.userDetails,\n      name: \"\",\n      url: \"\",\n      description: \"\",\n      username: \"\",\n      urlpost: \"\",\n      bio: \"\",\n      post: \"\",\n      posts: [],\n      tabs: {\n        index: 0,\n        routes: [{\n          key: \"1\",\n          title: \"Posts\",\n          count: \"5\"\n        }, {\n          key: \"2\",\n          title: \"following\",\n          count: \"192 M\"\n        }, {\n          key: \"3\",\n          title: \"followers\",\n          count: \"83\"\n        }]\n      },\n      postsMasonry: {},\n      following: [],\n      followers: []\n    };\n    return _this;\n  }\n\n  _createClass(Profile, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.fetchUserDetails(this.props.userDetails);\n      this.willFocusSubscription = this.props.navigation.addListener(\"willFocus\", function () {\n        _this2.fetchUserDetails(_this2.props.userDetails);\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this.props.isUploaded) {\n        Alert.alert(\"POST UPLOADED\");\n        this.props.navigation.navigate(\"Profile\");\n      }\n\n      if (!this.props.isUploaded && !this.props.isLoading) {\n        Alert.alert(this.props.errMsg);\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(newProps) {\n      if (newProps.isUploaded !== this.props.isUploaded) {\n        console.log(\"bibi\");\n        this.fetchUserDetails(this.props.userDetails);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.willFocusSubscription.remove();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ScrollView, {\n        style: styles.scroll,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: [styles.container, this.props.containerStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.cardContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 11\n        }\n      }, this.renderContactHeader(), React.createElement(TabView, {\n        style: [styles.tabContainer, this.props.tabContainerStyle],\n        navigationState: this.state.tabs,\n        renderScene: this.renderScene,\n        renderTabBar: this.renderTabBar,\n        onIndexChange: this.handleIndexChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return Profile;\n}(Component);\n\nProfile.navigationOptions = {\n  tabBarIcon: function tabBarIcon(_ref3) {\n    var tintColor = _ref3.tintColor;\n    return React.createElement(Icon, {\n      name: \"person\",\n      style: {\n        color: tintColor\n      },\n      __self: Profile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    });\n  }\n};\n\nvar mapStatetoProps = function mapStatetoProps(state) {\n  return {\n    authToken: state.loginReducer.authToken,\n    userDetails: state.loginReducer.userDetails,\n    isLoading: state.postsReducer.isLoading,\n    isUploaded: state.postsReducer.isUploaded,\n    errMsg: state.postsReducer.errMsg\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    logout: function logout() {\n      return dispatch(_logout());\n    },\n    uploadpost: function uploadpost(Data) {\n      return dispatch(_uploadpost(Data));\n    }\n  };\n};\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(Profile);","map":{"version":3,"sources":["/home/sanata/Desktop/InpGram/InstaClone/src/Screens/Profile/Profile.js"],"names":["React","Component","AsyncStorage","uploadpost","swal","TabView","TabBar","TabViewPagerScroll","TabViewPagerPan","PropTypes","image","profileStyles","ImageProfil","require","styles","StyleSheet","create","Item","Input","Posts","connect","axios","logout","Icon","Profile","props","fetchUserDetails","user_id","console","log","method","url","baseURL","data","userid","then","res","setState","name","results","username","bio","post","posts","urlpost","reversePosts","reverse","followers","following","followersnumber","state","length","followingnumber","newroutes","tabs","routes","count","catch","err","ModifyNumber","newtabs","newroute","Upload","title","text","content","element","attributes","value","type","button","closeModal","Url","icon","Description","description","id","date","Date","toISOString","message","onPressPlace","clearAppData","getAllKeys","keys","multiRemove","error","LogOut","navigation","navigate","handleIndexChange","index","renderTabBar","indicatorTab","renderLabel","tabBar","route","navigationState","labels","forEach","e","push","currentIndex","parseInt","key","color","tabLabelText","tabLabelNumber","renderScene","renderMansonry2Col","map","user","renderContactHeader","headerContainer","item","userRow","userImage","uri","item2","height","marginTop","marginRight","userNameRow","userNameText","userBioRow","userBioText","masonryContainer","sceneContainer","authToken","userDetails","postsMasonry","willFocusSubscription","addListener","isUploaded","Alert","alert","isLoading","errMsg","newProps","remove","scroll","container","containerStyle","cardContainer","tabContainer","tabContainerStyle","navigationOptions","tabBarIcon","tintColor","mapStatetoProps","loginReducer","postsReducer","mapDispatchToProps","dispatch","Data"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Animated,\n  Image,\n  TextInput,\n  Button,\n  ScrollView,\n  Alert,\n  StyleSheet,\n  Text,\n  View,\n} from \"react-native\";\n\nimport AsyncStorage from \"@react-native-community/async-storage\";\n//import { Icon } from 'react-native-elements'\nimport { uploadpost } from \"../../actions/postsActions\";\nimport swal from \"sweetalert\";\n\nimport {\n  TabView,\n  TabBar,\n  TabViewPagerScroll,\n  TabViewPagerPan,\n} from \"react-native-tab-view\";\nimport PropTypes from \"prop-types\";\nimport { image } from \"./utils\";\nimport profileStyles from \"./ProfileStyle\";\nexport const ImageProfil = require(\"./images/photo_cv.jpg\");\nconst styles = StyleSheet.create({ ...profileStyles });\nimport { Item, Input } from \"native-base\";\nimport Posts from \"./Posts\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport { logout } from \"../../actions/loginActions\";\n\nimport { Icon } from \"native-base\";\n\nclass Profile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      authToken: this.props.authToken,\n      id: this.props.userDetails,\n      name: \"\",\n      url: \"\",\n      description: \"\",\n      username: \"\",\n      urlpost: \"\",\n      bio: \"\",\n      post: \"\",\n      posts: [],\n      tabs: {\n        index: 0,\n        routes: [\n          { key: \"1\", title: \"Posts\", count: \"5\" },\n          { key: \"2\", title: \"following\", count: \"192 M\" },\n          { key: \"3\", title: \"followers\", count: \"83\" },\n        ],\n      },\n      postsMasonry: {},\n\n      following: [],\n\n      followers: [],\n    };\n  }\n\n  static navigationOptions = {\n    tabBarIcon: ({ tintColor }) => (\n      <Icon name=\"person\" style={{ color: tintColor }} />\n    ),\n  };\n\n  fetchUserDetails = (user_id) => {\n    console.log(\"dkhaaaal\");\n    console.log(user_id);\n    /*axios.post(\"http://localhost:3000/getUserDetails\",{\n  params: {\n    userid: user_id\n  }})*/\n    axios({\n      method: \"post\",\n      url: \"/getUserDetails\",\n      baseURL: baseURL,\n      data: {\n        userid: user_id,\n      },\n    })\n      .then((res) => {\n        console.log(res);\n        this.setState({ name: res.data.results[0].name });\n        this.setState({ url: res.data.results[0].url });\n        this.setState({ username: res.data.results[0].username });\n        this.setState({ bio: res.data.results[0].bio });\n        this.setState({ post: res.data.results[0].posts[0].urlpost });\n\n        const reversePosts = res.data.results[0].posts.reverse();\n\n        this.setState({ posts: reversePosts });\n\n        this.setState({ followers: res.data.results[0].followers });\n        this.setState({ following: res.data.results[0].following });\n        var followersnumber = this.state.followers.length;\n        var followingnumber = this.state.following.length;\n        var newroutes = [...this.state.tabs.routes];\n        newroutes[0].count = this.state.posts.length - 1;\n        newroutes[1].count = followingnumber;\n        newroutes[2].count = followersnumber;\n        this.setState({\n          tabs: {\n            ...this.state.tabs,\n            newroutes,\n          },\n        });\n      })\n      .catch((err) => console.log(err));\n  };\n  ModifyNumber = (tabs) => {\n    var newtabs = [...tabs];\n    console.log(newtabs);\n    var newroutes = [...newtabs.routes];\n    var newroute = [...newroutes[0]];\n    newroute.count = reversePosts.length;\n    this.setState({ tabs: newtabs });\n  };\n\n  Upload = () => {\n    swal({\n      title: \"Upload Post\",\n      text: \"Url\",\n      content: {\n        element: \"input\",\n        attributes: {\n          value: \"Url\",\n          type: \"Url\",\n        },\n      },\n      button: {\n        text: \"Upload\",\n        closeModal: false,\n      },\n    }).then((Url) => {\n      const url = Url;\n\n      swal({\n        title: \"UploadPost:\",\n        text: \"Description\",\n        icon: Url,\n        content: {\n          element: \"input\",\n          attributes: {\n            value: \"\",\n            type: \"Description\",\n          },\n        },\n        button: {\n          text: \"Upload\",\n          closeModal: false,\n        },\n      }).then((Description) => {\n        const description = Description;\n        axios({\n          method: \"post\",\n          url: \"/uploadpost\",\n          baseURL: baseURL,\n          data: {\n            id: this.state.id,\n            urlpost: url,\n            description: description,\n            date: new Date().toISOString(),\n          },\n        })\n          .then((res) => {\n            const message = res.data.message;\n            console.log(message);\n            if (res.data.value) {\n              swal(message);\n            }\n          })\n          .catch((err) => console.log(err));\n      });\n    });\n  };\n\n  /*UploadPost = () => {\n\n  const Data = {\n   id:this.props.userDetails,\n   urlpost: this.state.urlpost,\n   description:this.state.description,\n   date:new Date().toISOString()\n    \n  }\n  // calling signup() dispatch\n  \n  this.props.uploadpost(Data);\n}*/\n\n  onPressPlace = () => {\n    console.log(\"place\");\n  };\n  componentDidMount() {\n    this.fetchUserDetails(this.props.userDetails);\n\n    this.willFocusSubscription = this.props.navigation.addListener(\n      \"willFocus\",\n      () => {\n        this.fetchUserDetails(this.props.userDetails);\n      }\n    );\n  }\n\n  componentDidUpdate() {\n    if (this.props.isUploaded) {\n      Alert.alert(\"POST UPLOADED\");\n      this.props.navigation.navigate(\"Profile\");\n    }\n    if (!this.props.isUploaded && !this.props.isLoading) {\n      Alert.alert(this.props.errMsg);\n    }\n  }\n\n  componentWillReceiveProps(newProps) {\n    if (newProps.isUploaded !== this.props.isUploaded) {\n      console.log(\"bibi\");\n      this.fetchUserDetails(this.props.userDetails);\n    }\n  }\n  clearAppData = async () => {\n    try {\n      const keys = await AsyncStorage.getAllKeys();\n      await AsyncStorage.multiRemove(keys);\n    } catch (error) {\n      console.error(\"Error clearing app data.\");\n    }\n  };\n  componentWillUnmount() {\n    this.willFocusSubscription.remove();\n  }\n\n  LogOut = async () => {\n    // this.props.logout();\n    //await this.clearAppData();\n    this.props.navigation.navigate(\"EditPost\");\n  };\n  handleIndexChange = (index) => {\n    this.setState({\n      tabs: {\n        ...this.state.tabs,\n        index,\n      },\n    });\n  };\n\n  renderTabBar = (props) => {\n    return (\n      <TabBar\n        indicatorStyle={styles.indicatorTab}\n        renderLabel={this.renderLabel(props)}\n        pressOpacity={0.8}\n        style={styles.tabBar}\n        {...props}\n      />\n    );\n  };\n\n  renderLabel =\n    (props) =>\n    ({ route }) => {\n      const routes = props.navigationState.routes;\n\n      let labels = [];\n      routes.forEach((e, index) => {\n        labels.push(index === props.navigationState.index ? \"black\" : \"gray\");\n      });\n\n      const currentIndex = parseInt(route.key) - 1;\n      const color = labels[currentIndex];\n\n      return (\n        <View>\n          <Animated.Text style={[styles.tabLabelText, { color }]}>\n            {route.count}\n          </Animated.Text>\n          <Animated.Text style={[styles.tabLabelNumber, { color }]}>\n            {route.title}\n          </Animated.Text>\n        </View>\n      );\n    };\n\n  renderScene = ({ route: { key } }) => {\n    const { posts } = this.props;\n\n    switch (key) {\n      case \"1\":\n        return this.renderMansonry2Col();\n      case \"2\":\n        return (\n          <View>\n            {\" \"}\n            <ScrollView> {this.following()} </ScrollView>{\" \"}\n          </View>\n        );\n      case \"3\":\n        return (\n          <View>\n            {\" \"}\n            <ScrollView> {this.followers()} </ScrollView>{\" \"}\n          </View>\n        );\n\n      default:\n        return <View />;\n    }\n  };\n\n  following = () => {\n    return this.state.following.map((user, index) => {\n      return (\n        <View>\n          <Text> {user.name.username} </Text>{\" \"}\n        </View>\n      );\n    });\n  };\n\n  followers = () => {\n    return this.state.followers.map((user, index) => {\n      return (\n        <View>\n          <Text> {user.name.username} </Text>{\" \"}\n        </View>\n      );\n    });\n  };\n\n  renderContactHeader = () => {\n    //const { avatar, name, bio } = this.props\n\n    return (\n      <View style={styles.headerContainer}>\n        <View style={styles.item}>\n          <View style={styles.userRow}>\n            <Image style={styles.userImage} source={{ uri: this.state.url }} />\n          </View>\n        </View>\n\n        <View style={styles.item2}>\n          <View style={{ height: 70, marginTop: 10, marginRight: 50 }}>\n            <Button title=\"logout\" onPress={this.LogOut} />\n            {/*<Button\n          title=\"Edit Profile\" \n          onPress={() => this.props.navigation.navigate('EditProfile')} \n        />*/}\n          </View>\n\n          <View style={styles.userRow}>\n            {/*<TextInput style={styles.TextInputurl} style={{ height: 30, marginTop: 10 , marginBottom: 10 , marginRight:1}}\n                    placeholder=\"urlpost\"\n                    onChangeText={ text => this.setState({urlpost: text})}\n                    value={this.state.urlpost} \n                /> \n\n<TextInput style={styles.TextInputurl} style={{ height: 30, marginTop: 10 , marginBottom: 10 , marginRight:1}}\n                    placeholder=\"Description\"\n                    onChangeText={ text => this.setState({description: text})}\n                    value={this.state.description} \n                />   */}\n\n            <Button onPress={this.Upload} title=\"upload post\" />\n          </View>\n          <View style={styles.userRow}>\n            <View style={styles.userNameRow}>\n              <Text style={styles.userNameText}>{this.state.name}</Text>\n            </View>\n            <View style={styles.userNameRow}>\n              <Text style={styles.userNameText}>@{this.state.username}</Text>\n            </View>\n            <View style={styles.userBioRow}>\n              <Text style={styles.userBioText}>{this.state.bio}</Text>\n            </View>\n          </View>\n        </View>\n      </View>\n    );\n  };\n\n  renderMansonry2Col = () => {\n    if (this.state.posts.length < 2) {\n      return (\n        <View>\n          <Text>AUCUN POST </Text>\n        </View>\n      );\n    } else {\n      return (\n        <View style={styles.masonryContainer}>\n          <View>\n            <Posts\n              containerStyle={styles.sceneContainer}\n              // posts={this.state.postsMasonry.leftCol}\n              posts={this.state.posts}\n              userid={this.state.id}\n            />\n          </View>\n          {/*<View>\n          <Posts\n            containerStyle={styles.sceneContainer}\n            //posts={this.state.postsMasonry.rightCol}\n          />\n        </View>*/}\n        </View>\n      );\n    }\n  };\n\n  render() {\n    return (\n      <ScrollView style={styles.scroll}>\n        <View style={[styles.container, this.props.containerStyle]}>\n          <View style={styles.cardContainer}>\n            {this.renderContactHeader()}\n\n            <TabView\n              style={[styles.tabContainer, this.props.tabContainerStyle]}\n              navigationState={this.state.tabs}\n              renderScene={this.renderScene}\n              renderTabBar={this.renderTabBar}\n              onIndexChange={this.handleIndexChange}\n            />\n          </View>\n        </View>\n      </ScrollView>\n    );\n  }\n}\n\nconst mapStatetoProps = (state) => {\n  return {\n    authToken: state.loginReducer.authToken,\n    userDetails: state.loginReducer.userDetails,\n    isLoading: state.postsReducer.isLoading,\n    isUploaded: state.postsReducer.isUploaded,\n    errMsg: state.postsReducer.errMsg,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    // only map needed dispatches here\n    logout: () => dispatch(logout()),\n    uploadpost: (Data) => dispatch(uploadpost(Data)),\n  };\n};\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(Profile);\n"]},"metadata":{},"sourceType":"module"}