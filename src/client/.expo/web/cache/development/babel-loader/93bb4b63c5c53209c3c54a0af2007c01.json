{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/home/sanata/Desktop/InpGram/InstaClone/src/client/Screens/Profile/EditPic.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport EditStyle from \"./EditStyle\";\nimport { Item, Input } from \"native-base\";\nimport { connect } from \"react-redux\";\nvar styles = StyleSheet.create(_objectSpread({}, EditStyle));\nimport axios from \"axios\";\nimport { modifypost as _modifypost } from \"../../actions/postsActions\";\nimport { baseURL } from \"../../constants\";\nimport { Icon } from \"native-base\";\n\nfunction EditPost(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      Description = _useState2[0],\n      putDescription = _useState2[1];\n\n  var didMountRef = useRef(false);\n  useEffect(function () {\n    putDescription(props.postdata.description);\n\n    if (didMountRef.current) {\n      if (props.isModified) {\n        props.navigation.navigate(\"Profile\");\n      }\n    } else {\n      didMountRef.current = true;\n    }\n  }, [props.isModified]);\n\n  var uploadprofilephoto = function uploadprofilephoto() {\n    var data = {\n      urlpost: props.postdata.urlpost,\n      userid: props.postdata.userid\n    };\n    props.uploadprofilephoto(data);\n  };\n\n  return React.createElement(View, {\n    style: styles.headerContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.userRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    style: styles.userImage,\n    source: {\n      uri: props.postdata.urlpost\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    title: \"Modify picture\",\n    onPress: uploadprofilephoto,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  })));\n}\n\nvar mapStatetoProps = function mapStatetoProps(state) {\n  return {\n    isModified: state.postsReducer.isModified,\n    postdata: state.postsReducer.postdata\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    modifypost: function modifypost(data) {\n      return dispatch(_modifypost(data));\n    }\n  };\n};\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(EditPost);","map":{"version":3,"sources":["/home/sanata/Desktop/InpGram/InstaClone/src/client/Screens/Profile/EditPic.js"],"names":["React","useState","useRef","useEffect","AsyncStorage","EditStyle","Item","Input","connect","styles","StyleSheet","create","axios","modifypost","baseURL","Icon","EditPost","props","Description","putDescription","didMountRef","postdata","description","current","isModified","navigation","navigate","uploadprofilephoto","data","urlpost","userid","headerContainer","userRow","userImage","uri","mapStatetoProps","state","postsReducer","mapDispatchToProps","dispatch"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;;;;;;;;SAUEC,Y;AAMF,OAAOC,SAAP;AAEA,SAASC,IAAT,EAAeC,KAAf,QAA4B,aAA5B;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,mBAAuBN,SAAvB,EAAf;AACA,OAAOO,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAU,IAAVA,WAAT;AACA,SAASC,OAAT;AAEA,SAASC,IAAT,QAAqB,aAArB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA,kBACehB,QAAQ,CAAC,EAAD,CADvB;AAAA;AAAA,MAChBiB,WADgB;AAAA,MACHC,cADG;;AAUvB,MAAMC,WAAW,GAAGlB,MAAM,CAAC,KAAD,CAA1B;AAGAC,EAAAA,SAAS,CAAC,YAAM;AACdgB,IAAAA,cAAc,CAACF,KAAK,CAACI,QAAN,CAAeC,WAAhB,CAAd;;AACA,QAAIF,WAAW,CAACG,OAAhB,EAAyB;AAEvB,UAAIN,KAAK,CAACO,UAAV,EAAsB;AACpBP,QAAAA,KAAK,CAACQ,UAAN,CAAiBC,QAAjB,CAA0B,SAA1B;AACD;AACF,KALD,MAKO;AACLN,MAAAA,WAAW,CAACG,OAAZ,GAAsB,IAAtB;AACD;AACF,GAVQ,EAUN,CAACN,KAAK,CAACO,UAAP,CAVM,CAAT;;AAYA,MAAMG,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAC/B,QAAMC,IAAI,GAAG;AACXC,MAAAA,OAAO,EAAEZ,KAAK,CAACI,QAAN,CAAeQ,OADb;AAEXC,MAAAA,MAAM,EAAEb,KAAK,CAACI,QAAN,CAAeS;AAFZ,KAAb;AAKAb,IAAAA,KAAK,CAACU,kBAAN,CAAyBC,IAAzB;AACD,GAPD;;AASA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEnB,MAAM,CAACsB,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEtB,MAAM,CAACuB,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAEvB,MAAM,CAACwB,SADhB;AAEE,IAAA,MAAM,EAAE;AAAEC,MAAAA,GAAG,EAAEjB,KAAK,CAACI,QAAN,CAAeQ;AAAtB,KAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,gBAAd;AAA+B,IAAA,OAAO,EAAEF,kBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF,CADF;AAYD;;AACD,IAAMQ,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AACjC,SAAO;AACLZ,IAAAA,UAAU,EAAEY,KAAK,CAACC,YAAN,CAAmBb,UAD1B;AAELH,IAAAA,QAAQ,EAAEe,KAAK,CAACC,YAAN,CAAmBhB;AAFxB,GAAP;AAID,CALD;;AAOA,IAAMiB,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACvC,SAAO;AAEL1B,IAAAA,UAAU,EAAE,oBAACe,IAAD;AAAA,aAAUW,QAAQ,CAAC1B,WAAU,CAACe,IAAD,CAAX,CAAlB;AAAA;AAFP,GAAP;AAID,CALD;;AAOA,eAAepB,OAAO,CAAC2B,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CtB,QAA7C,CAAf","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\n\nimport {\n  View,\n  Text,\n  Image,\n  Button,\n  TextInput,\n  StyleSheet,\n  Alert,\n  AsyncStorage,\n} from \"react-native\";\n//import { launchImageLibrary} from 'react-native-image-picker';\n//import {AsyncStorage} from \"@react-native-async-storage/async-storage\"\n//import {AsyncStorage} from \"@react-native-community/async-storage\"\n//var ImagePicker = require('react-native-image-picker');\nimport EditStyle from \"./EditStyle\";\n//mport { Item } from 'react-native-paper/lib/typescript/src/components/List/List';\nimport { Item, Input } from \"native-base\";\nimport { connect } from \"react-redux\";\n//export const ImageProfil = require('./imagea.jpeg');\nconst styles = StyleSheet.create({ ...EditStyle });\nimport axios from \"axios\";\nimport { modifypost } from \"../../actions/postsActions\";\nimport { baseURL } from \"../../constants\";\n\nimport { Icon } from \"native-base\";\n\nfunction EditPost(props) {\n  const [Description, putDescription] = useState(\"\");\n\n  /*static navigationOptions = {\n\n    tabBarIcon: ({ tintColor }) => (\n      <Icon name=\"ios-pencil\" style={{ color: tintColor }} />\n    )\n  }*/\n\n  const didMountRef = useRef(false);\n  // useEffect()to check if states have changed\n  // 2nd argument is the list of states you want to watch for\n  useEffect(() => {\n    putDescription(props.postdata.description);\n    if (didMountRef.current) {\n      // if login success, go to home screen\n      if (props.isModified) {\n        props.navigation.navigate(\"Profile\");\n      }\n    } else {\n      didMountRef.current = true;\n    }\n  }, [props.isModified]);\n\n  const uploadprofilephoto = () => {\n    const data = {\n      urlpost: props.postdata.urlpost,\n      userid: props.postdata.userid,\n    };\n\n    props.uploadprofilephoto(data);\n  };\n\n  return (\n    <View style={styles.headerContainer}>\n      <View style={styles.userRow}>\n        <Image\n          style={styles.userImage}\n          source={{ uri: props.postdata.urlpost }}\n        />\n\n        <Button title=\"Modify picture\" onPress={uploadprofilephoto} />\n      </View>\n    </View>\n  );\n}\nconst mapStatetoProps = (state) => {\n  return {\n    isModified: state.postsReducer.isModified,\n    postdata: state.postsReducer.postdata,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    // only map needed dispatches here\n    modifypost: (data) => dispatch(modifypost(data)),\n  };\n};\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(EditPost);\n"]},"metadata":{},"sourceType":"module"}